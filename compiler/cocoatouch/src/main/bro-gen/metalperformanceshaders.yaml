package: org.robovm.apple.metalps
include: [foundation, coregraphics, metal]
library: MetalPerformanceShaders
framework: MetalPerformanceShaders
internal_frameworks: [MPSCore, MPSMatrix, MPSNeuralNetwork, MPSImage, MPSNDArray, MPSRayIntersector]
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/MetalPerformanceShaders.framework/Headers/MetalPerformanceShaders.h

private_typedefs:
    'MPSImageBatch *': NSArray<MPSImage>
    MPSImageBatch: NSArray<MPSImage>
    'MPSStateBatch *': NSArray<? extends MPSState>
    'MPSStateBatch **': NSArray.NSArrayPtr<? extends MPSState>
    MPSStateBatch: NSArray<? extends MPSState>
    'MPSCNNConvolutionGradientStateBatch *': NSArray<MPSCNNConvolutionGradientState>
    MPSCNNConvolutionGradientStateBatch: NSArray<MPSCNNConvolutionGradientState>
    'MPSCNNArithmeticGradientStateBatch *': NSArray<MPSCNNArithmeticGradientState>
    MPSCNNArithmeticGradientStateBatch: NSArray<MPSCNNArithmeticGradientState>
    'MPSCNNInstanceNormalizationGradientStateBatch *': NSArray<MPSCNNInstanceNormalizationGradientState>
    MPSCNNInstanceNormalizationGradientStateBatch: NSArray<MPSCNNInstanceNormalizationGradientState>
    'MPSCNNLossLabelsBatch *': NSArray<MPSCNNLossLabels>
    MPSCNNLossLabelsBatch: NSArray<MPSCNNLossLabels>
    'MPSCNNConvolutionTransposeGradientStateBatch *': NSArray<MPSCNNConvolutionTransposeGradientState>
    'MPSCNNConvolutionTransposeGradientStateBatch **': NSArray.NSArrayPtr<MPSCNNConvolutionTransposeGradientState>
    MPSCNNConvolutionTransposeGradientStateBatch: NSArray<MPSCNNConvolutionTransposeGradientState>
    'MPSCNNDropoutGradientStateBatch *': NSArray<MPSCNNDropoutGradientState>
    MPSCNNDropoutGradientStateBatch: NSArray<MPSCNNDropoutGradientState>
    'MPSCNNGroupNormalizationGradientStateBatch *': NSArray<MPSCNNGroupNormalizationGradientState>
    MPSCNNGroupNormalizationGradientStateBatch: NSArray<MPSCNNGroupNormalizationGradientState>

enums:
    MPSKernelOptions: {}
    MPSImageEdgeMode: {}
    MPSImageFeatureChannelFormat: {MPSImageFeatureChannelFormat_reserved0: Reserved0}
    MPSDataType: {}
    MPSPurgeableState: {} #since 8.0
    MPSDataLayout: {} #since 11.0
    MPSStateResourceType: {}
    MPSAlphaType: {}
    MPSMatrixDecompositionStatus: {}
    MPSCNNConvolutionFlags: {}
    MPSCNNBinaryConvolutionFlags: {}
    MPSCNNBinaryConvolutionType: {}
    MPSNNConvolutionAccumulatorPrecisionOption: {}
    MPSNNTrainingStyle: {}
    MPSCNNBatchNormalizationFlags: {}
    MPSNNPaddingMethod: {}
    MPSCNNNeuronType: {}
    MPSCNNConvolutionGradientOption: {}
    MPSCNNLossType: {}
    MPSCNNReductionType: {}
    MPSRNNSequenceDirection: {}
    MPSRNNBidirectionalCombineMode: {}
    MPSCustomKernelIndex: {}
    MPSImageType: {prefix: MPSImage}
    MPSCNNWeightsQuantizationType: {}
    MPSRNNMatrixId: {}
    MPSNNRegularizationType: {} #since 12.0
    MPSNNComparisonType: {}
    #ios13
    MPSAliasingStrategy: {}
    MPSMatrixRandomDistribution: {}
    MPSCNNConvolutionWeightsLayout: {}
    MPSDeviceOptions: {}
    # ios13.4 bindings bellow (also missing frameworks added)
    MPSAccelerationStructureUsage: {} #since 12.0
    MPSAccelerationStructureStatus: {} #since 12.0
    MPSPolygonType: {} #since 13.0
    MPSTransformType: {} #since 12.0
    MPSTemporalWeighting: {} #since 13.0
    MPSIntersectionType: {} #since 12.0
    MPSTriangleIntersectionTestType: {} #since 12.0
    MPSBoundingBoxIntersectionTestType: {} #since 12.0
    MPSRayMaskOptions: {prefix: MPSRayMaskOption} #since 12.0
    MPSRayDataType: {} #since 12.0
    MPSIntersectionDataType: {} #since 12.0
    MPSRayMaskOperator: {} #since 13.0
    MPSDeviceCapsValues: {prefix: MPS}
    MPSFloatDataTypeBit: { prefix: MPSFloatDataType }
    MPSFloatDataTypeShift: { prefix: MPSFloatDataType }
classes:
    # structs
    MPSOrigin: {}
    MPSRegion: {}
    MPSOffset: {}
    MPSScaleTransform: {}
    MPSSize: {}
    MPSStateTextureInfo: {}
    MPSImageReadWriteParams: {}
    MPSImageHistogramInfo: {}
    MPSMatrixOffset: {}
    MPSMatrixCopyOffsets: {}
    MPSImageKeypointRangeInfo: {}
    MPSImageCoordinate: {}
    #ios13
    MPSCustomKernelArgumentCount: {}
    MPSDimensionSlice: {}
    MPSImageRegion: {}
    MPSCustomKernelSourceInfo: {}
    MPSCustomKernelInfo: {}
    MPSIntegerDivisionParams: {}
    MPSImageKeypointData: {}
    #ios13.4
    MPSNDArrayOffsets: {}
    MPSNDArraySizes: {}
    MPSPackedFloat3: { exclude: true } # manually written
    MPSAxisAlignedBoundingBox: {}
    MPSRayOriginDirection: {}
    MPSRayPackedOriginDirection: {}
    MPSRayOriginMinDistanceDirectionMaxDistance: {}
    MPSRayOriginMaskDirectionMaxDistance: {}
    MPSIntersectionDistance: {}
    MPSIntersectionDistancePrimitiveIndex: {}
    MPSIntersectionDistancePrimitiveIndexCoordinates: {}
    MPSIntersectionDistancePrimitiveIndexInstanceIndex: {}
    MPSIntersectionDistancePrimitiveIndexInstanceIndexCoordinates: {}
    MPSIntersectionDistancePrimitiveIndexBufferIndex: {}
    MPSIntersectionDistancePrimitiveIndexBufferIndexCoordinates: {}
    MPSIntersectionDistancePrimitiveIndexBufferIndexInstanceIndex: {}
    MPSIntersectionDistancePrimitiveIndexBufferIndexInstanceIndexCoordinates: {}
    # classes
    MPSBinaryImageKernel: #since 9.0
        methods:
            '-encodeToCommandBuffer:primaryTexture:inPlaceSecondaryTexture:fallbackCopyAllocator:':
                name: encodePrimaryTexture
            '-encodeToCommandBuffer:inPlacePrimaryTexture:secondaryTexture:fallbackCopyAllocator:':
                name: encodeSecondaryTexture
            '-encodeToCommandBuffer:primaryTexture:secondaryTexture:destinationTexture:':
                name: encode
            '-encodeToCommandBuffer:primaryImage:secondaryImage:destinationImage:':
                name: encode
    MPSCNNAdd: {} #since 11.3
    MPSCNNAddGradient: #since 11.3
        methods:
            '-initWithDevice:isSecondarySourceFilter:':
                name: init
    MPSCNNArithmetic: #since 11.3
        methods:
            '-encodeToCommandBuffer:primaryImage:secondaryImage:destinationState:destinationImage:':
                name: encode
            '-encodeBatchToCommandBuffer:primaryImages:secondaryImages:destinationStates:destinationImages:':
                name: encodeBatch
    MPSCNNArithmeticGradient: {} #since 11.3
    MPSCNNArithmeticGradientState: {} #since 11.3
    MPSCNNBatchNormalization: #since 11.3
        methods:
            '-init.*':
                name: init
            '-encodeToCommandBuffer:sourceImage:batchNormalizationState:destinationImage:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:batchNormalizationState:destinationImages:':
                name: encodeBatch
            '-resultStateForSourceImage:sourceStates:destinationImage:':
                name: getResultState
            '-temporaryResultStateForCommandBuffer:sourceImage:sourceStates:destinationImage:':
                name: getTemporaryResult
            '-reloadGammaAndBetaWithCommandBuffer:gammaAndBetaState:':
                name: reloadGammaAndBeta
            '-reloadMeanAndVarianceWithCommandBuffer:meanAndVarianceState:':
                name: reloadMeanAndVariance
    MPSCNNBatchNormalizationGradient: #since 11.3
        methods:
            '-initWithDevice:fusedNeuronDescriptor:':
                name: init
            '-encodeToCommandBuffer:sourceGradient:sourceImage:batchNormalizationState:destinationGradient:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceGradients:sourceImages:batchNormalizationState:destinationGradients:':
                name: encodeBatch
            '-encodeToCommandBuffer:sourceGradient:sourceImage:batchNormalizationState:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceGradients:sourceImages:batchNormalizationState:':
                name: encodeBatch
    MPSCNNBatchNormalizationGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:':
                exclude: true
    MPSCNNBatchNormalizationNode: #since 11.3
        methods:
            '-initWithSource:dataSource:':
                name: init
            '+nodeWithSource:dataSource:':
                exclude: true
    MPSCNNBatchNormalizationState: {} #since 11.3
    MPSCNNBatchNormalizationStatistics: #since 11.3
        methods:
            '-encodeBatchToCommandBuffer:sourceImages:batchNormalizationState:':
                name: encodeBatch
    MPSCNNBatchNormalizationStatisticsGradient: #since 11.3
        methods:
            '-initWithDevice:fusedNeuronDescriptor:':
                name: init
            '-encodeBatchToCommandBuffer:sourceGradients:sourceImages:batchNormalizationState:':
                name: encodeBatch
    MPSCNNBinaryConvolution: #since 11.0
        methods:
            '-init.*':
                name: init
    MPSCNNBinaryConvolutionNode: #since 11.0
        methods:
            '-init.*':
                name: init
            '+nodeWithSource:weights:scaleValue:type:flags:':
                exclude: true
            '+nodeWithSource:weights:outputBiasTerms:outputScaleTerms:inputBiasTerms:inputScaleTerms:type:flags:':
                exclude: true
    MPSCNNBinaryFullyConnected: #since 11.0
        methods:
            '-init.*':
                name: init
    MPSCNNBinaryFullyConnectedNode: #since 11.0
        methods:
            '-init.*':
                name: init
            '+nodeWithSource:weights:scaleValue:type:flags:':
                exclude: true
            '+nodeWithSource:weights:outputBiasTerms:outputScaleTerms:inputBiasTerms:inputScaleTerms:type:flags:':
                exclude: true
    MPSCNNBinaryKernel: #since 11.0
        methods:
            '-encodeToCommandBuffer:primaryImage:secondaryImage:destinationImage:':
                name: encode
            '-encodeBatchToCommandBuffer:primaryImages:secondaryImages:destinationImages:':
                name: encodeBatch
            '-encodeToCommandBuffer:primaryImage:secondaryImage:':
                name: encode
            '-encodeBatchToCommandBuffer:primaryImages:secondaryImages:':
                name: encodeBatch
            '-encodeToCommandBuffer:primaryImage:secondaryImage:destinationState:destinationStateIsTemporary:':
                name: encode
            '-encodeBatchToCommandBuffer:primaryImages:secondaryImages:destinationStates:destinationStateIsTemporary:':
                name: encodeBatch
            '-resultStateForPrimaryImage:secondaryImage:sourceStates:destinationImage:':
                name: getResultState
            '-resultStateBatchForPrimaryImage:secondaryImage:sourceStates:destinationImage:':
                name: getResultStateBatch
            '-temporaryResultStateForCommandBuffer:primaryImage:secondaryImage:sourceStates:destinationImage:':
                name: getTemporaryResultState
            '-temporaryResultStateBatchForCommandBuffer:primaryImage:secondaryImage:sourceStates:destinationImage:':
                name: getTemporaryResultStateBatch
            '-destinationImageDescriptorForSourceImages:sourceStates:':
                name: getDestinationImageDescriptor
            '-encodingStorageSizeForPrimaryImage:secondaryImage:sourceStates:destinationImage:':
                name: encodingStorageSize
            '-batchEncodingStorageSizeForPrimaryImage:secondaryImage:sourceStates:destinationImage:':
                name: batchEncodingStorageSize
    MPSCNNConvolution: #since 10.0
        methods:
            '-initWithDevice:weights:':
                name: init
            '-initWithDevice:convolutionDescriptor:kernelWeights:biasTerms:flags:':
                name: init
            '-resultStateForSourceImage:sourceStates:destinationImage:':
                name: getResultState
            '-resultStateBatchForSourceImage:sourceStates:destinationImage:':
                name: getResultStateBatch
            '-temporaryResultStateForCommandBuffer:sourceImage:sourceStates:destinationImage:':
                name: getResultState
            '-temporaryResultStateBatchForCommandBuffer:sourceImage:sourceStates:destinationImage:':
                name: getTemporaryResultStateBatch
            '-reloadWeightsAndBiasesWithCommandBuffer:state:':
                name: reloadWeightsAndBiases
            '-exportWeightsAndBiasesWithCommandBuffer:resultStateCanBeTemporary:':
                name: exportWeightsAndBiases
            '-reloadWeightsAndBiasesWithDataSource:':
                name: reloadWeightsAndBiases
    MPSCNNConvolutionDescriptor: #since 10.0
        methods:
            '-setBatchNormalizationParametersForInferenceWithMean:variance:gamma:beta:epsilon:':
                name: setBatchNormalizationParameters
            '-setNeuronType:parameterA:parameterB:':
                trim_after_first_colon: true
            '-setNeuronToPReLUWithParametersA:':
                name: setNeuronToPReLU
            '+cnnConvolutionDescriptorWithKernelWidth:kernelHeight:inputFeatureChannels:outputFeatureChannels:neuronFilter:':
                constructor: true
                name: create
            '+cnnConvolutionDescriptorWithKernelWidth:kernelHeight:inputFeatureChannels:outputFeatureChannels:':
                constructor: true
                name: create
    MPSCNNConvolutionGradient: #since 11.3
        methods:
            '-init.*':
                name: init
            '-reloadWeightsAndBiasesWithCommandBuffer:state:':
                name: reloadWeightsAndBiases
    MPSCNNConvolutionGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:convolutionGradientState:weights:':
                name: init
            '+nodeWithSourceGradient:sourceImage:convolutionGradientState:weights:':
                exclude: true
    MPSCNNConvolutionGradientState: {} #since 11.3
    MPSCNNConvolutionGradientStateNode: {} #since 11.3
    MPSCNNConvolutionNode: #since 11.0
        methods:
            '-initWithSource:weights:':
                name: init
            '+nodeWithSource:weights:':
                exclude: true
    MPSCNNConvolutionTranspose: #since 11.0
        methods:
            '-initWithDevice:weights:':
                name: init
            '-encodeToCommandBuffer:sourceImage:convolutionGradientState:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:convolutionGradientStates:':
                name: encodeBatchConvolutionGradient
            '-encodeToCommandBuffer:sourceImage:convolutionGradientState:destinationImage:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:convolutionGradientStates:destinationImages:':
                name: encodeBatchConvolutionGradient
            '-reloadWeightsAndBiasesWithCommandBuffer:state:':
                name: reloadWeightsAndBiases
            '-exportWeightsAndBiasesWithCommandBuffer:resultStateCanBeTemporary:':
                name: exportWeightsAndBiases
            '-encodeToCommandBuffer:sourceImage:convolutionGradientState:destinationState:destinationStateIsTemporary:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:convolutionGradientStates:destinationStates:destinationStateIsTemporary:':
                name: encodeBatch
            # following are renamed with ex as clashes with MPSCNNKernel
            '-resultStateForSourceImage:sourceStates:destinationImage:':
                name: getResultStateEx
            '-resultStateBatchForSourceImage:sourceStates:destinationImage:':
                name: getResultStateBatchEx
            '-temporaryResultStateForCommandBuffer:sourceImage:sourceStates:destinationImage:':
                name: getTemporaryResultEx
            '-temporaryResultStateBatchForCommandBuffer:sourceImage:sourceStates:destinationImage:':
                name: getTemporaryResultStateBatchEx
    MPSCNNConvolutionTransposeNode: #since 11.0
        methods:
            '-initWithSource:convolutionGradientState:weights:':
                name: init
            '+nodeWithSource:convolutionGradientState:weights:':
                exclude: true
    MPSCNNConvolutionWeightsAndBiasesState: #since 11.3
        methods:
            '-init.*':
                name: init
            '+temporaryCNNConvolutionWeightsAndBiasesStateWithCommandBuffer:cnnConvolutionDescriptor:':
                constructor: true
                name: create
    MPSCNNCrossChannelNormalization: #since 10.0
        methods:
            '-init.*':
                name: init
    MPSCNNCrossChannelNormalizationGradient: #since 11.3
        methods:
            '-init.*':
                name: init
    MPSCNNCrossChannelNormalizationGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:kernelSize:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:kernelSize:':
                exclude: true
    MPSCNNCrossChannelNormalizationNode: #since 11.0
        methods:
            '-initWithSource:kernelSize:':
                name: init
            '+nodeWithSource:kernelSize:':
                exclude: true
    MPSCNNDepthWiseConvolutionDescriptor: {} #since 11.0
    MPSCNNDilatedPoolingMax: #since 11.0
        methods:
            '-init.*':
                name: init
    MPSCNNDilatedPoolingMaxGradient: #since 11.3
        methods:
            '-init.*':
                name: init
    MPSCNNDilatedPoolingMaxGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:kernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:dilationRateX:dilationRateY:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:kernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:dilationRateX:dilationRateY:':
                exclude: true
    MPSCNNDilatedPoolingMaxNode: #since 11.0
        methods:
            '-init.*':
                name: init
            '+nodeWithSource:filterSize:':
                exclude: true
            '+nodeWithSource:filterSize:stride:dilationRate:':
                exclude: true
    MPSCNNDivide: {} #since 11.3
    MPSCNNDropout: #since 11.3
        methods:
            '-init.*':
                name: init
            '-resultStateBatchForSourceImage:sourceStates:destinationImage:':
                name: getResultStateBatchEx # as clashes with MPSCNNKernel
    MPSCNNDropoutGradient: #since 11.3
        methods:
            '-init.*':
                name: init
    MPSCNNDropoutGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:keepProbability:seed:maskStrideInPixels:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:keepProbability:seed:maskStrideInPixels:':
                exclude: true
    MPSCNNDropoutGradientState: {} #since 11.3
    MPSCNNDropoutNode: #since 11.3
        methods:
            '-initWithSource:':
                name: init
            '-initWithSource:keepProbability:':
                name: init
            '-initWithSource:keepProbability:seed:maskStrideInPixels:':
                name: init
            '+nodeWithSource:keepProbability:':
                exclude: true
            '+nodeWithSource:keepProbability:seed:maskStrideInPixels:':
                exclude: true
            '+nodeWithSource:':
                exclude: true
    MPSCNNFullyConnected: #since 10.0
        methods:
            '-init.*':
                name: init
    MPSCNNFullyConnectedGradient: #since 11.3
        methods:
            '-init.*':
                name: init
    MPSCNNFullyConnectedNode: #since 11.0
        methods:
            '-initWithSource:weights:':
                name: init
            '+nodeWithSource:weights:':
                exclude: true
    MPSCNNGradientKernel: #since 11.3
        methods:
            '-encodeToCommandBuffer:sourceGradient:sourceImage:gradientState:':
                name: encode
            '-encodeToCommandBuffer:sourceGradient:sourceImage:gradientState:destinationGradient:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceGradients:sourceImages:gradientStates:':
                name: encodeBatchGradients
            '-encodeBatchToCommandBuffer:sourceGradients:sourceImages:gradientStates:destinationGradients:':
                name: encodeBatchGradients
    MPSCNNInstanceNormalization: #since 11.3
        methods:
            '-init.*':
                name: init
            '-reloadGammaAndBetaWithCommandBuffer:gammaAndBetaState:':
                name: reloadGammaAndBeta
            '-resultStateForSourceImage:sourceStates:destinationImage:':
                name: getResultState
            '-temporaryResultStateForCommandBuffer:sourceImage:sourceStates:destinationImage:':
                name: getTemporaryResultState
    MPSCNNInstanceNormalizationGradient: {} #since 11.3
    MPSCNNInstanceNormalizationGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:':
                exclude: true
    MPSCNNInstanceNormalizationGradientState: {} #since 11.3
    MPSCNNInstanceNormalizationNode: #since 11.3
        methods:
            '-initWithSource:dataSource:':
                name: init
            '+nodeWithSource:dataSource:':
                exclude: true
    MPSCNNKernel: #since 10.0
        methods:
            '-encodeToCommandBuffer:sourceImage:destinationImage:':
                name: encode
            '-encodeToCommandBuffer:sourceImage:destinationState:destinationImage:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:destinationImages:':
                name: encodeBatch0
            '-encodeBatchToCommandBuffer:sourceImages:destinationStates:destinationImages:':
                name: encodeBatch0
            '-encodeToCommandBuffer:sourceImage:':
                name: encode
            '-encodeToCommandBuffer:sourceImage:destinationState:destinationStateIsTemporary:':
                name: encode
            '-destinationImageDescriptorForSourceImages:sourceStates:':
                name: getDestinationImageDescriptor
            '-encodingStorageSizeForSourceImage:sourceStates:destinationImage:':
                name: getEncodingStorageSize
            '-batchEncodingStorageSizeForSourceImage:sourceStates:destinationImage:':
                name: getBatchEncodingStorageSize
            '-encodeBatchToCommandBuffer:sourceImages:':
                name: encodeBatch
            '-encodeBatchToCommandBuffer:sourceImages:destinationStates:destinationStateIsTemporary:':
                name: encodeBatch
            '-resultStateForSourceImage:sourceStates:destinationImage:':
                name: getResultState
            '-resultStateBatchForSourceImage:sourceStates:destinationImage:':
                name: getResultStateBatch
            '-temporaryResultStateForCommandBuffer:sourceImage:sourceStates:destinationImage:':
                name: getTemporaryResult
            '-temporaryResultStateBatchForCommandBuffer:sourceImage:sourceStates:destinationImage:':
                name: getTemporaryResultStateBatch
    MPSCNNLocalContrastNormalization: #since 10.0
        methods:
            '-init.*':
                name: init
    MPSCNNLocalContrastNormalizationGradient: #since 11.3
        methods:
            '-init.*':
                name: init
    MPSCNNLocalContrastNormalizationGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:kernelWidth:kernelHeight:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:kernelWidth:kernelHeight:':
                exclude: true
    MPSCNNLocalContrastNormalizationNode: #since 11.0
        methods:
            '-initWithSource:kernelSize:':
                name: init
            '+nodeWithSource:kernelSize:':
                exclude: true
    MPSCNNLogSoftMax: {} #since 10.0
    MPSCNNLogSoftMaxGradient: {} #since 11.3
    MPSCNNLogSoftMaxGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:':
                exclude: true
    MPSCNNLogSoftMaxNode: #since 11.0
        methods:
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNLoss: #since 11.3
        methods:
            '-initWithDevice:lossDescriptor:':
                name: init
            '-encodeToCommandBuffer:sourceImage:labels:destinationImage:':
                name: encode
            '-encodeToCommandBuffer:sourceImage:labels:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:labels:destinationImages:':
                name: encodeBatchLabels
            '-encodeBatchToCommandBuffer:sourceImages:labels:':
                name: encodeBatchLabels
    MPSCNNLossDataDescriptor: #since 11.3
        methods:
            '+cnnLossDataDescriptorWithData:layout:size:':
                constructor: true
                name: create
    MPSCNNLossDescriptor: #since 11.3
        methods:
            '+cnnLossDescriptorWithType:reductionType:':
                constructor: true
                name: create
    MPSCNNLossLabels: #since 11.3
        methods:
            '-init.*':
                name: init
    MPSCNNLossNode: #since 11.3
        methods:
            '-initWithSource:lossDescriptor:':
                name: init
            '+nodeWithSource:lossDescriptor:':
                exclude: true
    MPSCNNMultiply: {} #since 11.3
    MPSCNNMultiplyGradient: #since 11.3
        methods:
            '-initWithDevice:isSecondarySourceFilter:':
                name: init
    MPSCNNNeuron: #since 10.0
        methods:
            '-initWithDevice:neuronDescriptor:':
                name: init
    MPSCNNNeuronAbsolute: {} #since 10.0
    MPSCNNNeuronAbsoluteNode: #since 11.0
        methods:
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNeuronELU: #since 11.0
        methods:
            '-initWithDevice:a:':
                name: init
    MPSCNNNeuronELUNode: #since 11.0
        methods:
            '-initWithSource:a:':
                name: init
            '+nodeWithSource:a:':
                exclude: true
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNeuronExponential: #since 11.3
        methods:
            '-initWithDevice:a:b:c:':
                name: init
    MPSCNNNeuronExponentialNode: #since 11.3
        methods:
            '-initWithSource:a:b:c:':
                name: init
            '+nodeWithSource:a:b:c:':
                exclude: true
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNeuronGradient: #since 11.3
        methods:
            '-init.*':
                name: init
    MPSCNNNeuronGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:descriptor:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:descriptor:':
                exclude: true
    MPSCNNNeuronHardSigmoid: #since 11.0
        methods:
            '-initWithDevice:a:b:':
                name: init
    MPSCNNNeuronHardSigmoidNode: #since 11.0
        methods:
            '-initWithSource:a:b:':
                name: init
            '+nodeWithSource:a:b:':
                exclude: true
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNeuronLinear: #since 10.0
        methods:
            '-initWithDevice:a:b:':
                name: init
    MPSCNNNeuronLinearNode: #since 11.0
        methods:
            '-initWithSource:a:b:':
                name: init
            '+nodeWithSource:a:b:':
                exclude: true
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNeuronLogarithm: #since 11.3
        methods:
            '-initWithDevice:a:b:c:':
                name: init
    MPSCNNNeuronLogarithmNode: #since 11.3
        methods:
            '-initWithSource:a:b:c:':
                name: init
            '+nodeWithSource:a:b:c:':
                exclude: true
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNeuronNode:  #since 11.0
        methods:
            '+nodeWithSource:descriptor:':
                name: create
                constgructor: true
    MPSCNNNeuronPReLU: #since 11.0
        methods:
            '-initWithDevice:a:count:':
                name: init
    MPSCNNNeuronPReLUNode: #since 11.0
        methods:
            '-initWithSource:aData:':
                name: init
            '+nodeWithSource:aData:':
                exclude: true
    MPSCNNNeuronPower: #since 11.3
        methods:
            '-initWithDevice:a:b:c:':
                name: init
    MPSCNNNeuronPowerNode: #since 11.3
        methods:
            '-initWithSource:a:b:c:':
                name: init
            '+nodeWithSource:a:b:c:':
                exclude: true
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNeuronReLU: #since 10.0
        methods:
            '-initWithDevice:a:':
                name: init
    MPSCNNNeuronReLUN: #since 11.0
        methods:
            '-initWithDevice:a:b:':
                name: init
    MPSCNNNeuronReLUNNode: #since 11.0
        methods:
            '-initWithSource:a:b:':
                name: init
            '+nodeWithSource:a:b:':
                exclude: true
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNeuronReLUNode: #since 11.0
        methods:
            '-initWithSource:a:':
                name: init
            '+nodeWithSource:a:':
                exclude: true
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNeuronSigmoid: {} #since 10.0
    MPSCNNNeuronSigmoidNode: #since 11.0
        methods:
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNeuronSoftPlus: #since 11.0
        methods:
            '-initWithDevice:a:b:':
                name: init
    MPSCNNNeuronSoftPlusNode: #since 11.0
        methods:
            '-initWithSource:a:b:':
                name: init
            '+nodeWithSource:a:b:':
                exclude: true
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNeuronSoftSign: {} #since 11.0
    MPSCNNNeuronSoftSignNode: #since 11.0
        methods:
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNeuronTanH: #since 10.0
        methods:
            '-initWithDevice:a:b:':
                name: init
    MPSCNNNeuronTanHNode: #since 11.0
        methods:
            '-initWithSource:a:b:':
                name: init
            '+nodeWithSource:a:b:':
                exclude: true
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNNormalizationGammaAndBetaState: #since 11.3
        methods:
            '-initWithGamma:beta:':
                name: init
            '+temporaryStateWithCommandBuffer:numberOfFeatureChannels:':
                constructor: true
                name: createTemporaryState
    MPSCNNNormalizationNode: #since 11.0
        methods:
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNPooling: #since 10.0
        methods:
            '-initWithDevice:kernelWidth:kernelHeight:':
                name: init
            '-initWithDevice:kernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:':
                name: init
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNPoolingAverage: {} #since 10.0
    MPSCNNPoolingAverageGradient: {} #since 11.3
    MPSCNNPoolingAverageGradientNode: {} #since 11.3
    MPSCNNPoolingAverageNode: {} #since 11.0
    MPSCNNPoolingGradient: #since 11.3
        methods:
            '-initWithDevice:kernelWidth:kernelHeight:':
                name: init
            '-initWithDevice:kernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:':
                name: init
    MPSCNNPoolingGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:kernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:paddingPolicy:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:kernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:paddingPolicy:':
                exclude: true
    MPSCNNPoolingL2Norm: {} #since 11.0
    MPSCNNPoolingL2NormGradient: {} #since 11.3
    MPSCNNPoolingL2NormGradientNode: {} #since 11.3
    MPSCNNPoolingL2NormNode: {} #since 11.0
    MPSCNNPoolingMax: #since 10.0
        methods:
            '-init.*':
                name: init
    MPSCNNPoolingMaxGradient: #since 11.3
        methods:
            '-init.*':
                name: init
    MPSCNNPoolingMaxGradientNode: {} #since 11.3
    MPSCNNPoolingMaxNode: {} #since 11.0
    MPSCNNPoolingNode: #since 11.0
        methods:
            '-init.*':
                name: init
            '+nodeWithSource:filterSize:':
                exclude: true
            '+nodeWithSource:filterSize:stride:':
                exclude: true
    MPSCNNSoftMax: {} #since 10.0
    MPSCNNSoftMaxGradient: {} #since 11.3
    MPSCNNSoftMaxGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:':
                exclude: true
    MPSCNNSoftMaxNode: #since 11.0
        methods:
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCNNSpatialNormalization: #since 10.0
        methods:
            '-init.*':
                name: init
    MPSCNNSpatialNormalizationGradient: #since 11.3
        methods:
            '-init.*':
                name: init
    MPSCNNSpatialNormalizationGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:kernelSize:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:kernelSize:':
                exclude: true
    MPSCNNSpatialNormalizationNode: #since 11.0
        methods:
            '-initWithSource:kernelSize:':
                name: init
            '+nodeWithSource:kernelSize:':
                exclude: true
    MPSCNNSubPixelConvolutionDescriptor: {} #since 11.0
    MPSCNNSubtract: {} #since 11.3
    MPSCNNSubtractGradient: #since 11.3
        methods:
            '-initWithDevice:isSecondarySourceFilter:':
                name: init
    MPSCNNUpsampling: {} #since 11.0
    MPSCNNUpsamplingBilinear: #since 11.0
        methods:
            '-initWithDevice:integerScaleFactorX:integerScaleFactorY:':
                name: init
            '-initWithDevice:integerScaleFactorX:integerScaleFactorY:alignCorners:':
                name: init
    MPSCNNUpsamplingBilinearGradient: #since 11.3
        methods:
            '-initWithDevice:integerScaleFactorX:integerScaleFactorY:':
                name: init
    MPSCNNUpsamplingBilinearGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:scaleFactorX:scaleFactorY:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:scaleFactorX:scaleFactorY:':
                exclude: true
    MPSCNNUpsamplingBilinearNode: #since 11.0
        methods:
            '-initWithSource:integerScaleFactorX:integerScaleFactorY:':
                name: init
            '+nodeWithSource:integerScaleFactorX:integerScaleFactorY:':
                exclude: true
            '-initWithSource:integerScaleFactorX:integerScaleFactorY:alignCorners:':
                name: init
            '+nodeWithSource:integerScaleFactorX:integerScaleFactorY:alignCorners:':
                exclude: true
    MPSCNNUpsamplingGradient: {} #since 11.3
    MPSCNNUpsamplingNearest: #since 11.0
        methods:
            '-initWithDevice:integerScaleFactorX:integerScaleFactorY:':
                name: init
    MPSCNNUpsamplingNearestGradient: #since 11.3
        methods:
            '-initWithDevice:integerScaleFactorX:integerScaleFactorY:':
                name: init
    MPSCNNUpsamplingNearestGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:scaleFactorX:scaleFactorY:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:scaleFactorX:scaleFactorY:':
                exclude: true
    MPSCNNUpsamplingNearestNode: #since 11.0
        methods:
            '-initWithSource:integerScaleFactorX:integerScaleFactorY:':
                name: init
            '+nodeWithSource:integerScaleFactorX:integerScaleFactorY:':
                exclude: true
    MPSGRUDescriptor: #since 11.0
        methods:
            '+createGRUDescriptorWithInputFeatureChannels:outputFeatureChannels:':
                constructor: true
                name: create
    MPSImage: #since 10.0
        methods:
            '-init.*':
                name: init
            '-readBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:':
                trim_after_first_colon: true
            '-writeBytes:dataLayout:bytesPerRow:region:featureChannelInfo:imageIndex:':
                trim_after_first_colon: true
            '-readBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:':
                trim_after_first_colon: true
            '-writeBytes:dataLayout:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:':
                trim_after_first_colon: true
            '-readBytes:dataLayout:imageIndex:':
                trim_after_first_colon: true
            '-writeBytes:dataLayout:imageIndex:':
                trim_after_first_colon: true
            '-batchRepresentationWithSubRange:':
                name: batchRepresentation
            '-subImageWithFeatureChannelRange:':
                name: subImage
            '-writeBytes:dataLayout:bytesPerColumn:bytesPerRow:bytesPerImage:region:featureChannelInfo:imageIndex:':
                name: writeBytes
    MPSImageAdd: {} #since 11.0
    MPSImageAreaMax: #since 9.0
        methods:
            '-initWithDevice:kernelWidth:kernelHeight:':
                name: init
    MPSImageAreaMin: {} #since 9.0
    MPSImageArithmetic: {} #since 11.0
    MPSImageBilinearScale: {} #since 11.0
    MPSImageBox: #since 9.0
        methods:
            '-initWithDevice:kernelWidth:kernelHeight:':
                name: init
    MPSImageConversion: #since 10.0
        methods:
            '-initWithDevice:srcAlpha:destAlpha:backgroundColor:conversionInfo:':
                name: init
    MPSImageConvolution: #since 9.0
        methods:
            '-init.*':
                name: init
    MPSImageCopyToMatrix: #since 11.0
        methods:
            '-init.*':
                name: init
            '-encodeToCommandBuffer:sourceImage:destinationMatrix:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:destinationMatrix:':
                name: encode
    MPSImageDescriptor: #since 10.0
        methods:
            '+imageDescriptorWithChannelFormat:width:height:featureChannels:':
                constructor: true
                name: create
            '+imageDescriptorWithChannelFormat:width:height:featureChannels:numberOfImages:usage:':
                constructor: true
                name: create
            '-copyWithZone:':
                name: copy
    MPSImageDilate: #since 9.0
        methods:
            '-initWithDevice:kernelWidth:kernelHeight:values:':
                name: init
    MPSImageDivide: {} #since 11.0
    MPSImageErode: {} #since 9.0
    MPSImageEuclideanDistanceTransform: {} #since 11.3
    MPSImageFindKeypoints: #since 11.0
        methods:
            '-init.*':
                name: init
            '-encodeToCommandBuffer:sourceTexture:regions:numberOfRegions:keypointCountBuffer:keypointCountBufferOffset:keypointDataBuffer:keypointDataBufferOffset:':
                name: encode
    MPSImageGaussianBlur: #since 9.0
        methods:
            '-init.*':
                name: init
    MPSImageGaussianPyramid: {} #since 10.0
    MPSImageGuidedFilter: #since 11.3
        methods:
            '-init.*':
                name: init
            '-encodeRegressionToCommandBuffer:sourceTexture:guidanceTexture:weightsTexture:destinationCoefficientsTexture:':
                name: encodeRegression
            '-encodeReconstructionToCommandBuffer:guidanceTexture:coefficientsTexture:destinationTexture:':
                name: encodeReconstruction
            '-encodeRegressionToCommandBuffer:sourceTexture:guidanceTexture:weightsTexture:destinationCoefficientsTextureA:destinationCoefficientsTextureB:':
                name: encodeRegression
            '-encodeReconstructionToCommandBuffer:guidanceTexture:coefficientsTextureA:coefficientsTextureB:destinationTexture:':
                name: encodeReconstruction
    MPSImageHistogram: #since 9.0
        methods:
            '-init.*':
                name: init
            '-encodeToCommandBuffer:sourceTexture:histogram:histogramOffset:':
                name: encode
    MPSImageHistogramEqualization: #since 9.0
        methods:
            '-init.*':
                name: init
            '-encodeTransformToCommandBuffer:sourceTexture:histogram:histogramOffset:':
                name: encodeTransform
    MPSImageHistogramSpecification: #since 9.0
        methods:
            '-init.*':
                name: init
            '-encodeTransformToCommandBuffer:sourceTexture:sourceHistogram:sourceHistogramOffset:desiredHistogram:desiredHistogramOffset:':
                name: encodeTransform
    MPSImageIntegral: {} #since 9.0
    MPSImageIntegralOfSquares: {} #since 9.0
    MPSImageLanczosScale: {} #since 9.0
    MPSImageLaplacian: {} #since 10.0
    MPSImageMedian: #since 9.0
        methods:
            '-init.*':
                name: init
    MPSImageMultiply: {} #since 11.0
    MPSImagePyramid: #since 10.0
        methods:
            '-initWithDevice:centerWeight:':
                name: init
            '-initWithDevice:kernelWidth:kernelHeight:weights:':
                name: init
    MPSImageReduceColumnMax: {} #since 11.3
    MPSImageReduceColumnMean: {} #since 11.3
    MPSImageReduceColumnMin: {} #since 11.3
    MPSImageReduceColumnSum: {} #since 11.3
    MPSImageReduceRowMax: {} #since 11.3
    MPSImageReduceRowMean: {} #since 11.3
    MPSImageReduceRowMin: {} #since 11.3
    MPSImageReduceRowSum: {} #since 11.3
    MPSImageReduceUnary: {} #since 11.3
    MPSImageScale: {} #since 11.0
    MPSImageSobel: #since 9.0
        methods:
            '-init.*':
                name: init
    MPSImageStatisticsMean: {} #since 11.0
    MPSImageStatisticsMeanAndVariance: {} #since 11.0
    MPSImageStatisticsMinAndMax: {} #since 11.0
    MPSImageSubtract: {} #since 11.0
    MPSImageTent: {} #since 9.0
    MPSImageThresholdBinary: #since 9.0
        methods:
            '-init.*':
                name: init
    MPSImageThresholdBinaryInverse: #since 9.0
        methods:
            '-init.*':
                name: init
    MPSImageThresholdToZero: #since 9.0
        methods:
            '-init.*':
                name: init
    MPSImageThresholdToZeroInverse: #since 9.0
        methods:
            '-init.*':
                name: init
    MPSImageThresholdTruncate: #since 9.0
        methods:
            '-init.*':
                name: init
    MPSImageTranspose: {} #since 9.0
    MPSKernel: #since 9.0
        methods:
            '-copyWithZone:device:':
                name: copy
            '-initWithCoder:device:':
                name: init
                parameters:
                    aDecoder:
                        name: decoder
            '-initWithDevice:':
                name: init
    MPSKeyedUnarchiver: #since 11.3
        methods:
            '-initForReadingWithData:device:':
                name: init
            '-initWithDevice:':
                name: init
            '+unarchiveObjectWithData:device:':
                name: unarchiveObject
            '+unarchiveTopLevelObjectWithData:device:error:':
                name: unarchiveTopLevelObject
                throws: NSErrorException
            '+unarchiveObjectWithFile:device:':
                name: unarchiveObject
            '-initForReadingFromData:device:error:':
                static_constructor_name: create # as conflicts with '-initForReadingWithData:device:'
                name: init
                throws: NSErrorException
            '+unarchivedObjectOfClasses:fromData:device:error:':
                name: unarchiveObject
                throws: NSErrorException
            '+unarchivedObjectOfClass:fromData:device:error:':
                name: unarchiveObject
                throws: NSErrorException
    MPSLSTMDescriptor: #since 11.0
        methods:
            '+createLSTMDescriptorWithInputFeatureChannels:outputFeatureChannels:':
                constructor: true
                name: create
    MPSMatrix: #since 10.0
        methods:
            '-init.*':
                name: init
    MPSMatrixBinaryKernel: {} #since 11.0
    MPSMatrixCopy: #since 11.0
        methods:
            '-initWithDevice:copyRows:copyColumns:sourcesAreTransposed:destinationsAreTransposed:':
                name: init
            '-encodeToCommandBuffer:copyDescriptor:':
                name: encode
            '-encodeToCommandBuffer:copyDescriptor:rowPermuteIndices:rowPermuteOffset:columnPermuteIndices:columnPermuteOffset:':
               name: encode
    MPSMatrixCopyDescriptor: #since 11.0
        methods:
            '-initWithDevice:count:':
                name: init
            '-setCopyOperationAtIndex:sourceMatrix:destinationMatrix:offsets:':
                name: setCopyOperation
            '-initWithSourceMatrices:destinationMatrices:offsetVector:offset:':
                name: init
            '+descriptorWithSourceMatrix:destinationMatrix:offsets:':
                constuctor: true
                name: create
    MPSMatrixDecompositionCholesky: #since 11.0
        methods:
            '-initWithDevice:lower:order:':
                name: init
            '-encodeToCommandBuffer:sourceMatrix:resultMatrix:status:':
                name: encode
    MPSMatrixDecompositionLU: #since 11.0
        methods:
            '-initWithDevice:rows:columns:':
                name: init
            '-encodeToCommandBuffer:sourceMatrix:resultMatrix:pivotIndices:status:':
                name: encode
    MPSMatrixDescriptor: #since 10.0
        methods:
            '+matrixDescriptorWithDimensions:columns:rowBytes:dataType:':
                name: createForDimensions
            '+matrixDescriptorWithRows:columns:rowBytes:dataType:':
                constructor: true
                name: create
            '+matrixDescriptorWithRows:columns:matrices:rowBytes:matrixBytes:dataType:':
                constructor: true
                name: create
            '+rowBytesFromColumns:dataType:':
                name: getRowBytesFromColumns
            '+rowBytesForColumns:dataType:':
                name: getRowBytesForColumns
    MPSMatrixFindTopK: #since 11.3
        methods:
            '-initWithDevice:numberOfTopKValues:':
                name: init
            '-encodeToCommandBuffer:inputMatrix:resultIndexMatrix:resultValueMatrix:':
                name: encode
    MPSMatrixFullyConnected: #since 11.0
        methods:
            '-setNeuronType:parameterA:parameterB:parameterC:':
                trim_after_first_colon: true
            '-encodeToCommandBuffer:inputMatrix:weightMatrix:biasVector:resultMatrix:':
                name: encode
    MPSMatrixLogSoftMax: {} #since 11.0
    MPSMatrixMultiplication: #since 10.0
        methods:
            '-init.*':
                name: init
            '-encodeToCommandBuffer:leftMatrix:rightMatrix:resultMatrix:':
                name: encode
    MPSMatrixNeuron: #since 11.0
        methods:
            '-setNeuronType:parameterA:parameterB:parameterC:':
                trim_after_first_colon: true
            '-setNeuronToPReLUWithParametersA:':
                name: setNeuronToPReLU
            '-encodeToCommandBuffer:inputMatrix:biasVector:resultMatrix:':
                name: encode
    MPSMatrixSoftMax: #since 11.0
        methods:
            '-encodeToCommandBuffer:inputMatrix:resultMatrix:':
                name: encode
    MPSMatrixSolveCholesky: #since 11.0
        methods:
            '-initWithDevice:upper:order:numberOfRightHandSides:':
                name: init
            '-encodeToCommandBuffer:sourceMatrix:rightHandSideMatrix:solutionMatrix:':
                name: encode
    MPSMatrixSolveLU: #since 11.0
        methods:
            '-initWithDevice:transpose:order:numberOfRightHandSides:':
                name: init
            '-encodeToCommandBuffer:sourceMatrix:rightHandSideMatrix:pivotIndices:solutionMatrix:':
                name: encode
    MPSMatrixSolveTriangular: #since 11.0
        methods:
            '-initWithDevice:right:upper:transpose:unit:order:numberOfRightHandSides:alpha:':
                name: init
            '-encodeToCommandBuffer:sourceMatrix:rightHandSideMatrix:solutionMatrix:':
                name: encode
    MPSMatrixSum: #since 11.0
        methods:
            '-initWithDevice:count:rows:columns:transpose:':
                name: init
            '-setNeuronType:parameterA:parameterB:parameterC:':
                trim_after_first_colon: true
            '-encodeToCommandBuffer:sourceMatrices:resultMatrix:scaleVector:offsetVector:biasVector:startIndex:':
                name: encode
    MPSMatrixUnaryKernel: {} #since 11.0
    MPSMatrixVectorMultiplication: #since 11.0
        methods:
            '-init.*':
                name: init
            '-encodeToCommandBuffer:inputMatrix:inputVector:resultVector:':
                name: encode
    MPSNNAdditionGradientNode: {} #since 11.3
    MPSNNAdditionNode: {} #since 11.0
    MPSNNArithmeticGradientNode: #since 11.3
        methods:
            '-init.*':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:isSecondarySourceFilter:':
                exclude: true
    MPSNNArithmeticGradientStateNode: {} #since 11.3
    MPSNNBilinearScaleNode: {} #since 11.0
    MPSNNBinaryArithmeticNode: #since 11.0
        methods:
            '-initWithLeftSource:rightSource:':
                name: init
            '+nodeWithLeftSource:rightSource:':
                exclude: true
            '-initWithSources:':
                name: init
            '+nodeWithSources:':
                exclude: true
    MPSNNBinaryGradientState: {} #since 11.3
    MPSNNBinaryGradientStateNode: {} #since 11.3
    MPSNNConcatenationGradientNode: #since 11.3
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:':
                exclude: true
    MPSNNConcatenationNode: #since 11.0
        methods:
            '-initWithSources:':
                name: init
            '+nodeWithSources:':
                exclude: true
    MPSNNDefaultPadding: #since 11.0
        methods:
            '+paddingWithMethod:':
                name: create
                constructor: true
    MPSNNDivisionNode: {} #since 11.0
    MPSNNFilterNode:  #since 11.0
        methods:
            '-trainingGraphWithSourceGradient:nodeHandler:':
                name: trainingGraph
            '-gradientFilterWithSource:':
                name: gradientFilter
            '-gradientFilterWithSources:':
                name: gradientFilter
            '-gradientFiltersWithSources:':
                name: gradientFilters
            '-gradientFiltersWithSource:':
                name: gradientFilters
    MPSNNGradientFilterNode: {} #since 11.3
    MPSNNGradientState: {} #since 11.3
    MPSNNGradientStateNode: {} #since 11.3
    MPSNNGraph: #since 11.0
        methods:
            '-initWithDevice:resultImage:resultImageIsNeeded:':
                name: init
            '-initWithDevice:resultImages:resultsAreNeeded:':
                name: init
            '-initWithDevice:resultImage:':
                name: init
            '-encodeToCommandBuffer:sourceImages:sourceStates:intermediateImages:destinationStates:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:sourceStates:intermediateImages:destinationStates:':
                name: encodeBatch
            '-encodeToCommandBuffer:sourceImages:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:sourceStates:':
                name: encodeBatch
            '-executeAsyncWithSourceImages:completionHandler:':
                name: executeAsync
            '+graphWithDevice:resultImage:resultImageIsNeeded:':
                exclude: true
            '+graphWithDevice:resultImage:':
                exclude: true
            '+graphWithDevice:resultImages:resultsAreNeeded:':
                exclude: true
    MPSNNImageNode:  #since 11.0
        properties:
            handle:
                name: getMpsHandle
        methods:
            '-initWithHandle:':
                name: init
            '+nodeWithHandle:':
                exclude: true
            '+exportedNodeWithHandle:':
                name: createExportedNode
    MPSNNLabelsNode: {} #since 11.3
    MPSNNLanczosScaleNode: {} #since 11.0
    MPSNNMultiplicationGradientNode: {} #since 11.3
    MPSNNMultiplicationNode: {} #since 11.0
    MPSNNNeuronDescriptor: #since 11.3
        methods:
            '+cnnNeuronDescriptorWithType:a:':
                constructor: true
                name: create
            '+cnnNeuronDescriptorWithType:a:b:':
                constructor: true
                name: create
            '+cnnNeuronDescriptorWithType:a:b:c:':
                constructor: true
                name: create
            '+cnnNeuronPReLUDescriptorWithData:noCopy:':
                constructor: true
                name: create
            '+cnnNeuronDescriptorWithType:':
                constructor: true
                name: create
    MPSNNReduceBinary: {} #since 11.3
    MPSNNReduceColumnMax: {} #since 11.3
    MPSNNReduceColumnMean: {} #since 11.3
    MPSNNReduceColumnMin: {} #since 11.3
    MPSNNReduceColumnSum: {} #since 11.3
    MPSNNReduceFeatureChannelsAndWeightsMean: {} #since 11.3
    MPSNNReduceFeatureChannelsAndWeightsSum: #since 11.3
        methods:
            '-initWithDevice:doWeightedSumByNonZeroWeights:':
                name: init
    MPSNNReduceFeatureChannelsMax: {} #since 11.3
    MPSNNReduceFeatureChannelsMean: {} #since 11.3
    MPSNNReduceFeatureChannelsMin: {} #since 11.3
    MPSNNReduceFeatureChannelsSum: {} #since 11.3
    MPSNNReduceRowMax: {} #since 11.3
    MPSNNReduceRowMean: {} #since 11.3
    MPSNNReduceRowMin: {} #since 11.3
    MPSNNReduceRowSum: {} #since 11.3
    MPSNNReduceUnary: {} #since 11.3
    MPSNNReshape:  #since 11.3
        methods:
            '-encodeToCommandBuffer:sourceImage:reshapedWidth:reshapedHeight:reshapedFeatureChannels:':
                name: encodeToCommandBuffer
            '-encodeToCommandBuffer:sourceImage:destinationState:destinationStateIsTemporary:reshapedWidth:reshapedHeight:reshapedFeatureChannels:':
                name: encodeToCommandBuffer
            '-encodeBatchToCommandBuffer:sourceImages:reshapedWidth:reshapedHeight:reshapedFeatureChannels:':
                name: encodeBatchToCommandBuffer
            '-encodeBatchToCommandBuffer:sourceImages:destinationStates:destinationStateIsTemporary:reshapedWidth:reshapedHeight:reshapedFeatureChannels:':
                name: encodeBatchToCommandBuffer
    MPSNNScaleNode: #since 11.0
        methods:
            '-init.*':
                name: init
            '+nodeWithSource:outputSize:':
                exclude: true
            '+nodeWithSource:transformProvider:outputSize:':
                exclude: true
    MPSNNSlice: {} #since 11.3
    MPSNNStateNode:  #since 11.0
        properties:
            handle:
                name: getMpsHandle
    MPSNNSubtractionGradientNode: {} #since 11.3
    MPSNNSubtractionNode: {} #since 11.0
    MPSRNNDescriptor: {} #since 11.0
    MPSRNNImageInferenceLayer: #since 11.0
        methods:
            '-init.*':
                name: init
            '-encodeSequenceToCommandBuffer:sourceImages:destinationImages:recurrentInputState:recurrentOutputStates:':
                name: encodeSequence
            '-encodeBidirectionalSequenceToCommandBuffer:sourceSequence:destinationForwardImages:destinationBackwardImages:':
                name: encodeBidirectionalSequence
            '-copyWithZone:device:':
                name: copy
    MPSRNNMatrixInferenceLayer: #since 11.0
        methods:
            '-init.*':
                name: init
            '-encodeSequenceToCommandBuffer:sourceMatrices:destinationMatrices:recurrentInputState:recurrentOutputStates:':
                name: encodeSequence
            '-encodeBidirectionalSequenceToCommandBuffer:sourceSequence:destinationForwardMatrices:destinationBackwardMatrices:':
                name: encodeBidirectionalSequence
            '-encodeSequenceToCommandBuffer:sourceMatrices:sourceOffsets:destinationMatrices:destinationOffsets:recurrentInputState:recurrentOutputStates:':
                name: encodeSequence
            '-copyWithZone:device:':
                name: copy
    MPSRNNRecurrentImageState: {} #since 11.0
    MPSRNNRecurrentMatrixState: {} #since 11.0
    MPSRNNSingleGateDescriptor: #since 11.0
        methods:
            '+createRNNSingleGateDescriptorWithInputFeatureChannels:outputFeatureChannels:':
                constructor: true
                name: create
    MPSState: #since 11.0
        methods:
            '-init.*':
                name: init
            '-resourceAtIndex:allocateMemory:':
                name: getResource
            '-destinationImageDescriptorForSourceImages:sourceStates:forKernel:suggestedDescriptor:':
                name: getDestinationImageDescriptor
            '+temporaryStateWithCommandBuffer:bufferSize:':
                constructor: true
                name: create
            '+temporaryStateWithCommandBuffer:textureDescriptor:':
                constructor: true
                name: create
            '+temporaryStateWithCommandBuffer:resourceList:':
                constructor: true
                name: create
            '+temporaryStateWithCommandBuffer:':
                constructor: true
                name: create
    MPSStateResourceList: {} #since 11.3
    MPSTemporaryImage: #since 10.0
        methods:
            '+temporaryImageWithCommandBuffer:imageDescriptor:':
                constructor: true
                name: create
            '+temporaryImageWithCommandBuffer:textureDescriptor:':
                constructor: true
                name: create
            '+temporaryImageWithCommandBuffer:textureDescriptor:featureChannels:':
                constructor: true
                name: create
            '+prefetchStorageWithCommandBuffer:imageDescriptorList:':
                name: createPrefetchStorage
    MPSTemporaryMatrix: #since 11.0
        methods:
            '+temporaryMatrixWithCommandBuffer:matrixDescriptor:':
                constructor: true
                name: create
            '+prefetchStorageWithCommandBuffer:matrixDescriptorList:':
                name: createPrefetchStorage
    MPSTemporaryVector: #since 11.0
        methods:
            '+temporaryVectorWithCommandBuffer:descriptor:':
                constructor: true
                name: create
            '+prefetchStorageWithCommandBuffer:descriptorList:':
                name: createPrefetchStorage
    MPSUnaryImageKernel: #since 9.0
        methods:
            '-encodeToCommandBuffer:inPlaceTexture:fallbackCopyAllocator:':
                name: encode
            '-encodeToCommandBuffer:sourceTexture:destinationTexture:':
                name: encode
            '-encodeToCommandBuffer:sourceImage:destinationImage:':
                name: encode
    MPSVector: #since 11.0
        methods:
            '-init.*':
                name: init
    MPSVectorDescriptor: #since 11.0
        methods:
            '+vectorDescriptorWithLength:dataType:':
                constructor: true
                name: create
            '+vectorDescriptorWithLength:vectors:vectorBytes:dataType:':
                constructor: true
                name: create
            '+vectorBytesForLength:dataType:':
                name: getVectorBytes
    MPSCNNNormalizationMeanAndVarianceState: #since 12.0
        methods:
            '-initWithMean:variance:':
                name: init
            '+temporaryStateWithCommandBuffer:numberOfFeatureChannels:':
                name: create
                constructor: true
    MPSCNNYOLOLoss: #since 12.0
        methods:
            '-initWithDevice:lossDescriptor:':
                name: init
            '-encodeToCommandBuffer:sourceImage:labels:destinationImage:':
                name: encode
            '-encodeToCommandBuffer:sourceImage:labels:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:labels:destinationImages:':
                name: encodeBatch
            '-encodeBatchToCommandBuffer:sourceImages:labels:':
                name: encodeBatch
    MPSCNNYOLOLossDescriptor: #since 12.0
        methods:
            '+cnnLossDescriptorWithXYLossType:WHLossType:confidenceLossType:classesLossType:reductionType:anchorBoxes:numberOfAnchorBoxes:':
                constructor: true
                name: create
    MPSCNNYOLOLossNode: #since 11.3
        methods:
            '-initWithSource:lossDescriptor:':
                name: init
            '+nodeWithSource:lossDescriptor:':
                exclude: true
    MPSImageLaplacianPyramid: {} #since 10.0
    MPSImageLaplacianPyramidAdd: {} #since 10.0
    MPSImageLaplacianPyramidSubtract: {} #since 10.0
    MPSImageNormalizedHistogram: #since 9.0
        methods:
            '-initWithDevice:histogramInfo:':
                name: init
            '-encodeToCommandBuffer:sourceTexture:minmaxTexture:histogram:histogramOffset:':
                name: encode
    MPSMatrixBatchNormalization: #since 12.0
        methods:
            '-setNeuronType:parameterA:parameterB:parameterC:':
                trim_after_first_colon: true
            '-encodeToCommandBuffer:inputMatrix:meanVector:varianceVector:gammaVector:betaVector:resultMatrix:':
                name: encode
    MPSMatrixBatchNormalizationGradient: #since 12.0
        methods:
            '-setNeuronType:parameterA:parameterB:parameterC:':
                trim_after_first_colon: true
            '-encodeToCommandBuffer:gradientMatrix:inputMatrix:meanVector:varianceVector:gammaVector:betaVector:resultGradientForDataMatrix:resultGradientForGammaVector:resultGradientForBetaVector:':
                name: encode
    MPSMatrixCopyToImage: #since 12.0
        methods:
            '-initWithDevice:dataLayout:':
                name: init
            '-encodeToCommandBuffer:sourceMatrix:destinationImage:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceMatrix:destinationImages:':
                name: encodeBatch
    MPSMatrixFullyConnectedGradient: #since 12.0
        methods:
            '-encodeGradientForDataToCommandBuffer:gradientMatrix:weightMatrix:resultGradientForDataMatrix:':
                name: encodeGradient
            '-encodeGradientForWeightsAndBiasToCommandBuffer:gradientMatrix:inputMatrix:resultGradientForWeightMatrix:resultGradientForBiasVector:':
                name: encodeGradient
    MPSMatrixLogSoftMaxGradient: {} #since 12.0
    MPSMatrixNeuronGradient: #since 12.0
        methods:
            '-setNeuronType:parameterA:parameterB:parameterC:':
                trim_after_first_colon: true
            '-setNeuronToPReLUWithParametersA:':
                name: setNeuronToPReLU
            '-encodeToCommandBuffer:gradientMatrix:inputMatrix:biasVector:resultGradientForDataMatrix:resultGradientForBiasVector:':
                name: encode
    MPSMatrixSoftMaxGradient: #since 12.0
        methods:
            '-encodeToCommandBuffer:gradientMatrix:forwardOutputMatrix:resultMatrix:':
                name: encode
    MPSNNCropAndResizeBilinear: #since 12.0
        methods:
            '-initWithDevice:resizeWidth:resizeHeight:numberOfRegions:regions:':
                name: init
    MPSNNOptimizer: {} #since 12.0
    MPSNNOptimizerAdam: #since 12.0
        methods:
            '-initWithDevice:learningRate:':
                name: init
            '-initWithDevice:beta1:beta2:epsilon:timeStep:optimizerDescriptor:':
                name: init
            '-encodeToCommandBuffer:inputGradientVector:inputValuesVector:inputMomentumVector:inputVelocityVector:resultValuesVector:':
                name: encode
            '-encodeToCommandBuffer:convolutionGradientState:convolutionSourceState:inputMomentumVectors:inputVelocityVectors:resultState:':
                name: encode
            '-encodeToCommandBuffer:batchNormalizationState:inputMomentumVectors:inputVelocityVectors:resultState:':
                name: encode
            '-encodeToCommandBuffer:batchNormalizationGradientState:batchNormalizationSourceState:inputMomentumVectors:inputVelocityVectors:resultState:':
                name: encode
            '-encodeToCommandBuffer:inputGradientMatrix:inputValuesMatrix:inputMomentumMatrix:inputVelocityMatrix:resultValuesMatrix:':
                name: encode
            '-encodeToCommandBuffer:inputGradientVector:inputValuesVector:inputMomentumVector:inputVelocityVector:maximumVelocityVector:resultValuesVector:':
                name: encode
            '-encodeToCommandBuffer:inputGradientMatrix:inputValuesMatrix:inputMomentumMatrix:inputVelocityMatrix:maximumVelocityMatrix:resultValuesMatrix:':
                name: encode
            '-encodeToCommandBuffer:convolutionGradientState:convolutionSourceState:inputMomentumVectors:inputVelocityVectors:maximumVelocityVectors:resultState:':
                name: encode
            '-encodeToCommandBuffer:batchNormalizationState:inputMomentumVectors:inputVelocityVectors:maximumVelocityVectors:resultState:':
                name: encode
            '-encodeToCommandBuffer:batchNormalizationGradientState:batchNormalizationSourceState:inputMomentumVectors:inputVelocityVectors:maximumVelocityVectors:resultState:':
                name: encode
    MPSNNOptimizerDescriptor: #since 12.0
        methods:
            '-initWithLearningRate:gradientRescale:regularizationType:regularizationScale:':
                name: init
            '-initWithLearningRate:gradientRescale:applyGradientClipping:gradientClipMax:gradientClipMin:regularizationType:regularizationScale:':
                name: init
            '+optimizerDescriptorWithLearningRate:gradientRescale:regularizationType:regularizationScale:':
                name: optimizerDescriptor
            '+optimizerDescriptorWithLearningRate:gradientRescale:applyGradientClipping:gradientClipMax:gradientClipMin:regularizationType:regularizationScale:':
                name: optimizerDescriptor
    MPSNNOptimizerRMSProp: #since 12.0
        methods:
            '-initWithDevice:learningRate:':
                name: init
            '-initWithDevice:decay:epsilon:optimizerDescriptor:':
                name: init
            '-encodeToCommandBuffer:inputGradientVector:inputValuesVector:inputSumOfSquaresVector:resultValuesVector:':
                name: encode
            '-encodeToCommandBuffer:convolutionGradientState:convolutionSourceState:inputSumOfSquaresVectors:resultState:':
                name: encode
            '-encodeToCommandBuffer:batchNormalizationState:inputSumOfSquaresVectors:resultState:':
                name: encode
            '-encodeToCommandBuffer:batchNormalizationGradientState:batchNormalizationSourceState:inputSumOfSquaresVectors:resultState:':
                name: encode
            '-encodeToCommandBuffer:inputGradientMatrix:inputValuesMatrix:inputSumOfSquaresMatrix:resultValuesMatrix:':
                name: encode
    MPSNNOptimizerStochasticGradientDescent: #since 12.0
        methods:
            '-initWithDevice:learningRate:':
                name: init
            '-initWithDevice:momentumScale:useNestrovMomentum:optimizerDescriptor:':
                name: init
            '-initWithDevice:momentumScale:useNesterovMomentum:optimizerDescriptor:':
                exclude: true # dkimitsa: seem to be copy a copy of above -- as typo fix
            '-encodeToCommandBuffer:inputGradientVector:inputValuesVector:inputMomentumVector:resultValuesVector:':
                name: encode
            '-encodeToCommandBuffer:convolutionGradientState:convolutionSourceState:inputMomentumVectors:resultState:':
                name: encode
            '-encodeToCommandBuffer:batchNormalizationState:inputMomentumVectors:resultState:':
                name: encode
            '-encodeToCommandBuffer:batchNormalizationGradientState:batchNormalizationSourceState:inputMomentumVectors:resultState:':
                name: encode
            '-encodeToCommandBuffer:inputGradientMatrix:inputValuesMatrix:inputMomentumMatrix:resultValuesMatrix:':
                name: encode
    MPSNNReduceFeatureChannelsArgumentMax: {} #since 12.0
    MPSNNReduceFeatureChannelsArgumentMin: {} #since 12.0
    MPSNNResizeBilinear: #since 12.0
        methods:
            '-initWithDevice:resizeWidth:resizeHeight:alignCorners:':
                name: init
    MPSRNNMatrixTrainingLayer: #since 12.0
        methods:
            '-initWithDevice:rnnDescriptor:trainableWeights:':
                name: init
            '-createWeightGradientMatrices:dataType:':
                trim_after_first_colon: true
            '-createTemporaryWeightGradientMatrices:dataType:commandBuffer:':
                trim_after_first_colon: true
            '-encodeCopyWeightsToCommandBuffer:weights:matrixId:matrix:copyFromWeightsToMatrix:matrixOffset:':
                name: encodeCopyWeights
            '-encodeForwardSequenceToCommandBuffer:sourceMatrices:sourceOffsets:destinationMatrices:destinationOffsets:trainingStates:recurrentInputState:recurrentOutputStates:weights:':
                name: encodeForwardSequence
            '-encodeForwardSequenceToCommandBuffer:sourceMatrices:destinationMatrices:trainingStates:weights:':
                name: encodeForwardSequence
            '-encodeGradientSequenceToCommandBuffer:forwardSources:forwardSourceOffsets:sourceGradients:sourceGradientOffsets:destinationGradients:destinationOffsets:weightGradients:trainingStates:recurrentInputState:recurrentOutputStates:weights:':
                name: encodeGradientSequence
            '-encodeGradientSequenceToCommandBuffer:forwardSources:sourceGradients:destinationGradients:weightGradients:trainingStates:weights:':
                name: encodeGradientSequence
    MPSRNNMatrixTrainingState: {} #since 12.0

    MPSNNCompare: {} #since 12.1
    MPSNNComparisonNode: {} #since 12.1
    MPSNNPad: #since 12.1
        methods:
            '-initWithDevice:paddingSizeBefore:paddingSizeAfter:':
                name: init
            '-initWithDevice:paddingSizeBefore:paddingSizeAfter:fillValueArray:':
                name: init
    MPSNNPadGradient: {} #since 12.1
    MPSNNPadGradientNode: #since 12.1
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:':
                exclude: true
    MPSNNPadNode: #since 12.1
        methods:
            '-initWithSource:paddingSizeBefore:paddingSizeAfter:edgeMode:':
                name: init
            '+nodeWithSource:paddingSizeBefore:paddingSizeAfter:edgeMode:':
                exclude: true
    MPSNNReductionColumnMaxNode: {} #since 12.1
    MPSNNReductionColumnMeanNode: {} #since 12.1
    MPSNNReductionColumnMinNode: {} #since 12.1
    MPSNNReductionColumnSumNode: {} #since 12.1
    MPSNNReductionFeatureChannelsArgumentMaxNode: {} #since 12.1
    MPSNNReductionFeatureChannelsArgumentMinNode: {} #since 12.1
    MPSNNReductionFeatureChannelsMaxNode: {} #since 12.1
    MPSNNReductionFeatureChannelsMeanNode: {} #since 12.1
    MPSNNReductionFeatureChannelsMinNode: {} #since 12.1
    MPSNNReductionFeatureChannelsSumNode: {} #since 12.1
    MPSNNReductionRowMaxNode: {} #since 12.1
    MPSNNReductionRowMeanNode: {} #since 12.1
    MPSNNReductionRowMinNode: {} #since 12.1
    MPSNNReductionRowSumNode: {} #since 12.1
    MPSNNReductionSpatialMeanGradientNode: #since 12.1
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:':
                exclude: true
    MPSNNReductionSpatialMeanNode: {} #since 12.1
    MPSNNReshapeGradient: {} #since 12.1
    MPSNNReshapeGradientNode: #since 12.1
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:':
                exclude: true
    MPSNNReshapeNode: #since 12.1
        methods:
            '-initWithSource:resultWidth:resultHeight:resultFeatureChannels:':
                name: init
            '+nodeWithSource:resultWidth:resultHeight:resultFeatureChannels:':
                exclude: true
    MPSNNUnaryReductionNode: #since 12.1
        methods:
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    # ios13
    MPSCNNConvolutionTransposeGradient: #since 13.0
        methods:
            '-initWithDevice:weights:':
                name: init
            '-reloadWeightsAndBiasesWithCommandBuffer:state:':
                name: reloadWeightsAndBiases
    MPSCNNConvolutionTransposeGradientNode: #since 13.0
        methods:
            '-initWithSourceGradient:sourceImage:convolutionTransposeGradientState:weights:':
                name: init
            '+nodeWithSourceGradient:sourceImage:convolutionTransposeGradientState:weights:':
                exclude: true
    MPSCNNConvolutionTransposeGradientState: {} #since 13.0
    MPSCNNConvolutionTransposeGradientStateNode: {} #since 13.0
    MPSCNNFullyConnectedGradientNode: #since 13.0
        methods:
            '+nodeWithSourceGradient:sourceImage:convolutionGradientState:weights:':
                exclude: true
    MPSCNNGroupNormalization: #since 13.0
        methods:
            '-initWithDevice:dataSource:':
                name: init
            '-reloadGammaAndBetaWithCommandBuffer:gammaAndBetaState:':
                name: reloadGammaAndBeta
    MPSCNNGroupNormalizationGradient: {} #since 13.0
    MPSCNNGroupNormalizationGradientNode: #since 13.0
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:':
                exclude: true
    MPSCNNGroupNormalizationGradientState: {} #since 13.0
    MPSCNNGroupNormalizationNode: #since 13.0
        methods:
            '-initWithSource:dataSource:':
                name: init
            '+nodeWithSource:dataSource:':
                exclude: true
    MPSCNNMultiaryKernel: #since 13.0
        methods:
            '-initWithDevice:sourceCount:':
                name: init
            '-setOffset:atIndex:':
                name: setOffset
            '-setSourceFeatureChannelOffset:atIndex:':
                name: setSourceFeatureChannelOffset
            '-setSourceFeatureChannelMaxCount:atIndex:':
                name: setSourceFeatureChannelMaxCount
            '-setEdgeMode:atIndex:':
                name: setEdgeMode
            '-setKernelWidth:atIndex:':
                name: setKernelWidth
            '-setKernelHeight:atIndex:':
                name: setKernelHeight
            '-setStrideInPixelsX:atIndex:':
                name: setStrideInPixelsX
            '-setStrideInPixelsY:atIndex:':
                name: setStrideInPixelsY
            '-setDilationRateX:atIndex:':
                name: setDilationRateX
            '-setDilationRateY:atIndex:':
                name: setDilationRateY
            '-encodeToCommandBuffer:sourceImages:destinationImage:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:destinationImages:':
                name: encodeBatch
            '-encodeToCommandBuffer:sourceImages:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:':
                name: encodeBatch
            '-encodeToCommandBuffer:sourceImages:destinationState:destinationStateIsTemporary:':
                name: encode
            '-encodeBatchToCommandBuffer:sourceImages:destinationStates:destinationStateIsTemporary:':
                name: encodeBatch
            '-resultStateForSourceImages:sourceStates:destinationImage:':
                name: getResultState
            '-resultStateBatchForSourceImages:sourceStates:destinationImage:':
                name: getResultStateBatch
            '-temporaryResultStateForCommandBuffer:sourceImages:sourceStates:destinationImage:':
                name: getTemporaryResultState
            '-temporaryResultStateBatchForCommandBuffer:sourceImages:sourceStates:destinationImage:':
                name: getTemporaryResultStateBatch
            '-destinationImageDescriptorForSourceImages:sourceStates:':
                name: getDestinationImageDescriptor
    MPSCNNNeuronGeLUNode: #since 13.0
        methods:
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSCommandBuffer: #since 13.0
        methods:
            '-initWithCommandBuffer:':
                name: init
            '+commandBufferWithCommandBuffer:':
                exclude: true
    MPSMatrixRandom: #since 13.0
        methods:
            '-encodeToCommandBuffer:destinationVector:':
                name: encode
            '-encodeToCommandBuffer:destinationMatrix:':
                name: encode
    MPSMatrixRandomDistributionDescriptor: #since 13.0
        methods:
            '+uniformDistributionDescriptorWithMinimum:maximum:':
                constructor: true
                name: create
            '+normalDistributionDescriptorWithMean:standardDeviation:':
                name: createNormalDistributionDescriptor
            '+normalDistributionDescriptorWithMean:standardDeviation:minimum:maximum:':
                name: createNormalDistributionDescriptor
    MPSMatrixRandomMTGP32: #since 13.0
        methods:
            '-initWithDevice:destinationDataType:seed:distributionDescriptor:':
                name: init
            '-initWithDevice:destinationDataType:seed:':
                name: init
    MPSMatrixRandomPhilox: #since 13.0
        methods:
            '-initWithDevice:destinationDataType:seed:distributionDescriptor:':
                name: init
            '-initWithDevice:destinationDataType:seed:':
                name: init
    MPSNDArray: #since 13.0
        methods:
            '-initWithDevice:descriptor:':
                name: init
            '-initWithDevice:scalar:':
                name: init
            '-arrayViewWithCommandBuffer:descriptor:aliasing:':
                name: createArrayView
            '-exportDataWithCommandBuffer:toBuffer:destinationDataType:offset:rowStrides:':
                name: exportData
            '-importDataWithCommandBuffer:fromBuffer:sourceDataType:offset:rowStrides:':
                name: importData
            '-exportDataWithCommandBuffer:toImages:offset:':
                name: exportData
            '-importDataWithCommandBuffer:fromImages:offset:':
                name: importData
            '-readBytes:strideBytes:':
                name: readBytes
            '-writeBytes:strideBytes:':
                name: writeBytes
    MPSNDArrayDescriptor: #since 13.0
        methods:
            '-sliceDimension:withSubrange:':
                name: sliceDimension
            '-transposeDimension:withDimension:':
                name: transposeDimension
            '-reshapeWithDimensionCount:dimensionSizes:':
                name: reshape
            '-reshapeWithShape:':
                name: reshape
            '+descriptorWithDataType:dimensionCount:dimensionSizes:':
                name: create
                constructor: true
            '+descriptorWithDataType:shape:':
                name: create
                constructor: true
            '+descriptorWithDataType:dimensionSizes:':
                name: create
                constructor: true
    MPSNNForwardLoss: #since 13.0
        methods:
            '-initWithDevice:lossDescriptor:':
                name: init
            '-encodeBatchToCommandBuffer:sourceImages:labels:weights:destinationStates:destinationImages:':
                name: encodeBatch
            '-encodeBatchToCommandBuffer:sourceImages:labels:weights:destinationStates:destinationStateIsTemporary:':
                name: encodeBatch
    MPSNNForwardLossNode: #since 13.0
        methods:
            '-initWithSource:labels:weights:lossDescriptor:':
                name: init
            '-initWithSource:labels:lossDescriptor:':
                name: init
            '-initWithSources:lossDescriptor:':
                name: init
            '+nodeWithSource:labels:weights:lossDescriptor:':
                exclude: true
            '+nodeWithSource:labels:lossDescriptor:':
                exclude: true
            '+nodeWithSources:lossDescriptor:':
                exclude: true
            '-gradientFiltersWithSources:':
                name: gradientFiltersEx # as clashes with MPSNNFilterNOde
            '-gradientFiltersWithSource:':
                name: gradientFiltersEx # as clashes with MPSNNFilterNOde
    MPSNNGramMatrixCalculation: #since 13.0
        methods:
            '-initWithDevice:alpha:':
                name: init
    MPSNNGramMatrixCalculationGradient: #since 13.0
        methods:
            '-initWithDevice:alpha:':
                name: init
    MPSNNGramMatrixCalculationGradientNode: #since 13.0
        methods:
            '-initWithSourceGradient:sourceImage:gradientState:':
                name: init
            '-initWithSourceGradient:sourceImage:gradientState:alpha:':
                name: init
            '+nodeWithSourceGradient:sourceImage:gradientState:':
                exclude: true
            '+nodeWithSourceGradient:sourceImage:gradientState:alpha:':
                exclude: true
    MPSNNGramMatrixCalculationNode: #since 13.0
        methods:
            '-initWithSource:':
                name: init
            '-initWithSource:alpha:':
                name: init
            '+nodeWithSource:':
                exclude: true
            '+nodeWithSource:alpha:':
                exclude: true
    MPSNNGridSample: {} #since 13.0
    MPSNNInitialGradient: {} #since 13.0
    MPSNNInitialGradientNode: #since 13.0
        methods:
            '-initWithSource:':
                name: init
            '+nodeWithSource:':
                exclude: true
    MPSNNLocalCorrelation: #since 13.0
        methods:
            '-initWithDevice:windowInX:windowInY:strideInX:strideInY:':
                name: init
    MPSNNLossGradient: #since 13.0
        methods:
            '-initWithDevice:lossDescriptor:':
                name: init
            '-encodeBatchToCommandBuffer:sourceGradients:sourceImages:labels:weights:sourceStates:':
                name: encodeBatch
            '-encodeBatchToCommandBuffer:sourceGradients:sourceImages:labels:weights:sourceStates:destinationGradients:':
                name: encodeBatch
    MPSNNLossGradientNode: #since 13.0
        methods:
            '-initWithSourceGradient:sourceImage:labels:weights:gradientState:lossDescriptor:isLabelsGradientFilter:':
                name: init
            '-initWithSourceGradient:sourceImage:labels:gradientState:lossDescriptor:isLabelsGradientFilter:':
                name: init
            '-initWithSources:gradientState:lossDescriptor:isLabelsGradientFilter:':
                name: init
            '+nodeWithSourceGradient:sourceImage:labels:weights:gradientState:lossDescriptor:isLabelsGradientFilter:':
                exclude: true
            '+nodeWithSourceGradient:sourceImage:labels:gradientState:lossDescriptor:isLabelsGradientFilter:':
                exclude: true
            '+nodeWithSources:gradientState:lossDescriptor:isLabelsGradientFilter:':
                exclude: true
    MPSNNMultiaryGradientState: {} #since 13.0
    MPSNNMultiaryGradientStateNode: {} #since 13.0
    MPSPredicate: #since 13.0
        methods:
            '-initWithBuffer:offset:':
                name: init
            '-initWithDevice:':
                name: init
            '+predicateWithBuffer:offset:':
                exclude: true
    MPSTemporaryNDArray: #since 13.0
        methods:
            '+temporaryNDArrayWithCommandBuffer:descriptor:':
                name : create
                constructor: true
    # ios 13.4 bindings
    MPSAccelerationStructure: #since 12.0
        methods:
            '-initWithGroup:':
                name: init
            '-initWithCoder:group:':
                name: init
            '-rebuildWithCompletionHandler:':
                name: rebuild
            '-copyWithZone:group:':
                name: copy
            '-encodeWithCoder:':
                name: encode
    MPSAccelerationStructureGroup: #since 12.0
        methods:
            '-initWithDevice:':
                name: init
    MPSInstanceAccelerationStructure: {} #since 12.0
    MPSNDArrayBinaryKernel: #since 13.0
        methods:
            '-encodeToCommandBuffer:primarySourceArray:secondarySourceArray:':
                name: encode
            '-encodeToCommandBuffer:primarySourceArray:secondarySourceArray:destinationArray:':
                name: encode
            '-encodeToCommandBuffer:primarySourceArray:secondarySourceArray:resultState:outputStateIsTemporary:':
                name: encode
            '-encodeToCommandBuffer:primarySourceArray:secondarySourceArray:resultState:destinationArray:':
                name: encode
    MPSNDArrayBinaryPrimaryGradientKernel: #since 13.0
        methods:
            '-encodeToCommandBuffer:primarySourceArray:secondarySourceArray:sourceGradient:gradientState:':
                name: encode
            '-encodeToCommandBuffer:primarySourceArray:secondarySourceArray:sourceGradient:gradientState:destinationArray:':
                name: encode
    MPSNDArrayBinarySecondaryGradientKernel: #since 13.0
        methods:
            '-encodeToCommandBuffer:primarySourceArray:secondarySourceArray:sourceGradient:gradientState:':
                name: encode
            '-encodeToCommandBuffer:primarySourceArray:secondarySourceArray:sourceGradient:gradientState:destinationArray:':
                name: encode
    MPSNDArrayGather: {} #since 13.0
    MPSNDArrayGatherGradient: {} #since 13.0
    MPSNDArrayGatherGradientState: {} #since 13.0
    MPSNDArrayGradientState: {} #since 13.0
    MPSNDArrayMatrixMultiplication: {} #since 13.0
    MPSNDArrayMultiaryBase: #since 13.0
        methods:
            '-initWithDevice:sourceCount:':
                name: init
            '-encodeWithCoder:':
                name: encode
            '-resultStateForSourceArrays:sourceStates:destinationArray:':
                name: getResultState
            '-destinationArrayDescriptorForSourceArrays:sourceState:':
                name: getDestinationArrayDescriptor
    MPSNDArrayMultiaryGradientKernel: #since 13.0
        methods:
            '-initWithDevice:sourceCount:sourceGradientIndex:':
                name: init
            '-encodeToCommandBuffer:sourceArrays:sourceGradient:gradientState:':
                name: encode
            '-encodeToCommandBuffer:sourceArrays:sourceGradient:gradientState:destinationArray:':
                name: encode
    MPSNDArrayMultiaryKernel: #since 13.0
        methods:
            '-encodeToCommandBuffer:sourceArrays:':
                name: encode
            '-encodeToCommandBuffer:sourceArrays:destinationArray:':
                name: encode
            '-encodeToCommandBuffer:sourceArrays:resultState:outputStateIsTemporary:':
                name: encode
            '-encodeToCommandBuffer:sourceArrays:resultState:destinationArray:':
                name: encode
    MPSNDArrayStridedSlice: {} #since 13.0
    MPSNDArrayStridedSliceGradient: {} #since 13.0
    MPSNDArrayUnaryGradientKernel: #since 13.0
        methods:
            '-encodeToCommandBuffer:sourceArray:sourceGradient:gradientState:':
                name: encode
            '-encodeToCommandBuffer:sourceArray:sourceGradient:gradientState:destinationArray:':
                name: encode
    MPSNDArrayUnaryKernel: #since 13.0
        methods:
            '-encodeToCommandBuffer:sourceArray:':
                name: encode
            '-encodeToCommandBuffer:sourceArray:destinationArray:':
                name: encode
            '-encodeToCommandBuffer:sourceArray:resultState:outputStateIsTemporary:':
                name: encode
            '-encodeToCommandBuffer:sourceArray:resultState:destinationArray:':
                name: encode
    MPSPolygonAccelerationStructure: {} #since 13.0
    MPSPolygonBuffer: #since 13.0
        methods:
            '-initWithCoder:':
                name: init
            '-copyWithZone:':
                name: copy
    MPSQuadrilateralAccelerationStructure: {} #since 13.0
    MPSRayIntersector: #since 12.0
        methods:
            '-encodeWithCoder:':
                name: encode
            '-encodeIntersectionToCommandBuffer:intersectionType:rayBuffer:rayBufferOffset:intersectionBuffer:intersectionBufferOffset:rayCount:accelerationStructure:':
                name: encodeIntersection
            '-encodeIntersectionToCommandBuffer:intersectionType:rayBuffer:rayBufferOffset:intersectionBuffer:intersectionBufferOffset:rayCountBuffer:rayCountBufferOffset:accelerationStructure:':
                name: encodeIntersection
            '-encodeIntersectionToCommandBuffer:intersectionType:rayBuffer:rayBufferOffset:rayIndexBuffer:rayIndexBufferOffset:intersectionBuffer:intersectionBufferOffset:rayIndexCount:accelerationStructure:':
                name: encodeIntersection
            '-encodeIntersectionToCommandBuffer:intersectionType:rayBuffer:rayBufferOffset:rayIndexBuffer:rayIndexBufferOffset:intersectionBuffer:intersectionBufferOffset:rayIndexCountBuffer:rayIndexCountBufferOffset:accelerationStructure:':
                name: encodeIntersection
            '-encodeIntersectionToCommandBuffer:intersectionType:rayTexture:intersectionTexture:accelerationStructure:':
                name: encodeIntersection
    MPSSVGF: #since 13.0
        methods:
            '-encodeWithCoder:':
                name: encode
            '-encodeReprojectionToCommandBuffer:sourceTexture:previousTexture:destinationTexture:previousLuminanceMomentsTexture:destinationLuminanceMomentsTexture:previousFrameCountTexture:destinationFrameCountTexture:motionVectorTexture:depthNormalTexture:previousDepthNormalTexture:':
                name: encodeReprojection
            '-encodeReprojectionToCommandBuffer:sourceTexture:previousTexture:destinationTexture:previousLuminanceMomentsTexture:destinationLuminanceMomentsTexture:sourceTexture2:previousTexture2:destinationTexture2:previousLuminanceMomentsTexture2:destinationLuminanceMomentsTexture2:previousFrameCountTexture:destinationFrameCountTexture:motionVectorTexture:depthNormalTexture:previousDepthNormalTexture:':
                name: encodeReprojectionToCommandBuffer$sourceTexture$previousTexture$destinationTexture$previousLuminanceMomentsTexture$destinationLuminanceMomentsTexture$sourceTexture2$previousTexture2$destinationTexture2$previousLuminanceMomentsTexture2$destinationLuminanceMomentsTexture2$previousFrameCountTexture$destinationFrameCountTexture$motionVectorTexture$depthNormalTexture$previousDepthNormalTexture$
            '-encodeVarianceEstimationToCommandBuffer:sourceTexture:luminanceMomentsTexture:destinationTexture:frameCountTexture:depthNormalTexture:':
                name: encodeVarianceEstimation
            '-encodeVarianceEstimationToCommandBuffer:sourceTexture:luminanceMomentsTexture:destinationTexture:sourceTexture2:luminanceMomentsTexture2:destinationTexture2:frameCountTexture:depthNormalTexture:':
                name: encodeVarianceEstimation
            '-encodeBilateralFilterToCommandBuffer:stepDistance:sourceTexture:destinationTexture:depthNormalTexture:':
                name: encodeBilateralFilter
            '-encodeBilateralFilterToCommandBuffer:stepDistance:sourceTexture:destinationTexture:sourceTexture2:destinationTexture2:depthNormalTexture:':
                name: encodeBilateralFilter
    MPSSVGFDefaultTextureAllocator: #since 13.0
        methods:
            '-initWithDevice:':
                name: init
            '-textureWithPixelFormat:width:height:':
                name: allocateTexture
    MPSSVGFDenoiser: #since 13.0
        methods:
            '-initWithDevice:':
                name: init
            '-initWithSVGF:textureAllocator:':
                name: init
            '-encodeToCommandBuffer:sourceTexture:motionVectorTexture:depthNormalTexture:previousDepthNormalTexture:':
                name: encode
            '-encodeToCommandBuffer:sourceTexture:destinationTexture:sourceTexture2:destinationTexture2:motionVectorTexture:depthNormalTexture:previousDepthNormalTexture:':
                name: encode
    MPSTemporalAA: #since 13.0
        methods:
            '-encodeWithCoder:':
                name: encode
            '-encodeToCommandBuffer:sourceTexture:previousTexture:destinationTexture:motionVectorTexture:depthTexture:':
                name: encode
    MPSTriangleAccelerationStructure: {} #since 12.0
    MPSImageCanny: #since 14.0
        methods:
            '-initWithDevice:linearToGrayScaleTransform:sigma:':
                name: init
    MPSImageEDLines: #since 13.4
        methods:
            '-initWithDevice:gaussianSigma:minLineLength:maxLines:detailRatio:gradientThreshold:lineErrorThreshold:mergeLocalityThreshold:':
                name: init
            '-encodeToCommandBuffer:sourceTexture:destinationTexture:endpointBuffer:endpointOffset:':
                name: encodeToCommandBuffer
protocols:
    MPSCNNBatchNormalizationDataSource: #since 11.3
        methods:
            '-updateGammaAndBetaWithCommandBuffer:batchNormalizationState:':
                name: updateGammaAndBeta
            '-reloadMeanAndVarianceWithCommandBuffer:meanAndVarianceState:':
                name: reloadMeanAndVariance
            '-updateMeanAndVarianceWithCommandBuffer:batchNormalizationState:':
                name: updateMeanAndVariance
            '-copyWithZone:device:':
                name: copy
            '-updateGammaAndBetaWithBatchNormalizationState:':
                name: updateGammaAndBeta
            '-updateMeanAndVarianceWithBatchNormalizationState:':
                name: updateMeanAndVariance
            '-encodeWithCoder:':
                name: encode
    MPSCNNConvolutionDataSource:
        methods:
            '-updateWithCommandBuffer:gradientState:sourceState:':
                name: update
            '-updateWithGradientState:sourceState:':
                name: update
            '-copyWithZone:device:':
                name: copy
    MPSCNNInstanceNormalizationDataSource: #since 11.3
        methods:
            '-updateGammaAndBetaWithCommandBuffer:instanceNormalizationStateBatch:':
                name: updateGammaAndBeta
            '-copyWithZone:device:':
                name: copy
            '-updateGammaAndBetaWithInstanceNormalizationStateBatch:':
                name: updateGammaAndBeta
            '-encodeWithCoder:':
                name: encode
    MPSDeviceProvider: {}
    MPSHandle: {}
    MPSImageAllocator:
        methods:
            '-imageForCommandBuffer:imageDescriptor:kernel:':
                name: getImage
            '-imageBatchForCommandBuffer:imageDescriptor:kernel:count:':
                name: getImageBatch
    MPSImageSizeEncodingState: {}
    MPSImageTransformProvider:
        methods:
            '-transformForSourceImage:handle:':
                name: transform
    MPSNNPadding:
        methods:
            '-destinationImageDescriptorForSourceImages:sourceStates:forKernel:suggestedDescriptor:':
                name: getDestinationImageDescriptor
    MPSNNTrainableNode: {}
    MPSCNNGroupNormalizationDataSource: #since 13.0
        methods:
            '-updateGammaAndBetaWithCommandBuffer:groupNormalizationStateBatch:':
                name: updateGammaAndBeta
            '-updateGammaAndBetaWithGroupNormalizationStateBatch:':
                name: updateGammaAndBeta
            '-encodeWithCoder:':
                name: encode
            '-initWithCoder:':
                name: init
            '-copyWithZone:device:':
                name: copy
    MPSHeapProvider:
        methods:
            '-newHeapWithDescriptor:':
                name: createNewHeap
            '-retireHeap:cacheDelay:':
                name: retireHeap
    MPSNDArrayAllocator:
        methods:
            '-arrayForCommandBuffer:arrayDescriptor:kernel:':
                name: getArrayForCommandBuffer
    MPSNNGramMatrixCallback:
        methods:
            '-alphaForSourceImage:destinationImage:':
                name: getAlphaForSourceImage
    MPSNNLossCallback:
        methods:
            '-scalarWeightForSourceImage:destinationImage:':
                name: getScalarWeightForSourceImage
    MPSSVGFTextureAllocator: #since 13.0
        skip_adapter: true
        methods:
            '-textureWithPixelFormat:width:height:':
                name: allocateTexture
functions:
    MPSImageBatch(.*):
        class: MPSImageBatch
        name: '#{g[0].downcase_first}'
    MPSStateBatch(.*):
        class: MPSStateBatch
        name: '#{g[0].downcase_first}'
    MPS(GetImageType):
        class: MPSImage
        name: '#{g[0].downcase_first}'
    MPS(SupportsMTLDevice):
        class: MetalPerformanceShaders
        name: '#{g[0].downcase_first}'
    MPS(HintTemporaryMemoryHighWaterMark):
        class: MetalPerformanceShaders
        name: '#{g[0].downcase_first}'
    MPS(SetHeapCacheDuration):
        class: MetalPerformanceShaders
        name: '#{g[0].downcase_first}'
    MPS(GetPreferredDevice):
        class: MetalPerformanceShaders
        name: '#{g[0].downcase_first}'

    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?MPS.*):
        class: FIXME
        name: 'Function__#{g[0]}'

values:
    MPSRectNoClip:
        class: MetalPerformanceShaders
        name: getRectNoClip

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?MPS.*):
        class: FIXME
        name: 'Value__#{g[0]}'

constants:
    # TODO: excluding these constants for now 
    MPSKernelTypes_h: {exclude: true}
    MPSDeviceCapsIndex: {exclude: true}
    MPSFunctionConstantIndex:  {exclude: true}
    MPSBatchSizeIndex:  {exclude: true}
    MPSUserConstantIndex:  {exclude: true}
    MPSNDArrayConstantIndex:  {exclude: true}
    MPSMaxTextures:  {exclude: true}
    MPSIsArrayOfTexturesWritable:  {exclude: true}
    MPSFunctionConstantNone: {exclude: true}
    MPSFunctionConstantNoneArray: {exclude: true}

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?MPS.*):
        class: FIXME
        name: 'Constant__#{g[0]}'
