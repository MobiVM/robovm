package: org.robovm.apple.authservices
include: [foundation, uikit, coregraphics, coreanimation]
library: AuthenticationServices
framework: AuthenticationServices
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/AuthenticationServices.framework/Headers/AuthenticationServices.h
typedefs: {}
    
enums:
    ASCredentialIdentityStoreErrorCode: {nserror: true} #since 12.0
    ASExtensionErrorCode: {nserror: true} #since 12.0
    ASCredentialServiceIdentifierType: {} #since 12.0
    ASWebAuthenticationSessionErrorCode: {nserror: true} #since 12.0
    ASUserDetectionStatus: {}
    ASAuthorizationAppleIDProviderCredentialState: {prefix: ASAuthorizationAppleIDProviderCredential} #since 13.0
    ASAuthorizationError: {nserror: true} #since 13.0
    ASAuthorizationAppleIDButtonType: {} #since 13.0
    ASAuthorizationAppleIDButtonStyle: {} #since 13.0
    ASAuthorizationControllerRequestOptions: {prefix: ASAuthorizationControllerRequestOption} #since 16.0
    ASAuthorizationPublicKeyCredentialAttachment: {}
    ASCredentialRequestType: {} #since 17.0
    ASAuthorizationPublicKeyCredentialLargeBlobAssertionOperation: {} #since 17.0
    ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement: {} #since 17.0
    ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationState: {}
    ASPublicKeyCredentialClientDataCrossOriginValue: {}
typed_enums:
    ASAuthorizationOpenIDOperation:
        enum: ASAuthorizationOpenIDOperation
        type: NSString
        ASAuthorizationOperation(.*):
            name: "#{g[0]}"
    ASAuthorizationScope:
        enum: ASAuthorizationScope
        type: NSString
        ASAuthorizationScope(.*):
            name: "#{g[0]}"
    ASAuthorizationPublicKeyCredentialUserVerificationPreference:
        enum: ASAuthorizationPublicKeyCredentialUserVerificationPreference
        type: NSString
        ASAuthorizationPublicKeyCredentialUserVerificationPreference(.*):
            name: "#{g[0]}"
    ASAuthorizationProviderAuthorizationOperation:
        enum: ASAuthorizationProviderAuthorizationOperation
        type: NSString
        ASAuthorizationProviderAuthorizationOperation(.*):
            name: "#{g[0]}"
    ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport:
        enum: ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport
        type: NSString
        ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport(.*):
            name: "#{g[0]}"
    ASAuthorizationPublicKeyCredentialAttestationKind:
        enum: ASAuthorizationPublicKeyCredentialAttestationKind
        type: NSString
        ASAuthorizationPublicKeyCredentialAttestationKind(.*):
            name: "#{g[0]}"
    ASAuthorizationPublicKeyCredentialResidentKeyPreference:
        enum: ASAuthorizationPublicKeyCredentialResidentKeyPreference
        type: NSString
        ASAuthorizationPublicKeyCredentialResidentKeyPreference(.*):
            name: "#{g[0]}"
classes:
    ASCredentialIdentityStore: #since 12.0
        methods:
            '-saveCredentialIdentities:completion:':
                trim_after_first_colon: true
            '-removeCredentialIdentities:completion:':
                trim_after_first_colon: true
            '-replaceCredentialIdentitiesWithIdentities:completion:':
                name: replaceCredentialIdentities
            '-getCredentialIdentityStoreStateWithCompletion:':
                name: getCredentialIdentityStoreState
            '-removeAllCredentialIdentitiesWithCompletion:':
                name: removeAllCredentialIdentities
            '-saveCredentialIdentityEntries:completion:':
                name: saveCredentialIdentityEntries
            '-removeCredentialIdentityEntries:completion:':
                name: removeCredentialIdentityEntries
            '-replaceCredentialIdentityEntries:completion:':
                name: replaceCredentialIdentityEntries
    ASCredentialIdentityStoreState: {} #since 12.0
    ASCredentialProviderExtensionContext: #since 12.0
        methods:
            '-completeRequestWithSelectedCredential:completionHandler:':
                name: completeRequest
            '-completeAssertionRequestWithSelectedPasskeyCredential:completionHandler:':
                name: completeAssertionRequest
            '-completeRegistrationRequestWithSelectedPasskeyCredential:completionHandler:':
                name: completeRegistrationRequest
    ASCredentialProviderViewController:  #since 12.0
        methods:
            '-provideCredentialWithoutUserInteractionForIdentity:':
                name: provideCredentialWithoutUserInteraction
            '-prepareCredentialListForServiceIdentifiers:requestParameters:':
                name: prepareCredentialList
            '-provideCredentialWithoutUserInteractionForRequest:':
                name: provideCredentialWithoutUserInteraction
    ASCredentialServiceIdentifier: #since 12.0
        methods:
            '-initWithIdentifier:type:':
                name: init
    ASPasswordCredential: #since 12.0
        methods:
            '-initWithUser:password:':
                name: init
            '+credentialWithUser:password:':
                exclude: true
    ASPasswordCredentialIdentity: #since 12.0
        methods:
            '-initWithServiceIdentifier:user:recordIdentifier:':
                name: init
            '+identityWithServiceIdentifier:user:recordIdentifier:':
                exclude: true
    ASWebAuthenticationSession: #since 12.0
        methods:
            '-initWithURL:callbackURLScheme:completionHandler:':
                name: init
    #ios13
    ASAuthorization: {} #since 13.0
    ASAuthorizationAppleIDButton: #since 13.0
        methods:
            '-initWithAuthorizationButtonType:authorizationButtonStyle:':
                name: init
            '+buttonWithType:style:':
                exclude: true
    ASAuthorizationAppleIDCredential: {} #since 13.0
    ASAuthorizationAppleIDProvider: #since 13.0
        methods:
            '-getCredentialStateForUserID:completion:':
                name: getCredentialState
    ASAuthorizationAppleIDRequest: {} #since 13.0
    ASAuthorizationController: #since 13.0
        methods:
            '-initWithAuthorizationRequests:':
                name: init
            '-performRequestsWithOptions:':
                name: performRequests
    ASAuthorizationOpenIDRequest: {} #since 13.0
    ASAuthorizationPasswordProvider: {} #since 13.0
    ASAuthorizationPasswordRequest: {} #since 13.0
    ASAuthorizationProviderExtensionAuthorizationRequest: #since 13.0
        methods:
            '-completeWithHTTPAuthorizationHeaders:':
                name: complete
            '-completeWithHTTPResponse:httpBody:':
                name: complete
            '-completeWithError:':
                name: complete
            '-presentAuthorizationViewControllerWithCompletion:':
                name: presentAuthorizationViewController
            '-completeWithAuthorizationResult:':
                name: complete
    ASAuthorizationRequest: {} #since 13.0
    ASAuthorizationSingleSignOnCredential: {} #since 13.0
    ASAuthorizationSingleSignOnProvider: #since 13.0
        methods:
            '+authorizationProviderWithIdentityProviderURL:':
                constructor: true
                name: create
    ASAuthorizationSingleSignOnRequest: {} #since 13.0
    ASAccountAuthenticationModificationController: {} #since 14.0
    ASAccountAuthenticationModificationExtensionContext: #since 14.0
        methods:
            '-getSignInWithAppleUpgradeAuthorizationWithState:nonce:completionHandler:':
                name: getSignInWithAppleUpgradeAuthorization
            '-completeUpgradeToSignInWithAppleWithUserInfo:':
                name: completeUpgradeToSignInWithApple
            '-completeChangePasswordRequestWithUpdatedCredential:userInfo:':
                name: completeChangePasswordRequest
    ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest: #since 14.0
        methods:
            '-initWithUser:serviceIdentifier:userInfo:':
                name: init
    ASAccountAuthenticationModificationRequest: {} #since 14.0
    ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest: #since 14.0
        methods:
            '-initWithUser:serviceIdentifier:userInfo:':
                name: init
    ASAccountAuthenticationModificationViewController: #since 14.0
        methods:
            '-convertAccountToSignInWithAppleWithoutUserInteractionForServiceIdentifier:existingCredential:userInfo:':
                name: convertAccountToSignInWithAppleWithoutUserInteraction
            '-prepareInterfaceToConvertAccountToSignInWithAppleForServiceIdentifier:existingCredential:userInfo:':
                name: prepareInterfaceToConvertAccountToSignInWithApple
            '-changePasswordWithoutUserInteractionForServiceIdentifier:existingCredential:newPassword:userInfo:':
                name: changePasswordWithoutUserInteraction
            '-prepareInterfaceToChangePasswordForServiceIdentifier:existingCredential:newPassword:userInfo:':
                name: prepareInterfaceToChangePassword
    ASAuthorizationPlatformPublicKeyCredentialAssertion: {} #since 15.0
    ASAuthorizationPlatformPublicKeyCredentialAssertionRequest: {} #since 15.0
    ASAuthorizationPlatformPublicKeyCredentialDescriptor: #since 15.0
        methods:
            '-initWithCredentialID:':
                name: init
    ASAuthorizationPlatformPublicKeyCredentialProvider: #since 15.0
        methods:
            '-initWithRelyingPartyIdentifier:':
                name: init
            '-createCredentialRegistrationRequestWithChallenge:name:userID:':
                name: createCredentialRegistrationRequest
            '-createCredentialAssertionRequestWithChallenge:':
                name: createCredentialAssertionRequest
    ASAuthorizationPlatformPublicKeyCredentialRegistration: {} #since 15.0
    ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest: {} #since 15.0
    ASAuthorizationProviderExtensionAuthorizationResult: #since 15.0
        methods:
            '-initWithHTTPAuthorizationHeaders:':
                name: init
            '-initWithHTTPResponse:httpBody:':
                name: init
    ASAuthorizationPublicKeyCredentialParameters: #since 15.0
        methods:
            '-initWithAlgorithm:':
                name: init
    ASAuthorizationSecurityKeyPublicKeyCredentialAssertion: {} #since 15.0
    ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest: {} #since 15.0
    ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor: #since 15.0
        methods:
            '-initWithCredentialID:transports:':
                name: init
    ASAuthorizationSecurityKeyPublicKeyCredentialProvider: #since 15.0
        methods:
            '-initWithRelyingPartyIdentifier:':
                name: init
            '-createCredentialRegistrationRequestWithChallenge:displayName:name:userID:':
                name: createCredentialRegistrationRequest
            '-createCredentialAssertionRequestWithChallenge:':
                name: createCredentialAssertionRequest
    ASAuthorizationSecurityKeyPublicKeyCredentialRegistration: {} #since 15.0
    ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest: {} #since 15.0
    ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput: #since 17.0
        methods:
            '-initWithOperation:':
                name: init
    ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput: {} #since 17.0
    ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput: #since 17.0
        methods:
            '-initWithSupportRequirement:':
                name: init
    ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput: {} #since 17.0
    ASPasskeyAssertionCredential: #since 17.0
        methods:
            '-initWithUserHandle:relyingParty:signature:clientDataHash:authenticatorData:credentialID:':
                name: init
            '+credentialWithUserHandle:relyingParty:signature:clientDataHash:authenticatorData:credentialID:':
                exclude: true # same as init
    ASPasskeyCredentialIdentity: #since 17.0
        methods:
            '-initWithRelyingPartyIdentifier:userName:credentialID:userHandle:recordIdentifier:':
                name: init
            '+identityWithRelyingPartyIdentifier:userName:credentialID:userHandle:recordIdentifier:':
                exclude: true # same as init
    ASPasskeyCredentialRequest: #since 17.0
        methods:
            '-initWithCredentialIdentity:clientDataHash:userVerificationPreference:supportedAlgorithms:':
                name: init
            '+requestWithCredentialIdentity:clientDataHash:userVerificationPreference:supportedAlgorithms:':
                exclude: true # same as init
    ASPasskeyCredentialRequestParameters: {} #since 17.0
    ASPasskeyRegistrationCredential: #since 17.0
        methods:
            '-initWithRelyingParty:clientDataHash:credentialID:attestationObject:':
                name: init
            '+credentialWithRelyingParty:clientDataHash:credentialID:attestationObject:':
                exclude: true # same as init
    ASPasswordCredentialRequest: #since 17.0
        methods:
            '-initWithCredentialIdentity:':
                name: init
            '+requestWithCredentialIdentity:':
                exclude: true # same as init
    ASSettingsHelper: #since 17.0
        methods:
            '+openCredentialProviderAppSettingsWithCompletionHandler:':
                name: openCredentialProviderAppSettings
            '+openVerificationCodeAppSettingsWithCompletionHandler:':
                name: openVerificationCodeAppSettings
protocols:
    ASAuthorizationControllerDelegate: #since 13.0
        methods:
            '-authorizationController:didCompleteWithAuthorization:':
                name: didComplete
            '-authorizationController:didCompleteWithError:':
                name: didComplete
    ASAuthorizationControllerPresentationContextProviding: {} #since 13.0
    ASAuthorizationCredential: {} #since 13.0
    ASAuthorizationProvider: {} #since 13.0
    ASAuthorizationProviderExtensionAuthorizationRequestHandler: #since 13.0
        methods:
            '-beginAuthorizationWithRequest:':
                name: beginAuthorization
            '-cancelAuthorizationWithRequest:':
                name: cancelAuthorization
    ASWebAuthenticationPresentationContextProviding: {} #since 13.0
    ASAccountAuthenticationModificationControllerDelegate: #since 14.0
        methods:
            '-accountAuthenticationModificationController:didSuccessfullyCompleteRequest:withUserInfo:':
                name: didSuccessfullyCompleteRequest
            '-accountAuthenticationModificationController:didFailRequest:withError:':
                name: didFailRequest
    ASAccountAuthenticationModificationControllerPresentationContextProviding: #since 14.0
        methods:
            '-presentationAnchorForAccountAuthenticationModificationController:':
                name: getPresentationAnchor
    ASAuthorizationPublicKeyCredentialAssertion: {} #since 15.0
    ASAuthorizationPublicKeyCredentialAssertionRequest: #since 15.0
        skip_adapter: true
        properties:
            allowedCredentials:
                type: NSArray<T>
    ASAuthorizationPublicKeyCredentialDescriptor: {} #since 15.0
    ASAuthorizationPublicKeyCredentialRegistration: {} #since 15.0
    ASAuthorizationPublicKeyCredentialRegistrationRequest: {} #since 15.0
    ASPublicKeyCredential: {} #since 15.0
    ASCredentialIdentity: {} #since 17.0
    ASCredentialRequest: {} #since 17.0
functions:
    ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports:
        class: ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport
        name: getAllSupportedPublicKeyCredentialDescriptorTransports

    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?AS.*):
        class: !!!AuthServicesFixMe
        name: 'Function__#{g[0]}'

values:
    ASCredentialIdentityStoreErrorDomain:
        class: ASCredentialIdentityStoreErrorCode
        name: getClassDomain
    ASAuthorizationErrorDomain:
        class: ASAuthorizationError
        name: getClassDomain
    ASExtensionLocalizedFailureReasonErrorKey:
        class: ASExtensionErrorCode
        name: getLocalizedFailureReasonErrorKey
    ASExtensionErrorDomain:
        class: ASExtensionErrorCode
        name: getClassDomain
    ASWebAuthenticationSessionErrorDomain:
        class: ASWebAuthenticationSessionErrorCode
        name: getClassDomain
    ASAuthorizationAppleIDProviderCredentialRevokedNotification:
        class: ASAuthorizationAppleIDProvider
        static_class: Notifications
        name: CredentialRevoked

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?AS.*):
        class: !!!AuthServicesFixMe
        name: 'Value__#{g[0]}'

constants:
    ASCOSE(AlgorithmIdentifierES256|EllipticCurveIdentifierP256):
        class: ASCOSEConstants
        name: '#{g[0]}'

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?AS.*):
        class: !!!AuthServicesFixMe
        name: 'Constant__#{g[0]}'
