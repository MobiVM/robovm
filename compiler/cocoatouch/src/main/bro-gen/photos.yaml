package: org.robovm.apple.photos
include:
    - foundation
    - coregraphics
    - uikit
    - corelocation
    - avfoundation
    - coreimage
    - coremedia
    - imageio
library: Photos
framework: Photos
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/Photos.framework/Headers/Photos.h
private_typedefs:
    UIImageOrientation: UIImageOrientation # in UKIT but photos defines it as empty enum
enums:
    PHAssetResourceType: {}
    PHAssetSourceType: {}
    PHAuthorizationStatus: {}
    PHCollectionListType: {}
    PHCollectionListSubtype: {}
    PHCollectionEditOperation: {}
    PHAssetCollectionType: {}
    PHAssetCollectionSubtype: {}
    PHAssetEditOperation: {}
    PHAssetMediaType: {}
    PHAssetMediaSubtype: {}
    PHAssetBurstSelectionType: {}
    PHImageContentMode: {}
    PHImageRequestOptionsVersion: {}
    PHImageRequestOptionsDeliveryMode: {}
    PHImageRequestOptionsResizeMode: {}
    PHVideoRequestOptionsVersion: {}
    PHVideoRequestOptionsDeliveryMode: {}
    PHLivePhotoFrameType: {}
    PHAssetPlaybackStyle: {} #since 11.0
    PHPhotosError: {nserror: true, prefix: PHPhotosError, first: PHPhotosErrorInvalid} #since 13.0
    PHAccessLevel: { } #since 14.0
classes:
    PHLivePhotoRequestOptions: {}
    PHLivePhoto:
        methods:
            '+requestLivePhotoWithResourceFileURLs:placeholderImage:targetSize:contentMode:resultHandler:':
                name: requestLivePhoto
            '+cancelLivePhotoRequestWithRequestID:':
                name: cancelLivePhotoRequest
    PHAdjustmentData: # DONE
        methods:
            '-init.*':
                name: init
    PHAsset: # DONE
        properties:
            'location':
                annotations: ['@WeaklyLinked']
            'representsBurst':
                omit_prefix: true
        methods:
            '-canPerformEditOperation:':
                trim_after_first_colon: true
            '+fetchAssetsInAssetCollection:options:':
                trim_after_first_colon: true
            '+fetchAssetsWithMediaType:options:':
                trim_after_first_colon: true
            '+fetchAssetsWithLocalIdentifiers:options:':
                trim_after_first_colon: true
                parameters:
                    identifiers:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '+fetchKeyAssetsInAssetCollection:options:':
                trim_after_first_colon: true
            '+fetchAssetsWithBurstIdentifier:options:':
                trim_after_first_colon: true
            '+fetchAssetsWithOptions:':
                name: fetchAssets
            '+fetchAssetsWithALAssetURLs:options:':
                trim_after_first_colon: true
            '-requestContentEditingInputWithOptions:completionHandler:':
                name: requestContentEditingInput
            '-cancelContentEditingInputRequest:':
                trim_after_first_colon: true
    PHAssetChangeRequest: # DONE
        properties:
            'location':
                annotations: ['@WeaklyLinked']
        methods:
            '+creationRequestForAssetFromImage:':
                name: createImageAssetCreationRequest
                annotations: ['@WeaklyLinked']
            '+creationRequestForAssetFromImageAtFileURL:':
                name: createImageAssetCreationRequest
            '+creationRequestForAssetFromVideoAtFileURL:':
                name: createVideoAssetCreationRequest
            '+deleteAssets:':
                trim_after_first_colon: true
            '+changeRequestForAsset:':
                name: create
                constructor: true
    PHAssetCreationRequest: # DONE
        skip_def_constructor: true
        methods:
            '-addResource.*':
                name: addResource
            '+creationRequestForAsset':
                name: create
                constructor: true
            '+supportsAssetResourceTypes:':
                trim_after_first_colon: true
                parameters:
                    types:
                        type: List<PHAssetResourceType>
                        marshaler: PHAssetResourceType.AsListMarshaler
    PHAssetCollection: # DONE
        properties:
            'localizedLocationNames':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
            'approximateLocation':
                annotations: ['@WeaklyLinked']
        methods:
            '+fetchAssetCollectionsWithLocalIdentifiers:options:':
                trim_after_first_colon: true
                parameters:
                    identifiers:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '+fetchAssetCollectionsWithType:subtype:options:':
                trim_after_first_colon: true
            '+fetchAssetCollectionsContainingAsset:withType:options:':
                trim_after_first_colon: true
            '+fetchAssetCollectionsWithALAssetGroupURLs:options:':
                trim_after_first_colon: true
            '+fetchMomentsInMomentList:options:':
                trim_after_first_colon: true
            '+fetchMomentsWithOptions:':
                name: fetchMoments
            '+transientAssetCollectionWithAssets:title:':
                name: createTransientAssetCollection
                constructor: true
            '+transientAssetCollectionWithAssetFetchResult:title:':
                name: createTransientAssetCollection
                constructor: true
    PHAssetCollectionChangeRequest: # DONE
        methods:
            '-addAssets:':
                name: addAssets
            '-insertAssets:atIndexes:':
                name: insertAssets
            '-removeAssets:':
                name: removeAssets
            '-removeAssetsAtIndexes:':
                name: removeAssets
            '-replaceAssetsAtIndexes:withAssets:':
                name: replaceAssets
            '-moveAssetsAtIndexes:toIndex:':
                name: moveAssetsTo
            '+creationRequestForAssetCollectionWithTitle:':
                name: createAssetCollectionCreationRequest
            '+deleteAssetCollections:':
                trim_after_first_colon: true
            '+changeRequestForAssetCollection:':
                name: create
                constructor: true
            '+changeRequestForAssetCollection:assets:':
                name: create
                constructor: true
    PHAssetResource: # DONE
        methods:
            '+assetResourcesForAsset:':
                name: getAssetResources
    PHAssetResourceCreationOptions: {} # DONE
    PHAssetResourceManager: # DONE
        methods:
            '-requestDataForAssetResource:options:dataReceivedHandler:completionHandler:':
                name: requestData
            '-writeDataForAssetResource:toFile:options:completionHandler:':
                name: writeData
            '-cancelDataRequest:':
                trim_after_first_colon: true
            '+defaultManager':
                property: true
    PHAssetResourceRequestOptions: {} # DONE
    PHCachingImageManager: # DONE
        methods:
            '-startCachingImagesForAssets:targetSize:contentMode:options:':
                trim_after_first_colon: true
            '-stopCachingImagesForAssets:targetSize:contentMode:options:':
                trim_after_first_colon: true
    PHChange: # DONE
        methods:
            '-changeDetailsForObject:':
                name: getChangeDetailsForObject
            '-changeDetailsForFetchResult:':
                name: getChangeDetailsForFetchResult
    PHCollection: # DONE
        properties:
            '(canContainAssets|canContainCollections)':
                omit_prefix: true
        methods:
            '-canPerformEditOperation:':
                trim_after_first_colon: true
            '+fetchCollectionsInCollectionList:options:':
                trim_after_first_colon: true
            '+fetchTopLevelUserCollectionsWithOptions:':
                name: fetchTopLevelUserCollections
    PHCollectionList: # DONE
        properties:
            'localizedLocationNames':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
        methods:
            '+fetchCollectionListsContainingCollection:options:':
                trim_after_first_colon: true
            '+fetchCollectionListsWithLocalIdentifiers:options:':
                trim_after_first_colon: true
                parameters:
                    identifiers:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '+fetchCollectionListsWithType:subtype:options:':
                trim_after_first_colon: true
            '+fetchMomentListsWithSubtype:containingMoment:options:':
                name: fetchMomentListsWithSubtypeContainingMoment
            '+fetchMomentListsWithSubtype:options:':
                trim_after_first_colon: true
            '+transientCollectionListWithCollections:title:':
                name: createTransientCollectionList
                constructor: true
            '+transientCollectionListWithCollectionsFetchResult:title:':
                name: createTransientCollectionList
                constructor: true
    PHCollectionListChangeRequest: # DONE
        methods:
            '-addChildCollections:':
                name: addChildCollections
            '-insertChildCollections:atIndexes:':
                name: insertChildCollections
            '-removeChildCollections:':
                name: removeChildCollections
            '-removeChildCollectionsAtIndexes:':
                name: removeChildCollections
            '-replaceChildCollectionsAtIndexes:withChildCollections:':
                name: replaceChildCollections
            '-moveChildCollectionsAtIndexes:toIndex:':
                name: moveChildCollectionsTo
            '+creationRequestForCollectionListWithTitle:':
                name: createCollectionListCreationRequest
            '+deleteCollectionLists:':
                trim_after_first_colon: true
            '+changeRequestForCollectionList:':
                name: create
                constructor: true
            '+changeRequestForCollectionList:childCollections:':
                name: create
                constructor: true
    PHContentEditingInput: # DONE
        properties:
            '(displaySizeImage|avAsset|location)':
                annotations: ['@WeaklyLinked']
            'fullSizeImageOrientation':
                type: org.robovm.apple.imageio.CGImagePropertyOrientation
                annotations: ['@WeaklyLinked']
    PHContentEditingInputRequestOptions: {} # DONE
    PHContentEditingOutput: # DONE
        methods:
            '-init.*':
                name: init
    PHFetchOptions: # DONE
        properties:
            'includeHiddenAssets':
                name: includesHiddenAssets
            'includeAllBurstAssets':
                name: includesAllBurstAssets
    PHFetchResult: # DONE
        properties:
            'count':
                name: size
                omit_prefix: true
            'firstObject':
                name: first
                omit_prefix: true
            'lastObject':
                name: last
                omit_prefix: true
        methods:
            '-objectAtIndex:':
                name: get
            '-objectAtIndexedSubscript:':
                exclude: true
            '-containsObject:':
                name: contains
            '-indexOfObject.*':
                name: indexOf
            '-objectsAtIndexes:':
                name: getAll
            '-enumerateObjects.*':
                name: enumerateObjects0
                visibility: protected
            '-countOfAssetsWithMediaType:':
                name: getCountOfAssetsWithMediaType
    PHFetchResultChangeDetails: # DONE
        properties:
            '(hasIncrementalChanges|hasMoves)':
                omit_prefix: true
        methods:
            '-enumerateMovesWithBlock:':
                name: enumerateMoves
            '+changeDetailsFromFetchResult:toFetchResult:changedObjects:':
                name: create
                constructor: true
                return_type: '@Pointer <T extends PHObject> long'
    PHImageManager: # DONE
        methods:
            '-requestImageForAsset:targetSize:contentMode:options:resultHandler:':
                trim_after_first_colon: true
                annotations: ['@WeaklyLinked']
            '-requestImageDataForAsset:options:resultHandler:':
                trim_after_first_colon: true
                annotations: ['@WeaklyLinked']
            '-requestLivePhotoForAsset:targetSize:contentMode:options:resultHandler:':
                trim_after_first_colon: true
                annotations: ['@WeaklyLinked']
            '-cancelImageRequest:':
                trim_after_first_colon: true
            '-requestPlayerItemForVideo:options:resultHandler:':
                trim_after_first_colon: true
                annotations: ['@WeaklyLinked']
            '-requestExportSessionForVideo:options:exportPreset:resultHandler:':
                trim_after_first_colon: true
                annotations: ['@WeaklyLinked']
            '-requestAVAssetForVideo:options:resultHandler:':
                trim_after_first_colon: true
                annotations: ['@WeaklyLinked']
            '-requestImageDataAndOrientationForAsset:options:resultHandler:':
                name: requestImageDataAndOrientationForAsset
            '+defaultManager':
                property: true
    PHImageRequestOptions: {} # DONE
    PHObject: {} # DONE
    PHObjectPlaceholder: {} # DONE
    PHObjectChangeDetails: # DONE
        properties:
            '(assetContentChanged|objectWasDeleted)':
                omit_prefix: true
    PHPhotoLibrary: # DONE
        methods:
            '-performChanges:completionHandler:':
                trim_after_first_colon: true
            '-performChangesAndWait:error:':
                trim_after_first_colon: true
                throws: NSErrorException
            '-registerChangeObserver:':
                trim_after_first_colon: true
            '-unregisterChangeObserver:':
                trim_after_first_colon: true
            '+sharedPhotoLibrary':
                property: true
            '+authorizationStatus':
                property: true
            '+requestAuthorization:':
                trim_after_first_colon: true
            '+requestAuthorizationForAccessLevel:handler:':
                name: requestAuthorization
    PHVideoRequestOptions: {} # DONE
    PHLivePhotoEditingContext:
        methods:
            '-initWithLivePhotoEditingInput:':
                name: init
            '-prepareLivePhotoForPlaybackWithTargetSize:options:completionHandler:':
                name: prepareLivePhotoForPlayback
            '-saveLivePhotoToOutput:options:completionHandler:':
                name: saveLivePhoto
    PHChangeRequest: {} #since 13.0
    PHCloudIdentifier: #since 15.0
        methods:
            '-initWithStringValue:':
                name: init
    PHCloudIdentifierMapping: {} #since 15.0
    PHLocalIdentifierMapping: {} #since 15.0
protocols:
    PHLivePhotoFrame: {}

    PHPhotoLibraryChangeObserver: # DONE
        methods:
            '-photoLibraryDidChange:':
                name: didChange
    PHPhotoLibraryAvailabilityObserver:  #since 13.0
        methods:
            '-photoLibraryDidBecomeUnavailable:':
                name: didBecomeUnavailable

functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?PH.*):
        class: Photos
        name: 'Function__#{g[0]}'

values:
    # PHAsset
    PHContentEditingInput(.*)Key:
        dictionary: PHContentEditingInputRequestResult
        name: '#{g[0]}'
        type: NSString
        mutable: false
        methods:
            ResultIsInCloud:
                name: resultInCloud
                type: boolean
            Cancelled:
                name: isCancelled
                type: boolean
            Error:
                type: NSError

    # PHImageManager
    PH(InvalidImageRequestID):
        class: PHImageManager
        name: 'get#{g[0]}'
    PHImageManager(MaximumSize):
        class: PHImageManager
        name: 'get#{g[0]}'
    PHImage(.*)Key:
        dictionary: PHImageRequestResult
        name: '#{g[0]}'
        type: NSString
        mutable: false
        methods:
            ResultIsInCloud:
                name: resultInCloud
                type: boolean
            ResultIsDegraded:
                name: resultDegraded
                type: boolean
            ResultRequestID:
                type: long
            Cancelled:
                name: isCancelled
                type: boolean
            Error:
                type: NSError
   
    PHLivePhoto(.*):
        class: PHLivePhoto
        name: '#{g[0]}'

    PHPhotosErrorDomain:
        class: PHPhotosError
        name: getClassDomain
    PHLocalIdentifiersErrorKey:
        class: PHPhotosError
        name: getLocalIdentifiersErrorKey

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?PH.*):
        class: Photos
        name: 'Value__#{g[0]}'

constants:
    PHLivePhoto(.*):
        class: PHLivePhoto
        name: '#{g[0]}'
    PHInvalidImageRequestID:
        class: PHImageManager
        name: 'InvalidImageRequestID'
    PHInvalidAssetResourceDataRequestID:
        class: PHAssetResourceManager
        name: 'InvalidAssetResourceDataRequestID'

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?PH.*):
        class: Photos
        name: 'Constant__#{g[0]}'
