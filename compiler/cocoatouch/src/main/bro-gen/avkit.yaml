package: org.robovm.apple.avkit
include: [foundation, uikit, avfoundation, coremedia, coregraphics, iad, coreanimation]
library: AVKit
framework: AVKit
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/AVKit.framework/Headers/AVKit.h
typedefs: {}

enums:
    AVKitError: {name: AVKitErrorCode}
    AVAudioSessionRouteSelection: {} #since 13.0

classes:
    AVKitError: # DONE
        annotations: ['@StronglyLinked']
        extends: NSError

    AVPictureInPictureController: # DONE
        methods:
            '-initWithPlayerLayer:':
                name: init
            '-initWithContentSource:':
                name: init
            '+pictureInPictureButtonStartImageCompatibleWithTraitCollection:':
                name: getPictureInPictureButtonStartImage
            '+pictureInPictureButtonStopImageCompatibleWithTraitCollection:':
                name: getPictureInPictureButtonStopImage
    AVPlayerViewController: # DONE
        properties:
            'videoGravity':
                type: AVLayerVideoGravity
    AVRoutePickerView: {} #since 11.0
    AVPictureInPictureControllerContentSource: #since 15.0
        methods:
            '-initWithPlayerLayer:':
                name: init
            '-initWithSampleBufferDisplayLayer:playbackDelegate:':
                name: init
            '-initWithActiveVideoCallSourceView:contentViewController:':
                name: init
    AVPictureInPictureVideoCallViewController: {} #since 15.0

protocols:
    AVPictureInPictureControllerDelegate: # DONE
        methods:
            '-pictureInPictureControllerWillStartPictureInPicture:':
                name: willStartPictureInPicture
            '-pictureInPictureControllerDidStartPictureInPicture:':
                name: didStartPictureInPicture
            '-pictureInPictureController:failedToStartPictureInPictureWithError:':
                name: failedToStartPictureInPicture
            '-pictureInPictureControllerWillStopPictureInPicture:':
                name: willStopPictureInPicture
            '-pictureInPictureControllerDidStopPictureInPicture:':
                name: didStopPictureInPicture
            '-pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:':
                name: restoreUserInterfaceForPictureInPictureStop
    AVPlayerViewControllerDelegate: # DONE
        methods:
            '-playerViewControllerWillStartPictureInPicture:':
                name: willStartPictureInPicture
            '-playerViewControllerDidStartPictureInPicture:':
                name: didStartPictureInPicture
            '-playerViewController:failedToStartPictureInPictureWithError:':
                name: failedToStartPictureInPicture
            '-playerViewControllerWillStopPictureInPicture:':
                name: willStopPictureInPicture
            '-playerViewControllerDidStopPictureInPicture:':
                name: didStopPictureInPicture
            '-playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:':
                name: shouldAutomaticallyDismissAtPictureInPictureStart
            '-playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:':
                name: restoreUserInterfaceForPictureInPictureStop
            '-playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:':
                name: willBeginFullScreenPresentation
            '-playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:':
                name: willEndFullScreenPresentation
            '-playerViewController:restoreUserInterfaceForFullScreenExitWithCompletionHandler:':
                name: restoreUserInterfaceForFullScreenExit
    AVRoutePickerViewDelegate:
        methods:
            '-routePickerViewWillBeginPresentingRoutes:':
                name: willBeginPresentingRoutes
            '-routePickerViewDidEndPresentingRoutes:':
                name: didEndPresentingRoutes
    AVPictureInPictureSampleBufferPlaybackDelegate: #since 15.0
        methods:
            '-pictureInPictureController:setPlaying:':
                name: setPlaying
            '-pictureInPictureController:didTransitionToRenderSize:':
                name: didTransitionToRenderSize
            '-pictureInPictureController:skipByInterval:completionHandler:':
                name: skipByInterval
functions:
    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?AV.*):
        class: AVKit
        name: 'Function__#{g[0]}'

values:
    AVKitErrorDomain:
        class: AVKitError
        name: getClassDomain

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?AV.*):
        class: AVKit
        name: 'Value__#{g[0]}'

constants:
    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?AV.*):
        class: AVKit
        name: 'Constant__#{g[0]}'
