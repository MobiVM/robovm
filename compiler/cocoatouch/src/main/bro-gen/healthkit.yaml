package: org.robovm.apple.healthkit
include: [foundation, uniformtypeid]
library: HealthKit
framework: HealthKit
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/HealthKit.framework/Headers/HealthKit.h

private_typedefs:
    'CLLocation *': org.robovm.apple.corelocation.CLLocation
    'CLLocation': org.robovm.apple.corelocation.CLLocation

enums:
    HKErrorCode: {}
    HKUpdateFrequency: {}
    HKAuthorizationStatus: {}
    HKBiologicalSex: {}
    HKBloodType: {}
    HKCategoryValueSleepAnalysis: {}
    HKWorkoutActivityType: {}
    HKWorkoutEventType: {}
    HKQueryOptions: {}
    HKBodyTemperatureSensorLocation: {}
    HKHeartRateSensorLocation: {}
    HKQuantityAggregationStyle: {}
    HKStatisticsOptions: {}
    HKMetricPrefix: {}
    HKCategoryValueAppleStandHour: {}
    HKFitzpatrickSkinType: {}
    HKWheelchairUse: {}
    HKCategoryValueCervicalMucusQuality: {}
    HKCategoryValueOvulationTestResult: {}
    HKCategoryValueMenstrualFlow: {}
    HKCategoryValue: {}
    HKWeatherCondition: {}
    HKWorkoutSwimmingLocationType: {}
    HKSwimmingStrokeStyle: {}
    HKWorkoutSessionLocationType: {}
    HKHeartRateMotionContext: {} #since 11.0
    HKInsulinDeliveryReason: {} #since 11.0
    HKBloodGlucoseMealTime: {} #since 11.0
    HKVO2MaxTestType: {} #since 11.0
    HKAuthorizationRequestStatus: {} #since 12.0
    HKCategoryValueAudioExposureEvent: {} #since 13.0
    HKCategoryValueSeverity: {} #since 13.6
    HKCategoryValueAppetiteChanges: {} #since 13.6
    HKCategoryValuePresence: {} #since 13.6
    HKCategoryValueEnvironmentalAudioExposureEvent: {} #since 14.0
    HKElectrocardiogramLead: {} #since 14.0
    HKElectrocardiogramClassification: {} #since 14.0
    HKElectrocardiogramSymptomsStatus: {} #since 14.0
    HKAppleECGAlgorithmVersion: {prefix: HKAppleECGAlgorithm} #since 14.0
    HKDevicePlacementSide: {} #since 14.0
    HKActivityMoveMode: {} #since 14.0
    HKCategoryValueHeadphoneAudioExposureEvent: {} #since 14.2
    HKCategoryValueContraceptive: {} #since 14.3
    HKCategoryValueLowCardioFitnessEvent: {} #since 14.3
    HKCategoryValuePregnancyTestResult: {} #since 15.0
    HKCategoryValueProgesteroneTestResult: {} #since 15.0
    HKCategoryValueAppleWalkingSteadinessEvent: {} #since 15.0
    HKAppleWalkingSteadinessClassification: {} #since 15.0
    HKVisionPrescriptionType: {} #since 16.0
    HKUserMotionContext: {} #since 16.0
    HKHeartRateRecoveryTestType: {} #since 16.0
    HKPrismBase: {} #since 16.0
    HKVisionEye: {} #since 16.0
    HKWaterSalinity: {} #since 17.0
    HKCyclingFunctionalThresholdPowerTestType: {} #since 17.0
    HKPhysicalEffortEstimationType: {} #since 17.0
    HKWorkoutSessionState: {} #since 17.0
    HKWorkoutSessionType: {} #since 17.0
typed_enums:
    HKFHIRResourceType:
        enum: HKFHIRResourceType
        prefix: HKFHIRResourceType
        type: NSString
    HKClinicalTypeIdentifier:
        enum: HKClinicalTypeIdentifier
        prefix: HKClinicalTypeIdentifier
        type: NSString
    HKFHIRRelease:
        enum: HKFHIRRelease
        prefix: HKFHIRRelease
        type: NSString
    HKVerifiableClinicalRecordSourceType:
        enum: HKVerifiableClinicalRecordSourceType
        prefix: HKVerifiableClinicalRecordSourceType
        type: NSString
    HKVerifiableClinicalRecordCredentialType:
        enum: HKVerifiableClinicalRecordCredentialType
        prefix: HKVerifiableClinicalRecordCredentialType
        type: NSString

classes:
    HKError:
        extends: NSError
        annotations: ['@StronglyLinked']
        
    HKBiologicalSexObject: {} # DONE
    HKBloodTypeObject: {} # DONE
    HKFitzpatrickSkinTypeObject: {}
    HKWheelchairUseObject: {}
    HKWorkoutConfiguration: {}
    HKSourceRevision:
        methods:
            '-init.*':
                name: init
    HKActivitySummaryType: {}
    HKHealthStore: # DONE
        methods:
            '-authorizationStatusForType:':
                name: getAuthorizationStatusForType
            '-requestAuthorizationToShareTypes:readTypes:completion:':
                name: requestAuthorizationToTypes
                parameters:
                    typesToShare:
                        type: NSSet<HKSampleType>
                    typesToRead:
                        type: NSSet<HKObjectType>
            '-saveObject:withCompletion:':
                trim_after_first_colon: true
            '-saveObjects:withCompletion:':
                trim_after_first_colon: true
                parameters:
                    objects:
                        type: NSArray<HKObject>
            '-deleteObject:withCompletion:':
                trim_after_first_colon: true
            '-deleteObjects:withCompletion:':
                trim_after_first_colon: true
            '-deleteObjectsOfType:predicate:withCompletion:':
                trim_after_first_colon: true
            '-splitTotalEnergy:startDate:endDate:resultsHandler:':
                trim_after_first_colon: true
            '-executeQuery:':
                trim_after_first_colon: true
            '-stopQuery:':
                trim_after_first_colon: true
            '-dateOfBirthWithError:':
                name: getDateOfBirth
                throws: NSErrorException
            '-biologicalSexWithError:':
                name: getBiologicalSex
                throws: NSErrorException
            '-bloodTypeWithError:':
                name: getBloodType
                throws: NSErrorException
            '-addSamples:toWorkout:completion:':
                name: addSamplesToWorkout
                parameters:
                    samples:
                        type: NSArray<HKSample>
            '-enableBackgroundDeliveryForType:frequency:withCompletion:':
                trim_after_first_colon: true
            '-disableBackgroundDeliveryForType:withCompletion:':
                trim_after_first_colon: true
            '-disableAllBackgroundDeliveryWithCompletion:':
                name: disableAllBackgroundDelivery
            '-preferredUnitsForQuantityTypes:completion:':
                name: getPreferredUnitsForQuantityTypes
                parameters:
                    quantityTypes:
                        type: NSSet<HKQuantityType>
                    completion:
                        type: '@Block VoidBlock2<NSDictionary<HKQuantityType, HKUnit>, NSError>'
            '-startWatchAppWithWorkoutConfiguration:completion:':
                name: startWatchApp
            '-getRequestStatusForAuthorizationToShareTypes:readTypes:completion:':
                name: getRequestStatus
            '-handleAuthorizationForExtensionWithCompletion:':
                name: handleAuthorizationForExtension
            '-dateOfBirthComponentsWithError:':
                name: getDateOfBirthComponents
                throws: NSErrorException
            '-fitzpatrickSkinTypeWithError:':
                name: getFitzpatrickSkinType
                throws: NSErrorException
            '-wheelchairUseWithError:':
                name: getWheelchairUse
                throws: NSErrorException
            '-activityMoveModeWithError:':
                name: getActivityMoveMode
            '-recalibrateEstimatesForSampleType:atDate:completion:':
                name: recalibrateEstimates
            '-requestPerObjectReadAuthorizationForType:predicate:completion:':
                name: requestPerObjectReadAuthorization
    HKObject: # DONE
        properties:
            'metadata':
                type: HKMetadata
        methods:
            '-init':
                exclude: true
    HKSample: {} # DONE
    HKDocumentSample: {}
    HKCDADocumentSample:
        methods:
            '+CDADocumentSampleWithData:startDate:endDate:metadata:validationError:':
                name: create
                parameters:
                    metadata:
                        type: HKMetadata
    HKCDADocument: {}
    HKCategorySample: # DONE
        methods:
            '-init':
                exclude: true 
            '+categorySampleWithType:value:startDate:endDate:metadata:':
                name: create
                parameters:
                    metadata:
                        type: HKMetadata
            '+categorySampleWithType:value:startDate:endDate:':
                name: create
            '+categorySampleWithType:value:startDate:endDate:device:metadata:':
                name: create
                parameters:
                    metadata:
                        type: HKMetadata
    HKCorrelation: # DONE
        properties:
            'objects':
                type: NSSet<HKSample>
        methods:
            '-objectsForType:':
                name: getObjectsForType
                return_type: NSSet<HKSample>
            '+correlationWithType:startDate:endDate:objects:':
                name: create
                parameters:
                    objects:
                        type: NSSet<HKSample>
            '+correlationWithType:startDate:endDate:objects:metadata:':
                name: create
                parameters:
                    objects:
                        type: NSSet<HKSample>
                    metadata:
                        type: HKMetadata
            '+correlationWithType:startDate:endDate:objects:device:metadata:':
                name: create
                parameters:
                    objects:
                        type: NSSet<HKSample>
                    metadata:
                        type: HKMetadata
    HKQuantitySample: # DONE
        methods:
            '+quantitySampleWithType:quantity:startDate:endDate:':
                name: create
            '+quantitySampleWithType:quantity:startDate:endDate:metadata:':
                name: create
                parameters:
                    metadata:
                        type: HKMetadata
            '+quantitySampleWithType:quantity:startDate:endDate:device:metadata:':
                name: create
                parameters:
                    metadata:
                        type: HKMetadata
    HKWorkout: # DONE
        properties:
            'workoutEvents':
                type: NSArray<HKWorkoutEvent>
        methods:
            '+workoutWithActivityType:startDate:endDate:':
                name: create
            '+workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:metadata:':
                name: create
                parameters:
                    workoutEvents:
                        type: NSArray<HKWorkoutEvent>
                    metadata:
                        type: HKMetadata
            '+workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:metadata:':
                name: create
                parameters:
                    metadata:
                        type: HKMetadata
            '+workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:device:metadata:':
                name: create
                parameters:
                    metadata:
                        type: HKMetadata
            '+workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:device:metadata:':
                name: create
                parameters:
                    metadata:
                        type: HKMetadata
            '+workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:totalSwimmingStrokeCount:device:metadata:':
                name: create
                parameters:
                    metadata:
                        type: HKMetadata
            '+workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:totalFlightsClimbed:device:metadata:':
                name: create
    HKObjectType: # DONE
        properties:
            'identifier':
                type: HKTypeIdentifier
        methods:
            '-init':
                exclude: true
            '+quantityTypeForIdentifier:':
                name: getQuantityType
                parameters:
                    identifier:
                        type: HKQuantityTypeIdentifier
            '+categoryTypeForIdentifier:':
                name: getCategoryType
                parameters:
                    identifier:
                        type: HKCategoryTypeIdentifier
            '+characteristicTypeForIdentifier:':
                name: getCharacteristicType
                parameters:
                    identifier:
                        type: HKCharacteristicTypeIdentifier
            '+correlationTypeForIdentifier:':
                name: getCorrelationType
                parameters:
                    identifier:
                        type: HKCorrelationTypeIdentifier
            '+workoutType':
                property: true
    HKCharacteristicType: {} # DONE
    HKSampleType: {} # DONE
    HKDocumentType: {}
    HKCategoryType: {} # DONE
    HKCorrelationType: {} # DONE
    HKQuantityType: # DONE
        methods:
            '-isCompatibleWithUnit:':
                name: isCompatibleWithUnit
    HKWorkoutType: {} # DONE
    HKQuantity: # DONE
        methods:
            '-init':    
                exclude: true
            '-isCompatibleWithUnit:':
                name: isCompatibleWithUnit
            '-doubleValueForUnit:':
                name: getDoubleValueForUnit
            '-compare:':
                trim_after_first_colon: true
            '+quantityWithUnit:doubleValue:':
                name: create
    HKQuery: # DONE
        methods:
            '-init':
                exclude: true
            '+predicateForObjectsWithMetadataKey:.*':
                name: createPredicateForObjectsWithMetadata
            '+predicateForObjectsFromSource:':
                name: createPredicateForObjectsFromSource
            '+predicateForObjectsFromSources:':
                name: createPredicateForObjectsFromSources
                parameters:
                    sources:
                        type: NSSet<HKSource>
            '+predicateForObjectWithUUID:':
                name: createPredicateForObjectsWithUUID
                parameters:
                    UUID:
                        name: uuid
            '+predicateForObjectsWithUUIDs:':
                name: createPredicateForObjectsWithUUIDs
                parameters:
                    UUIDs:
                        name: uuids
                        type: NSSet<NSUUID>
            '+predicateForObjectsWithNoCorrelation':
                name: createPredicateForObjectsWithNoCorrelation
            '+predicateForObjectsFromWorkout:':
                name: createPredicateForObjectsFromWorkout
            '+predicateForSamplesWithStartDate:endDate:options:':
                name: createPredicateForSamplesWithDate
            '+predicateForQuantitySamplesWithOperatorType:quantity:':
                name: createPredicateForQuantitySamplesWithQuantity
            '+predicateForCategorySamplesWithOperatorType:value:':
                name: createPredicateForCategorySamplesWithValue
            '+predicateForWorkoutsWithWorkoutActivityType:':
                name: createPredicateForWorkoutsWithActivityType
            '+predicateForWorkoutsWithOperatorType:duration:':
                name: createPredicateForWorkoutsWithDuration
            '+predicateForWorkoutsWithOperatorType:totalEnergyBurned:':
                name: createPredicateForWorkoutsWithTotalEnergyBurned
            '+predicateForWorkoutsWithOperatorType:totalDistance:':
                name: createPredicateForWorkoutsWithTotalDistance
            '+predicateForObjectsWithDeviceProperty:allowedValues:':
                trim_after_first_colon: true
            '+predicateForWorkoutsWithOperatorType:totalSwimmingStrokeCount:':
                name: createPredicateForWorkoutsWithTotalSwimmingStrokeCount
            '+predicateForActivitySummariesBetweenStartDateComponents:endDateComponents:':
                name: createPredicateForActivitySummariesBetweenDates
            '+predicateForWorkoutsWithOperatorType:totalFlightsClimbed:':
                name: createPredicateForWorkouts
            '+predicateForClinicalRecordsFromSource:FHIRResourceType:identifier:':
                name: createPredicateForClinicalRecords
            '+predicateForActivitySummaryWithDateComponents:':
                name: createPredicateForActivitySummary
            '+predicateForClinicalRecordsWithFHIRResourceType:':
                name: createPredicateForClinicalRecords
            '+predicateForObjectsAssociatedWithElectrocardiogram:':
                name: createPredicateForObjectsAssociatedWithElectrocardiogram
            '+predicateForElectrocardiogramsWithClassification:':
                name: predicateForElectrocardiogramsWithClassification
            '+predicateForElectrocardiogramsWithSymptomsStatus:':
                name: predicateForElectrocardiogramsWithSymptomsStatus
            '+predicateForVerifiableClinicalRecordsWithRelevantDateWithinDateInterval:':
                name: predicateForVerifiableClinicalRecords
            '+predicateForWorkoutsWithOperatorType:quantityType:sumQuantity:':
                name: predicateForWorkoutsSumQuantity
            '+predicateForWorkoutsWithOperatorType:quantityType:minimumQuantity:':
                name: predicateForWorkoutsMinimumQuantity
            '+predicateForWorkoutsWithOperatorType:quantityType:maximumQuantity:':
                name: predicateForWorkoutsMaximumQuantity
            '+predicateForWorkoutsWithOperatorType:quantityType:averageQuantity:':
                name: predicateForWorkoutsAverageQuantity
            '+predicateForWorkoutActivitiesWithWorkoutActivityType:':
                name: predicateForWorkoutActivities
            '+predicateForWorkoutActivitiesWithOperatorType:duration:':
                name: predicateForWorkoutActivities
            '+predicateForWorkoutActivitiesWithStartDate:endDate:options:':
                name: predicateForWorkoutActivities
            '+predicateForWorkoutActivitiesWithOperatorType:quantityType:sumQuantity:':
                name: predicateForWorkoutActivitiesSumQuantity
            '+predicateForWorkoutActivitiesWithOperatorType:quantityType:minimumQuantity:':
                name: predicateForWorkoutActivitiesMinimumQuantity
            '+predicateForWorkoutActivitiesWithOperatorType:quantityType:maximumQuantity:':
                name: predicateForWorkoutActivitiesMaximumQuantity
            '+predicateForWorkoutActivitiesWithOperatorType:quantityType:averageQuantity:':
                name: predicateForWorkoutActivitiesAverageQuantity
            '+predicateForWorkoutsWithActivityPredicate:':
                name: predicateForWorkouts
    HKAnchoredObjectQuery: # DONE
        methods:
            '-initWithType:predicate:anchor:limit:completionHandler:':
                name: init
                parameters:
                    handler:
                        type: '@Block("(,,@MachineSizedUInt,)") VoidBlock4<HKAnchoredObjectQuery, NSArray<HKSample>, Long, NSError>'
            '-init.*':
                name: init
    HKCorrelationQuery: # DONE
        properties:
            'samplePredicates':
                type: 'NSDictionary<HKSampleType, NSPredicate>'
        methods:
            '-initWithType:predicate:samplePredicates:completion:':
                name: init
                parameters:
                    samplePredicates:
                        type: 'NSDictionary<HKSampleType, NSPredicate>'
                    completion: 
                        type: '@Block VoidBlock3<HKCorrelationQuery, NSArray<HKCorrelation>, NSError>'
    HKObserverQuery: # DONE
        methods:
            '-initWithSampleType:predicate:updateHandler:':
                name: init
                parameters:
                    updateHandler:
                        type: '@Block("(,@Block,)") VoidBlock3<HKObserverQuery, Runnable, NSError>'
            '-initWithQueryDescriptors:updateHandler:':
                name: init
    HKSampleQuery: # DONE
        properties:
            'sortDescriptors':
                type: NSArray<NSSortDescriptor>
        methods:
            '-initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:':
                name: init
                parameters:
                    sortDescriptors:
                        type: NSArray<NSSortDescriptor>
                    resultsHandler:
                        type: '@Block VoidBlock3<HKSampleQuery, NSArray<HKSample>, NSError>'
            '-initWithQueryDescriptors:limit:resultsHandler:':
                name: init
            '-initWithQueryDescriptors:limit:sortDescriptors:resultsHandler:':
                name: init
    HKSourceQuery: # DONE
        methods:
            '-initWithSampleType:samplePredicate:completionHandler:':
                name: init
                parameters:
                    completionHandler:
                        type: '@Block VoidBlock3<HKSourceQuery, NSSet<HKSource>, NSError>'
    HKStatisticsCollectionQuery: # DONE
        methods:
            '-init.*':
                name: init
    HKStatisticsQuery: # DONE
        methods:
            '-init.*':
                name: init
    HKSource: # DONE
        methods:
            '-init':
                exclude: true
            '+defaultSource':
                property: true
    HKStatistics: # DONE
        properties:
            'sources':
                type: NSArray<HKSource>
        methods:
            '-init':
                exclude: true
            '-(averageQuantity|minimumQuantity|maximumQuantity|sumQuantity)':
                property: true
            '-averageQuantityForSource:':
                name: getAverageQuantityForSource
            '-minimumQuantityForSource:':
                name: getMinimumQuantityForSource
            '-maximumQuantityForSource:':
                name: getMaximumQuantityForSource
            '-sumQuantityForSource:':
                name: getSumQuantityForSource
    HKStatisticsCollection: # DONE
        methods:
            '-init':
                exclude: true 
            '-statisticsForDate:':
                name: getStatisticsForDate
            '-enumerateStatisticsFromDate:toDate:withBlock:':
                name: enumerateStatistics
            '-statistics':
                property: true
                return_type: NSArray<HKStatistics>
            '-sources':
                property: true
                return_type: NSSet<HKSource>
    HKUnit: # DONE
        methods:
            '-init':
                exclude: true
            '+unitFromString:':
                name: fromString
            '+unitFromMassFormatterUnit:':
                name: fromMassFormatterUnit
            '+massFormatterUnitFromUnit:':
                name: createMassFormatterUnit
            '+unitFromLengthFormatterUnit:':
                name: fromLengthFormatterUnit
            '+lengthFormatterUnitFromUnit:':
                name: createLengthFormatterUnit
            '+unitFromEnergyFormatterUnit:':
                name: fromEnergyFormatterUnit
            '+energyFormatterUnitFromUnit:':
                name: createEnergyFormatterUnit
            '+(.*)Unit.*':
                name: '#{g[0]}'
            '-unitMultipliedByUnit:':
                name: multiplyBy
            '-unitDividedByUnit:':
                name: divideBy
            '-unitRaisedToPower:':
                name: raiseToPower
    HKWorkoutEvent: # DONE
        methods:
            '-init':
                exclude: true
            '+workoutEventWithType:date:':
                name: create
            '+workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:device:metadata:':
                name: create
                parameters:
                    'metadata':
                        type: HKMetadata
            '+workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:device:metadata:':
                name: create
                parameters:
                    'metadata':
                        type: HKMetadata
            '+workoutWithActivityType:startDate:endDate:workoutEvents:totalEnergyBurned:totalDistance:totalSwimmingStrokeCount:device:metadata:':
                name: create
                parameters:
                    'metadata':
                        type: HKMetadata
            '+workoutEventWithType:date:metadata:':
                name: create
                parameters:
                    'metadata':
                        type: HKMetadata
            '+workoutEventWithType:dateInterval:metadata:':
                name: create
        properties:
            'metadata':
                type: HKMetadata
    HKQueryAnchor:
        methods:
            '+anchorFromValue:':
                name: create
                constructor: true
    HKDeletedObject: {}
    HKDevice:
        methods:
            '-init.*':
                name: init

    HKActivitySummary: {}
    HKActivitySummaryQuery:
        methods:
            '-init.*':
                name: init
    HKDocumentQuery:
        methods:
            '-init.*':
                name: init
    HKSeriesBuilder: {}
    HKSeriesSample: {}
    HKSeriesType: {} #since 11.0
    HKWorkoutRoute: {} #since 11.0
    HKWorkoutRouteBuilder: #since 11.0
        methods:
            '-init.*':
                name: init
            '-insertRouteData:completion:':
                trim_after_first_colon: true
            '-finishRouteWithWorkout:metadata:completion:':
                name: finishRoute
            '-addMetadata:completion:':
                trim_after_first_colon: true
    HKWorkoutRouteQuery: #since 11.0
        methods:
            '-initWithRoute:dataHandler:':
                name: init
            '-initWithRoute:dateInterval:dataHandler:':
                name: init
    HKClinicalRecord: {} #since 12.0
    HKClinicalType: {} #since 12.0
    HKCumulativeQuantitySeriesSample: {} #since 12.0
    HKFHIRResource: {} #since 12.0
    HKQuantitySeriesSampleBuilder: #since 12.0
        methods:
            '-initWithHealthStore:quantityType:startDate:device:':
                name: init
            '-insertQuantity:date:error:':
                name: insertQuantity
                throws: NSErrorException
            '-finishSeriesWithMetadata:completion:':
                name: finishSeries
            '-insertQuantity:dateInterval:error:':
                name: insertQuantity
                throws: NSErrorException
            '-finishSeriesWithMetadata:endDate:completion:':
                name: finishSeries
    HKQuantitySeriesSampleQuery: #since 12.0
        methods:
            '-initWithSample:quantityHandler:':
                name: init
            '-initWithQuantityType:predicate:quantityHandler:':
                name: init
    HKWorkoutBuilder: #since 12.0
        methods:
            '-initWithHealthStore:configuration:device:':
                name: init
            '-beginCollectionWithStartDate:completion:':
                name: beginCollection
            '-addSamples:completion:':
                name: addSamples
            '-addWorkoutEvents:completion:':
                trim_after_first_colon: true
            '-addMetadata:completion:':
                trim_after_first_colon: true
            '-endCollectionWithEndDate:completion:':
                name: endCollection
            '-finishWorkoutWithCompletion:':
                name: finishWorkout
            '-addWorkoutActivity:completion:':
                name: addWorkoutActivity
            '-updateActivityWithUUID:endDate:completion:':
                name: updateActivity
            '-updateActivityWithUUID:addMedatata:completion:':
                name: updateActivity
    HKAudiogramSample: #since 13.0
        methods:
            '+audiogramSampleWithSensitivityPoints:startDate:endDate:metadata:':
                name: create
                constructor: true
    HKAudiogramSampleType: {} #since 13.0
    HKAudiogramSensitivityPoint: #since 13.0
        methods:
            '+sensitivityPointWithFrequency:leftEarSensitivity:rightEarSensitivity:error:':
                name: create
                constructor: true
    HKCumulativeQuantitySample: {} #since 13.0
    HKDiscreteQuantitySample: {} #since 13.0
    HKHeartbeatSeriesBuilder: #since 13.0
        methods:
            '-initWithHealthStore:device:startDate:':
                name: init
            '-addHeartbeatWithTimeIntervalSinceSeriesStartDate:precededByGap:completion:':
                name: addHeartbeat
            '-addMetadata:completion:':
                name: addMetadata
            '-finishSeriesWithCompletion:':
                name: finishSeries
    HKHeartbeatSeriesQuery: #since 13.0
        methods:
            '-initWithHeartbeatSeries:dataHandler:':
                name: init
    HKHeartbeatSeriesSample: {} #since 13.0
    HKElectrocardiogram: {} #since 14.0
    HKElectrocardiogramQuery: #since 14.0
        methods:
            '-initWithElectrocardiogram:dataHandler:':
                name: init
    HKElectrocardiogramType: {} #since 14.0
    HKElectrocardiogramVoltageMeasurement: {} #since 14.0
    HKFHIRVersion: #since 14.0
        methods:
            '+versionFromVersionString:error:':
                constructor: true
                name: create
                throws: NSErrorException
    HKActivityMoveModeObject: {} #since 14.0
    HKQueryDescriptor: #since 15.0
        methods:
            '-initWithSampleType:predicate:':
                name: init
    HKVerifiableClinicalRecord: {} #since 15.0
    HKVerifiableClinicalRecordQuery: #since 15.0
        methods:
            '-initWithRecordTypes:predicate:resultsHandler:':
                name: init
            '-initWithRecordTypes:sourceTypes:predicate:resultsHandler:':
                name: init
    HKVerifiableClinicalRecordSubject: {} #since 15.0
    HKAttachment: {} #since 16.0
    HKAttachmentStore: #since 16.0
        methods:
            '-initWithHealthStore:':
                name: init
            '-addAttachmentToObject:name:contentType:URL:metadata:completion:':
                name: addAttachment
            '-removeAttachment:fromObject:completion:':
                name: removeAttachment
            '-getAttachmentsForObject:completion:':
                name: getAttachments
            '-getDataForAttachment:completion:':
                name: getData
            '-streamDataForAttachment:dataHandler:':
                name: streamData
    HKContactsLensSpecification: #since 16.0
        methods:
            '-initWithSphere:cylinder:axis:addPower:baseCurve:diameter:':
                name: init
    HKContactsPrescription: #since 16.0
        methods:
            '+prescriptionWithRightEyeSpecification:leftEyeSpecification:brand:dateIssued:expirationDate:device:metadata:':
                constructor: true
                name: create
    HKGlassesLensSpecification: #since 16.0
        methods:
            '-initWithSphere:cylinder:axis:addPower:vertexDistance:prism:farPupillaryDistance:nearPupillaryDistance:':
                name: init
    HKGlassesPrescription: #since 16.0
        methods:
            '+prescriptionWithRightEyeSpecification:leftEyeSpecification:dateIssued:expirationDate:device:metadata:':
                constructor: true
                name: create
    HKLensSpecification: {} #since 16.0
    HKPrescriptionType: {} #since 16.0
    HKVisionPrescription: #since 16.0
        methods:
            '+prescriptionWithType:dateIssued:expirationDate:device:metadata:':
                constructor: true
                name: create
    HKVisionPrism: #since 16.0
        methods:
            '-initWithAmount:angle:eye:':
                name: init
            '-initWithVerticalAmount:verticalBase:horizontalAmount:horizontalBase:eye:':
                name: init
    HKWorkoutActivity: #since 16.0
        methods:
            '-initWithWorkoutConfiguration:startDate:endDate:metadata:':
                name: init
    HKWorkoutSession: #since 17.0
        methods:
            '-startActivityWithDate:':
                name: startActivity
            '-stopActivityWithDate:':
                name: stopActivity
            '-beginNewActivityWithConfiguration:date:metadata:':
                name: beginNewActivity
            '-sendDataToRemoteWorkoutSession:completion:':
                name: sendDataToRemoteWorkoutSession
protocols:
    HKWorkoutSessionDelegate: #since 17.0
        methods:
            '-workoutSession:didChangeToState:fromState:date:':
                name: didChangeToState
            '-workoutSession:didFailWithError:':
                name: didFail
            '-workoutSession:didGenerateEvent:':
                name: didGenerateEvent
            '-workoutSession:didBeginActivityWithConfiguration:date:':
                name: didBeginActivity
            '-workoutSession:didEndActivityWithConfiguration:date:':
                name: didEndActivity
            '-workoutSession:didReceiveDataFromRemoteWorkoutSession:':
                name: didReceiveDataFromRemoteWorkoutSession
            '-workoutSession:didDisconnectFromRemoteDeviceWithError:':
                name: didDisconnectFromRemoteDevice


functions:
    HKAppleWalkingSteadinessClassificationForQuantity:
        class: HKAppleWalkingSteadinessClassification
        name: classificationForQuantity
        throws: NSErrorException
    HKAppleWalkingSteadiness(MinimumQuantityForClassification|MaximumQuantityForClassification):
        class: HKAppleWalkingSteadinessClassification
        name: '#{g[0]}'
    HKCategoryValueSleepAnalysisAsleepValues:
        class: HKCategoryValueSleepAnalysis
        name: 'asleepValues'

    # Make sure we don't miss any functions if new ones are introduced in a later version
    (HK.*):
        class: HealthKit
        name: 'Function__#{g[0]}'

values:
    HKErrorDomain:
        class: HKError
        name: getClassDomain

    HK(UserPreferencesDidChangeNotification):
        class: HKHealthStore
        name: '#{g[0]}'
        type: NSString

    HKQuantityTypeIdentifier(BodyMassIndex|BodyFatPercentage|Height|BodyMass|LeanBodyMass|WaistCircumference|AppleSleepingWristTemperature):
        enum: HKBodyQuantityTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKQuantityTypeIdentifier
    HKQuantityTypeIdentifier(AppleWalkingSteadiness|StepCount|DistanceWalkingRunning|DistanceCycling|DistanceWheelchair|BasalEnergyBurned|ActiveEnergyBurned|FlightsClimbed|NikeFuel|AppleExerciseTime|PushCount|DistanceSwimming|SwimmingStrokeCount|VO2Max|DistanceDownhillSnowSports|AppleStandTime|WalkingSpeed|WalkingDoubleSupportPercentage|WalkingAsymmetryPercentage|WalkingStepLength|SixMinuteWalkTestDistance|StairAscentSpeed|StairDescentSpeed|AppleMoveTime|RunningStrideLength|RunningVerticalOscillation|RunningGroundContactTime|RunningPower|RunningSpeed):
        enum: HKFitnessQuantityTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKQuantityTypeIdentifier
    HKQuantityTypeIdentifier(CyclingCadence|CyclingFunctionalThresholdPower|CyclingPower|CyclingSpeed|PhysicalEffort):
        enum: HKFitnessQuantityTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKQuantityTypeIdentifier
    HKQuantityTypeIdentifier(HeartRate|BodyTemperature|BasalBodyTemperature|BloodPressureSystolic|BloodPressureDiastolic|RespiratoryRate|RestingHeartRate|WalkingHeartRateAverage|HeartRateVariabilitySDNN|HeartRateRecoveryOneMinute):
        enum: HKVitalSignsQuantityTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKQuantityTypeIdentifier
    HKQuantityTypeIdentifier(NumberOfAlcoholicBeverages|OxygenSaturation|PeripheralPerfusionIndex|BloodGlucose|NumberOfTimesFallen|ElectrodermalActivity|InhalerUsage|InsulinDelivery):
        enum: HKResultsQuantityTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKQuantityTypeIdentifier
    HKQuantityTypeIdentifier(BloodAlcoholContent|ForcedVitalCapacity|ForcedExpiratoryVolume1|PeakExpiratoryFlowRate|EnvironmentalAudioExposure|EnvironmentalSoundReduction|HeadphoneAudioExposure):
        enum: HKResultsQuantityTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKQuantityTypeIdentifier
    HKQuantityTypeIdentifierDietary(.*):
        enum: HKDietaryQuantityTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKQuantityTypeIdentifier
    HKQuantityTypeIdentifierUVExposure:
        enum: HKUVExposureTypeIdentifier
        name: 'UVExposure'
        type: NSString
        extends: HKQuantityTypeIdentifier
    HKQuantityTypeIdentifier(UnderwaterDepth|WaterTemperature):
        enum: HKWaterTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKQuantityTypeIdentifier
    HKDocumentTypeIdentifier(.*):
        enum: HKDocumentTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKTypeIdentifier
    HKCategoryTypeIdentifier(.*):
        enum: HKCategoryTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKTypeIdentifier
    HKCharacteristicTypeIdentifier(.*):
        enum: HKCharacteristicTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKTypeIdentifier
    HKCorrelationTypeIdentifier(.*):
        enum: HKCorrelationTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKTypeIdentifier
    HKWorkoutTypeIdentifier:
        enum: HKWorkoutTypeIdentifier
        name: Workout
        type: NSString
        extends: HKTypeIdentifier
    HKVisionPrescriptionTypeIdentifier:
        enum: HKVisionPrescriptionTypeIdentifier
        name: Prescription
        type: NSString
        extends: HKTypeIdentifier

    HKMetadataKey(.*):
        enum: HKMetadataKey
        name: '#{g[0]}'
        type: NSString

    HKPredicateKeyPathCDA(.*):
        enum: HKPredicateKeyPath
        name: '#{g[0]}'
        type: NSString
        extends: NSPredicateKeyPath
    HKDetailedCDAValidationErrorKey:
        class: HKCDADocument
        name: 'ValidationErrorKey'

    HKPredicateKeyPath(.*):
        enum: HKPredicateKeyPath
        name: '#{g[0]}'
        type: NSString
        extends: NSPredicateKeyPath

    HKSampleSortIdentifier(.*):
        enum: HKSampleSortIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: NSSortIdentifier
    HKWorkoutSortIdentifier(.*):
        enum: HKWorkoutSortIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: NSSortIdentifier
    HKDeviceProperty(.*):
        class: HKDevice
        name: 'Property#{g[0]}'

    HKQuantityTypeIdentifier(AtrialFibrillationBurden|TimeInDaylight):
        enum: HKOtherQuantityTypeIdentifier
        name: '#{g[0]}'
        type: NSString
        extends: HKQuantityTypeIdentifier

    HKQuantityTypeIdentifier(.*): # since ios 11
        class: FIXME  # dkimitsa: these probably should be put in different locations
        name: '#{g[0]}'
    HKSourceRevision(.*): # since ios 11
        class: HKSourceRevision
        name: '#{g[0]}'
    HKWorkoutRouteTypeIdentifier:
        class: HKWorkoutRoute
        name: getTypeIdentifier
    HKDataTypeIdentifierHeartbeatSeries:
        class: HKSeriesSample
        name: getDataTypeIdentifier

    # Make sure we don't miss any values if new ones are introduced in a later version
    (HK.*):
        class: HealthKit
        name: 'Value__#{g[0]}'

constants:
    HKAnchoredObjectQuery(NoAnchor):
        class: HKAnchoredObjectQuery
        name: '#{g[0]}'
    HKObjectQuery(NoLimit):
        class: HKSampleQuery
        name: '#{g[0]}'
    HKUnit(MolarMassBloodGlucose):
        class: HKUnit
        name: '#{g[0]}'

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (HK.*):
        class: HealthKit
        name: 'Constant__#{g[0]}'
