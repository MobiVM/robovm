package: org.robovm.apple.uikit
include:
    - foundation
    - coreanimation
    - coregraphics
    - coredata
    - coreimage
    - coretext
    - corelocation
    - cloudkit
    - fileprovider
    - intents
    - usernotifications
    - linkpresentation
library: UIKit
framework: UIKit
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/UIKit.framework/Headers/UIKit.h
typedefs:
    NSCopying: NSObject
    UITextContentType: UITextContentType
private_typedefs:
    AnchorType: NSObject
    UIScribbleElementIdentifier: NSObject
    UTType: org.robovm.apple.uniformtypeid.UTType

enums:
    NSControlCharacterAction: {}
    NSGlyphProperty: {}
    NSLayoutAttribute: {}
    NSLayoutFormatOptions: {}
    NSLayoutRelation: {}
    NSLineBreakMode: {}
    NSStringDrawingOptions: { bits: true}
    NSTextAlignment: {}
    NSTextLayoutOrientation: {}
    NSTextStorageEditActions: {}
    NSTextWritingDirection: {}
    NSUnderlineStyle: {}
    NSWritingDirection: {}
    UIAccessibilityCustomRotorDirection: {}
    UIAccessibilityHearingDeviceEar: {}
    UIAccessibilityNavigationStyle: {}
    UIAccessibilityScrollDirection: {}
    UIAccessibilityZoomType: {prefix: UIAccessibilityZoomType}
    UIActionSheetStyle: {}
    UIActivityCategory: {}
    UIActivityIndicatorViewStyle: {}
    UIAlertActionStyle: {}
    UIAlertControllerStyle: {prefix: UIAlertControllerStyle}
    UIAlertViewStyle: {}
    UIApplicationShortcutIconType: {}
    UIApplicationState: {}
    UIAttachmentBehaviorType: {}
    UIBackgroundFetchResult: {}
    UIBackgroundRefreshStatus: {}
    UIBarButtonItemStyle: {}
    UIBarButtonSystemItem: {}
    UIBarMetrics: {ignore: Landscape}
    UIBarPosition: {}
    UIBarStyle: {}
    UIBaselineAdjustment: {}
    UIBlurEffectStyle: {}
    UIButtonType: {}
    UICloudSharingPermissionOptions: {}
    UICollectionElementCategory: {}
    UICollectionUpdateAction: {}
    UICollectionViewScrollDirection: {}
    UICollectionViewScrollPosition: {}
    UICollisionBehaviorMode: {}
    UIControlContentHorizontalAlignment: {}
    UIControlContentVerticalAlignment: {}
    UIControlEvents: {}
    UIControlState: {skip_none: true}
    UIDataDetectorTypes: {}
    UIDatePickerMode: {}
    UIDeviceBatteryState: {}
    UIDeviceOrientation: {}
    UIDisplayGamut: {}
    UIDocumentChangeKind: {}
    UIDocumentMenuOrder: {}
    UIDocumentPickerMode: {}
    UIDocumentSaveOperation: {}
    UIDocumentState: {skip_none: true}
    UIDynamicItemCollisionBoundsType: {}
    UIEventSubtype: {}
    UIEventType: {}
    UIFocusHeading: {}
    UIFontDescriptorSymbolicTraits: {}
    UIForceTouchCapability: {}
    UIGestureRecognizerState: {}
    UIGuidedAccessRestrictionState: {}
    UIImageOrientation: {}
    UIImagePickerControllerCameraCaptureMode: {}
    UIImagePickerControllerCameraDevice: {}
    UIImagePickerControllerCameraFlashMode: {}
    UIImagePickerControllerQualityType: {}
    UIImagePickerControllerSourceType: {}
    UIImageRenderingMode: {prefix: UIImageRenderingMode}
    UIImageResizingMode: {}
    UIImpactFeedbackStyle: {}
    UIInputViewStyle: {}
    UIInterfaceOrientation: {}
    UIInterfaceOrientationMask: {}
    UIInterpolatingMotionEffectType: {prefix: UIInterpolatingMotionEffectType}
    UIKeyboardAppearance: {}
    UIKeyboardType: {}
    UIKeyModifierFlags: {}
    UILayoutConstraintAxis: {}
    UILineBreakMode: {exclude: true}
    UIMenuControllerArrowDirection: {}
    UIModalPresentationStyle: {}
    UIModalTransitionStyle: {}
    UINavigationControllerOperation: {}
    UINotificationFeedbackType: {}
    UIPageViewControllerNavigationDirection: {}
    UIPageViewControllerNavigationOrientation: {}
    UIPageViewControllerSpineLocation: {}
    UIPageViewControllerTransitionStyle: {}
    UIPopoverArrowDirection: {}
    UIPressPhase: {}
    UIPressType: {}
    UIPreviewActionStyle: {}
    UIPrintErrorCode: {name: UIPrintError, nserror: true, first: UIPrintingNotAvailableError, suffix: Error, UIPrintingNotAvailableError: PrintingNotAvailableError}
    UIPrinterCutterBehavior: {}
    UIPrinterJobTypes: {skip_none: true}
    UIPrintInfoDuplex: {}
    UIPrintInfoOrientation: {}
    UIPrintInfoOutputType: {}
    UIProgressViewStyle: {}
    UIPushBehaviorMode: {}
    UIRectCorner: {}
    UIRectEdge: {}
    UIRemoteNotificationType: {}
    UIReturnKeyType: {}
    UIScreenOverscanCompensation: {}
    UIScrollViewIndicatorStyle: {}
    UIScrollViewKeyboardDismissMode: {}
    UISearchBarIcon: {}
    UISearchBarStyle: {}
    UISemanticContentAttribute: {}
    UISegmentedControlSegment: {}
    UISegmentedControlSegment2: {prefix: UISegmentedControl, first: UISegmentedControlNoSegment, merge_with: UISegmentedControlSegment}
    UISplitViewControllerDisplayMode: {}
    UIStackViewAlignment: {}
    UIStackViewDistribution: {}
    UIStatusBarAnimation: {}
    UIStatusBarStyle: {}
    UISwipeGestureRecognizerDirection: {}
    UISystemAnimation: {prefix: UISystemAnimation}
    UITabBarItemPositioning: {}
    UITabBarSystemItem: {}
    UITableViewCellAccessoryType: {}
    UITableViewCellEditingStyle: {}
    UITableViewCellFocusStyle: {}
    UITableViewCellSelectionStyle: {}
    UITableViewCellSeparatorStyle: {}
    UITableViewCellStateMask: {suffix: mask}
    UITableViewCellStyle: {}
    UITableViewRowActionStyle: {}
    UITableViewRowAnimation: {}
    UITableViewScrollPosition: {}
    UITableViewStyle: {}
    UITextAlignment: {exclude: true}
    UITextAutocapitalizationType: {}
    UITextAutocorrectionType: {}
    UITextBorderStyle: {}
    UITextFieldDidEndEditingReason: {prefix: UITextFieldDidEndEditingReason}
    UITextFieldViewMode: {}
    UITextGranularity: {}
    UITextItemInteraction: {}
    UITextLayoutDirection: {}
    UITextSpellCheckingType: {}
    UITextStorageDirection: {}
    UITextWritingDirection: {}
    UITimingCurveType: {}
    UIToolbarPosition: {}
    UITouchPhase: {}
    UITouchProperties: {}
    UITouchType: {}
    UITraitEnvironmentLayoutDirection: {}
    UIUserInterfaceIdiom: {prefix: UIUserInterfaceIdiom}
    UIUserInterfaceLayoutDirection: {}
    UIUserInterfaceSizeClass: {}
    UIUserInterfaceStyle: {}
    UIUserNotificationActionBehavior: {}
    UIUserNotificationActionContext: {}
    UIUserNotificationActivationMode: {}
    UIUserNotificationType: {}
    UIViewAnimatingPosition: {}
    UIViewAnimatingState: {}
    UIViewAnimationCurve: {}
    UIViewAnimationOptions: {}
    UIViewAnimationTransition: {}
    UIViewAutoresizing: {}
    UIViewContentMode: {}
    UIViewKeyframeAnimationOptions: {}
    UIViewTintAdjustmentMode: {}
    UIWebPaginationBreakingMode: {}
    UIWebPaginationMode: {}
    UIWebViewNavigationType: {}
    NSWritingDirectionFormatType: {}
    #ios11 bindings
    UIScrollViewIndexDisplayMode: {}
    UIScrollViewContentInsetAdjustmentBehavior: {prefix: UIScrollViewContentInsetAdjustment} #since 11.0
    UIAccessibilityContainerType: {} #since 11.0
    UITextSmartQuotesType: {} #since 11.0
    UITextSmartDashesType: {} #since 11.0
    UITextSmartInsertDeleteType: {} #since 11.0
    UIAccessibilityCustomSystemRotorType: {} #since 11.0
    UIPreferredPresentationStyle: {}
    UIDropOperation: {} #since 11.0
    UITextDragOptions: {prefix: UITextDragOption} #since 11.0
    UITextDropAction: {} #since 11.0
    UITextDropProgressMode: {} #since 11.0
    UITextDropPerformer: {} #since 11.0
    UITextDropEditability: {} #since 11.0
    UICollectionViewReorderingCadence: {} #since 11.0
    UICollectionViewDropIntent: {} #since 11.0
    UICollectionViewCellDragState: {} #since 11.0
    UICollectionViewFlowLayoutSectionInsetReference: {prefix: UICollectionViewFlowLayoutSectionInset} #since 11.0
    UIImagePickerControllerImageURLExportPreset: {} #since 11.0
    UINavigationItemLargeTitleDisplayMode: {}
    UIContextualActionStyle: {} #since 11.0
    UITableViewCellDragState: {} #since 11.0
    UITableViewSeparatorInsetReference: {prefix: UITableViewSeparatorInset} #since 11.0
    UITableViewDropIntent: {} #since 11.0
    UISplitViewControllerPrimaryEdge: {} #since 11.0
    UIDropSessionProgressIndicatorStyle: {} #since 11.0
    UISpringLoadedInteractionEffectState: {} #since 11.0

    UIGraphicsImageRendererFormatRange: {} #since 12.0
    UIDocumentBrowserImportMode: {} #since 11.0
    UIDocumentBrowserUserInterfaceStyle: {} #since 11.0
    UIDocumentBrowserActionAvailability: {} #since 11.0
    UIPencilPreferredAction: {} #since 12.1
    UIGuidedAccessAccessibilityFeature: {} #since 12.2

    UIDocumentBrowserErrorCode: {nserror: true, prefix: UIDocumentBrowserError}
    UIGuidedAccessErrorCode: {nserror: true, prefix: UIGuidedAccessError} #since 12.2

    NSDirectionalRectEdge: {} #since 13.0
    UIDirectionalRectEdge: {} #since 13.0
    NSRectAlignment: {} #since 13.0
    UIMenuElementState: {} #since 13.0
    UIMenuElementAttributes: {} #since 13.0
    UIMenuOptions: {} #since 13.0
    UIEditingInteractionConfiguration: {} #since 13.0
    UIAccessibilityContrast: {} #since 13.0
    UILegibilityWeight: {} #since 13.0
    UIUserInterfaceLevel: {} #since 13.0
    UITextAlternativeStyle: {}
    UISceneActivationState: {} #since 13.0
    UISceneErrorCode: {nserror: true} #since 13.0
    UICollectionLayoutSectionOrthogonalScrollingBehavior: {} #since 13.0
    UIVibrancyEffectStyle: {} #since 13.0
    UIImageSymbolScale: {} #since 13.0
    UIImageSymbolWeight: {} #since 13.0
    UISplitViewControllerBackgroundStyle: {} #since 13.0
    UITabBarItemAppearanceStyle: {}
    NSTextScalingType: {prefix: NSTextScaling} #since 13.0
    UITextInteractionMode: {}
    UIWindowSceneDismissalAnimation: {} #since 13.0
    UIContextMenuInteractionCommitStyle: {} #since 13.0
    UIDatePickerStyle: {} #since 13.4
    UIKeyboardHIDUsage: {} #since 13.4
    UIAxis: {} #since 13.4

    UIEventButtonMask: { } #since 13.4
    UIUserInterfaceActiveAppearance: { } #since 14.0
    UIContextMenuInteractionAppearance: { } #since 14.0
    UIButtonRole: { } #since 14.0
    UIContentInsetsReference: { } #since 14.0
    UICellAccessoryDisplayedState: { prefix: UICellAccessoryDisplayed } #since 14.0
    UICellAccessoryOutlineDisclosureStyle: { } #since 14.0
    UICellAccessoryPlacement: { } #since 14.0
    UICollectionLayoutListAppearance: { } #since 14.0
    UICollectionLayoutListHeaderMode: { } #since 14.0
    UICollectionLayoutListFooterMode: { } #since 14.0
    UICellConfigurationDragState: { } #since 14.0
    UICellConfigurationDropState: { } #since 14.0
    UIListContentTextAlignment: { } #since 14.0
    UIListContentTextTransform: { } #since 14.0
    UIScrollType: { } #since 13.4
    UIScrollTypeMask: { } #since 13.4
    UINavigationItemBackButtonDisplayMode: { }
    UIPageControlInteractionState: { } #since 14.0
    UIPageControlBackgroundStyle: { } #since 14.0
    UISplitViewControllerStyle: { } #since 14.0
    UISplitViewControllerColumn: { } #since 14.0
    UISplitViewControllerSplitBehavior: { } #since 14.0
    UISwitchStyle: { } #since 14.0
    UIPointerEffectTintMode: { } #since 13.4
    NSLineBreakStrategy: {}
    UISegmentedControlStyle: {}

    UISplitViewControllerDisplayModeButtonVisibility: {} #since 14.5
    UIListSeparatorVisibility: {}
    UIPrintRenderingQuality: {}

    UIButtonConfigurationSize: {} #since 15.0
    UIButtonConfigurationTitleAlignment: {} #since 15.0
    UIButtonConfigurationCornerStyle: {} #since 15.0
    UIButtonConfigurationMacIdiomStyle: {} #since 15.0
    UIBandSelectionInteractionState: {} #since 15.0
    UIBehavioralStyle: {}
    UIWindowScenePresentationStyle: {}
    UIFocusHaloEffectPosition: {} #since 15.0
    NSTextSelectionGranularity: {} #since 15.0
    NSTextSelectionAffinity: {} #since 15.0
    NSTextSelectionNavigationDirection: {} #since 15.0
    NSTextSelectionNavigationDestination: {} #since 15.0
    NSTextSelectionNavigationModifier: {} #since 15.0
    NSTextSelectionNavigationWritingDirection: {} #since 15.0
    NSTextSelectionNavigationLayoutOrientation: {} #since 15.0
    NSTextContentManagerEnumerationOptions: {} #since 15.0
    NSTextLayoutFragmentEnumerationOptions: {} #since 15.0
    NSTextLayoutFragmentState: {} #since 15.0
    NSTextLayoutManagerSegmentType: {} #since 15.0
    NSTextLayoutManagerSegmentOptions: {} #since 15.0

#    EXCLUDE1: {exclude: true, first: NSAttachmentCharacter} -- don't exclude it as value will be picked up as constant
    EXCLUDE3_AS_DEPRECATED: {exclude: true, first: NSControlCharacterZeroAdvancementAction}

categories:
    CIColor: # DONE
        annotations: ['@WeaklyLinked']
        methods:
            '-init.*':
                name: init
                visibility: protected
                return_type: '@Pointer long'
    CIImage: # DONE
        annotations: ['@WeaklyLinked']
        methods:
            '-init.*':
                name: init
                visibility: protected
                return_type: '@Pointer long'
                parameters:
                    options:
                        type: CIImageOptions
    NSAttributedString: # DONE
        annotations: ['@WeaklyLinked']
        methods:
            '-initWithFileURL:options:documentAttributes:error:':
                name: initWithFileURL
                constructor: false
                throws: NSErrorException
                return_type: '@Pointer long'
                parameters:
                    options:
                        type: NSAttributedStringDocumentAttributes
            '-init.*':
                name: init
                throws: NSErrorException
                return_type: '@Pointer long'
                parameters:
                    options:
                        type: NSAttributedStringDocumentAttributes
            '+attributedStringWithAttachment:':
                name: create
                return_type: '@Pointer long'
            '-boundingRectWithSize:options:context:':
                name: getBoundingRect
            '-dataFromRange:documentAttributes:error:':
                name: getData
                throws: NSErrorException
                parameters:
                    dict:
                        type: NSAttributedStringDocumentAttributes
            '-drawAtPoint:':
                name: draw
            '-drawInRect:':
                name: draw
            '-drawWithRect:options:context:':
                name: draw
            '-fileWrapperFromRange:documentAttributes:error:':
                name: getFileWrapper
                throws: NSErrorException
                parameters:
                    dict:
                        type: NSAttributedStringDocumentAttributes
            '-size':
                name: getSize
            '-containsAttachmentsInRange:':
                name: containsAttachments
    NSBundle: # DONE
        annotations: ['@WeaklyLinked']
        methods:
            '-loadNibNamed:owner:options:':
                name: loadNib
                parameters:
                    options:
                        type: UINibLoadingOptions
    NSCoder: # DONE
        annotations: ['@WeaklyLinked']
        methods:
            '-(decode.*)ForKey:':
                name: '#{g[0]}'
            '-(encode.*):forKey:':
                name: '#{g[0]}'
    NSIndexPath: # DONE
        annotations: ['@WeaklyLinked']
        methods:
            '+indexPathForRow:inSection:':
                name: createIndexPathForRowInSection
                return_type: NSIndexPath
            '+indexPathForItem:inSection:':
                name: createIndexPathForItemInSection
                return_type: NSIndexPath
    NSMutableAttributedString: # DONE
        annotations: ['@WeaklyLinked']
        methods:
            '-fixAttributesInRange:':
                name: fixAttributesInRange
            '-readFromURL:options:documentAttributes:error:':
                name: read
                throws: NSErrorException
                parameters:
                    opts:
                        type: NSAttributedStringDocumentAttributes
            '-readFromData:options:documentAttributes:error:':
                name: read
                throws: NSErrorException
                parameters:
                    opts:
                        type: NSAttributedStringDocumentAttributes
            '-readFromFileURL:options:documentAttributes:error:':
                name: readFromFileURL
                throws: NSErrorException
                parameters:
                    opts:
                        type: NSAttributedStringDocumentAttributes
    NSString: # DONE
        owner_type: '@Pointer long'
        annotations: ['@WeaklyLinked']
        methods:
            '-boundingRectWithSize:options:attributes:context:':
                name: getBoundingRect
            '-drawAtPoint:forWidth.*':
                name: draw
            '-drawAtPoint:withAttributes:':
                name: draw
            '-drawAtPoint:withFont:':
                name: draw
            '-drawInRect:withAttributes:':
                name: draw
            '-drawInRect:withFont:.*':
                name: draw
            '-drawWithRect:options:attributes:context:':
                name: draw
            '-sizeWithAttributes:':
                name: getSize
            '-sizeWithFont.*':
                name: getSize
    NSValue: # DONE
        annotations: ['@WeaklyLinked']
        properties:
            'CG(.*Value)':
                name: '#{g[0]}'
            'UI(.*Value)':
                name: '#{g[0]}'
        methods:
            '+valueWith.*':
                name: create
    UIAccessibility@NSObject: {protocol: true}
    UIAccessibilityAction@NSObject: {protocol: true}
    UIAccessibilityContainer@NSObject: {protocol: true}
    # UIAccessibilityCustomRotor@NSObject: {protocol: true}
    UIAccessibilityFocus@NSObject: {protocol: true}
    UINibLoadingAdditions@NSObject: {protocol: true}
    UIResponderStandardEditActions@NSObject: {protocol: true}

classes:
    # Custom bits
    UIAccessibilityTraits:
        visibility: 'public final'
        extends: Bits<UIAccessibilityTraits>
        annotations: ['@Marshaler(Bits.AsMachineSizedIntMarshaler.class)']

    UIRemoteNotification:
        extends: NSDictionaryWrapper

    UIRunLoopMode:
        extends: NSRunLoopMode

    # Structs
    UIEdgeInsets:
        annotations: [ '@Marshaler(NSString.AsStringMarshaler.class)' ]
    UIFloatRange: {}
    UIOffset:
        annotations: [ '@Marshaler(NSString.AsStringMarshaler.class)' ]
    NSDirectionalEdgeInsets: {} # since 11.0
    UIPointerAccessoryPosition: {} #since 15.0

    NSDataAsset: # DONE
        methods:
            '-init.*':
                name: init
    NSFileProviderExtension: # DONE
        methods:
            '-URLForItemWithPersistentIdentifier:':
                name: getURLForItem
            '-persistentIdentifierForItemAtURL:':
                name: getPersistentIdentifierForItem
            '-providePlaceholderAtURL:completionHandler:':
                name: providePlaceholder
            '-startProvidingItemAtURL:completionHandler:':
                name: startProvidingItem
            '-itemChangedAtURL:':
                name: itemChanged
            '-stopProvidingItemAtURL:':
                name: stopProvidingItem
            '+writePlaceholderAtURL:withMetadata:error:':
                name: writePlaceholder
                throws: NSErrorException
                parameters:
                    metadata:
                        type: NSURLProperties
            '+placeholderURLForURL:':
                name: getPlaceholderURL
            '-itemForIdentifier:error:':
                throws: NSErrorException
                trim_after_first_colon: true
            '-fetchContentsForItemWithIdentifier:version:completionHandler:':
                name: fetchContents
            '-fetchContentsForItemWithIdentifier:version:usingExistingContentsAtURL:existingVersion:completionHandler:':
                name: fetchContents
            '-itemChanged:baseVersion:changedFields:contents:completionHandler:':
                name: itemChanged
            '-createItemBasedOnTemplate:fields:contents:options:completionHandler:':
                name: createItem
            '-deleteItemWithIdentifier:baseVersion:options:completionHandler:':
                name: deleteItem
            '-importDidFinishWithCompletionHandler:':
                name: importDidFinish
    NSLayoutAnchor: # DONE
        template_parameters:
            AnchorType: T
        methods:
            '-constraintEqualToAnchor:':
                name: equalTo
            '-constraintGreaterThanOrEqualToAnchor:':
                name: greaterThanOrEqual
            '-constraintLessThanOrEqualToAnchor:':
                name: lessThanOrEqual
            '-constraintEqualToAnchor:constant:':
                name: equalTo
            '-constraintGreaterThanOrEqualToAnchor:constant:':
                name: greaterThanOrEqualTo
            '-constraintLessThanOrEqualToAnchor:constant:':
                name: lessThanOrEqualTo
    NSLayoutDimension: # DONE
        methods:
            '-constraintEqualToConstant:':
                name: equalTo
            '-constraintGreaterThanOrEqualToConstant:':
                name: greaterThanOrEqualTo
            '-constraintLessThanOrEqualToConstant:':
                name: lessThanOrEqualTo
            '-constraintEqualToAnchor:multiplier:':
                name: equalTo
            '-constraintGreaterThanOrEqualToAnchor:multiplier:':
                name: greaterThanOrEqualTo
            '-constraintLessThanOrEqualToAnchor:multiplier:':
                name: lessThanOrEqualTo
            '-constraintEqualToAnchor:multiplier:constant:':
                name: equalTo
            '-constraintGreaterThanOrEqualToAnchor:multiplier:constant:':
                name: greaterThanOrEqualTo
            '-constraintLessThanOrEqualToAnchor:multiplier:constant:':
                name: lessThanOrEqualTo
    NSLayoutXAxisAnchor: # DONE
        methods:
            '-constraintEqualToSystemSpacingAfterAnchor:multiplier:':
                trim_after_first_colon: true
            '-constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:':
                trim_after_first_colon: true
            '-constraintLessThanOrEqualToSystemSpacingAfterAnchor:multiplier:':
                trim_after_first_colon: true
            '-anchorWithOffsetToAnchor:':
                name: anchorWithOffsetToAnchor # keep old name
    NSLayoutYAxisAnchor: # DONE
        methods:
            '-constraintEqualToSystemSpacingBelowAnchor:multiplier:':
                trim_after_first_colon: true
            '-constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:':
                trim_after_first_colon: true
            '-constraintLessThanOrEqualToSystemSpacingBelowAnchor:multiplier:':
                trim_after_first_colon: true
            '-anchorWithOffsetToAnchor:':
                name: anchorWithOffsetToAnchor # keep old name
    NSLayoutConstraint: # DONE
        methods:
            '+constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:':
                name: create
                constructor: true
            '+constraintsWithVisualFormat:options:metrics:views:':
                name: createConstraints
                return_type: NSArray<NSLayoutConstraint>
                parameters:
                    metrics:
                        type: 'Map<String, Number>'
                        marshaler: NSDictionary.AsStringNumberMapMarshaler
                    views:
                        type: 'Map<String, NSObjectProtocol>'
                        marshaler: NSDictionary.AsStringMapMarshaler
            '+activateConstraints:':
                trim_after_first_colon: true
                parameters:
                    constraints:
                        type: NSArray<NSLayoutConstraint>
            '+deactivateConstraints:':
                trim_after_first_colon: true
                parameters:
                    constraints:
                        type: NSArray<NSLayoutConstraint>
    NSLayoutManager: # DONE
        properties:
            'textContainers':
                type: NSArray<NSTextContainer>
        methods:
            '-addTextContainer:':
                trim_after_first_colon: true
            '-insertTextContainer:atIndex:':
                trim_after_first_colon: true
            '-removeTextContainerAtIndex:':
                name: removeTextContainer
            '-textContainerChangedGeometry:':
                trim_after_first_colon: true
            '-invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:':
                name: invalidateGlyphs
            '-invalidateLayoutForCharacterRange:actualCharacterRange:':
                name: invalidateLayout
            '-invalidateDisplayForCharacterRange:':
                trim_after_first_colon: true
            '-invalidateDisplayForGlyphRange:':
                trim_after_first_colon: true
            '-processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:':
                name: processEditing
            '-ensureGlyphsForCharacterRange:':
                trim_after_first_colon: true
            '-ensureGlyphsForGlyphRange:':
                trim_after_first_colon: true 
            '-ensureLayoutForCharacterRange:':
                trim_after_first_colon: true 
            '-ensureLayoutForGlyphRange:':
                trim_after_first_colon: true 
            '-ensureLayoutForTextContainer:':
                trim_after_first_colon: true 
            '-ensureLayoutForBoundingRect:inTextContainer:':
                trim_after_first_colon: true 
            '-setGlyphs:properties:characterIndexes:font:forGlyphRange:':
                trim_after_first_colon: true 
            '-CGGlyphAtIndex.*':
                exclude: true
            '-glyphAtIndex:isValidIndex:':
                name: getGlyph
            '-glyphAtIndex:':
                name: getGlyph
            '-isValidGlyphIndex:':
                trim_after_first_colon: true
            '-propertyForGlyphAtIndex:':
                name: getPropertyForGlyph
            '-characterIndexForGlyphAtIndex:':
                name: getCharacterIndexForGlyph
            '-glyphIndexForCharacterAtIndex:':
                name: getGlyphIndexForCharacter
            '-getGlyphsInRange:glyphs:properties:characterIndexes:bidiLevels:':
                name: getGlyphs
            '-setTextContainer:forGlyphRange:':
                trim_after_first_colon: true
            '-setLineFragmentRect:forGlyphRange:usedRect:':
                trim_after_first_colon: true
            '-setExtraLineFragmentRect:usedRect:textContainer:':
                trim_after_first_colon: true
            '-setLocation:forStartOfGlyphRange:':
                trim_after_first_colon: true
            '-setNotShownAttribute:forGlyphAtIndex:':
                trim_after_first_colon: true
            '-setDrawsOutsideLineFragment:forGlyphAtIndex:':
                trim_after_first_colon: true
            '-setAttachmentSize:forGlyphRange:':
                trim_after_first_colon: true
            '-getFirstUnlaidCharacterIndex:glyphIndex:':
                trim_after_first_colon: true
            '-textContainerForGlyphAtIndex:effectiveRange:':
                name: getTextContainer
            '-usedRectForTextContainer:':
                name: getUsedRectForTextContainer
            '-lineFragmentRectForGlyphAtIndex:effectiveRange:':
                name: getLineFragmentRect
            '-lineFragmentUsedRectForGlyphAtIndex:effectiveRange:':
                name: getLineFragmentUsedRect
            '-locationForGlyphAtIndex:':
                name: getLocation
            '-notShownAttributeForGlyphAtIndex:':
                name: getNotShownAttribute
            '-drawsOutsideLineFragmentForGlyphAtIndex:':
                name: getDrawsOutsideLineFragment
            '-attachmentSizeForGlyphAtIndex:':
                name: getAttachmentSize
            '-truncatedGlyphRangeInLineFragmentForGlyphAtIndex:':
                name: getTruncatedGlyphRangeInLineFragment
            '-glyphRangeForCharacterRange:actualCharacterRange:':
                name: getGlyphRangeForCharacterRange
            '-characterRangeForGlyphRange:actualGlyphRange:':
                name: getCharacterRangeForGlyphRange
            '-glyphRangeForTextContainer:':
                trim_after_first_colon: true
            '-rangeOfNominallySpacedGlyphsContainingIndex:':
                name: getRangeOfNominallySpacedGlyphsContainingIndex
            '-boundingRectForGlyphRange:inTextContainer:':
                name: getBoundingRectForGlyphRange
            '-glyphRangeForBoundingRect:inTextContainer:':
                name: getGlyphRangeForBoundingRect
            '-glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:':
                name: getGlyphRangeForBoundingRectWithoutAdditionalLayout
            '-glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:':
                name: getSlyphIndexForPoint
            '-glyphIndexForPoint:inTextContainer:':
                name: getSlyphIndexForPoint
            '-fractionOfDistanceThroughGlyphForPoint:inTextContainer:':
                name: getFractionOfDistanceThroughGlyphForPoint
            '-characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:':
                name: getCharacterIndexForPoint
            '-getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:':
                name: getLineFragmentInsertionPoints
            '-enumerateLineFragmentsForGlyphRange:usingBlock:':
                name: enumerateLineFragments
            '-enumerateEnclosingRectsForGlyphRange:withinSelectedGlyphRange:inTextContainer:usingBlock:':
                name: enumerateEnclosingRects 
            '-drawBackgroundForGlyphRange:atPoint:':
                name: drawBackground
            '-drawGlyphsForGlyphRange:atPoint:':
                name: drawGlyphs
            '-showCGGlyphs:positions:count:font:matrix:attributes:inContext:':
                trim_after_first_colon: true
                visibility: protected
                parameters:
                    glyphs:
                        type: '@Pointer long'
            '-fillBackgroundRectArray:count:forCharacterRange:color:':
                name: fillBackground
                visibility: protected
            '-drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:':
                name: drawUnderline
            '-underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:':
                name: underline
            '-drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:':
                name: drawStrikethrough
            '-strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:':
                name: strikethrough
            '-textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:':
                name: getTextContainer
                parameters:
                    flag:
                        name: withoutAdditionalLayout
            '-lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:':
                name: getLineFragmentRect
                parameters:
                    flag:
                        name: withoutAdditionalLayout
            '-lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:':
                name: getLineFragmentUsedRect
                parameters:
                    flag:
                        name: withoutAdditionalLayout
            '-showCGGlyphs:positions:count:font:textMatrix:attributes:inContext:':
                name: showCGGlyphs
    NSMutableParagraphStyle: # DONE
        properties:
            'tabStops':
                type: NSArray<NSTextTab>
        methods:
            '-addTabStop:':
                trim_after_first_colon: true
            '-removeTabStop:':
                trim_after_first_colon: true
    NSParagraphStyle: # DONE
        properties:
            'tabStops':
                type: NSArray<NSTextTab>
        methods:
            '+defaultWritingDirectionForLanguage:':
                name: getDefaultWritingDirection

    NSShadow: # DONE
        properties:
            'shadowColor':
                type: UIColor
        methods:
            '-init.*':
                name: init
    NSStringDrawingContext: {} # DONE
    NSTextAttachment: # DONE
        methods:
            '-init.*':
                name: init
            '+textAttachmentWithImage:':
                constructor: true
                name: create
            '+registerTextAttachmentViewProviderClass:forFileType:':
                name: registerTextAttachmentViewProviderClass
    NSTextContainer: # DONE
        properties:
            'exclusionPaths':
                type: NSArray<UIBezierPath>
            'widthTracksTextView':
                getter: widthTracksTextView
            'heightTracksTextView':
                getter: heightTracksTextView
        methods:
            '-init.*':
                name: init
            '-lineFragmentRectForProposedRect:atIndex:writingDirection:remainingRect:':
                name: getLineFragmentRect
            '-replaceLayoutManager:':
                trim_after_first_colon: true
    NSTextStorage: # DONE
        properties:
            'layoutManagers':
                type: NSArray<NSLayoutManager>
        methods:
            '-addLayoutManager:':
                name: addLayoutManager
            '-removeLayoutManager:':
                name: removeLayoutManager
            '-edited:range:changeInLength:':
                name: edited
            '-invalidateAttributesInRange:':
                name: invalidateAttributes
            '-ensureAttributesAreFixedInRange:':
                name: ensureAttributesAreFixed
    NSTextTab: # DONE
        properties:
            'options':
                type: NSTextTabOptions
        methods:
            '+columnTerminatorsForLocale:':
                name: getColumnTerminators
            '-initWithTextAlignment:location:options:':
                name: init
                parameters:
                    options:
                        type: NSTextTabOptions
    UIAccessibilityCustomAction: # DONE
        methods:
            '-init.*':
                name: init
    UIAccessibilityCustomRotor: # DONE
        methods:
            '-init.*':
                name: init
    UIAccessibilityCustomRotorItemResult: # DONE
        methods:
            '-init.*':
                name: init
    UIAccessibilityCustomRotorSearchPredicate: {} # DONE
    UIAccessibilityElement: # DONE
        properties:
            'isAccessibilityElement':
                name: accessibilityElement
            'accessibilityContainer':
                type: UIAccessibilityContainer
        methods:
            '-initWithAccessibilityContainer:':
                name: init
                parameters:
                    container:
                        type: UIAccessibilityContainer
    UIActionSheet: # DONE
        methods:
            '-initWithTitle:delegate:cancelButtonTitle:destructiveButtonTitle:otherButtonTitles:':
                exclude: true
            '-addButtonWithTitle:':
                name: addButton
            '-buttonTitleAtIndex:':
                name: getButtonTitle
            '-dismissWithClickedButtonIndex:animated:':
                name: dismiss
            '-showFromBarButtonItem:animated:':
                name: showFrom
            '-showFromRect:inView:animated:':
                name: showFrom
            '-showFromTabBar:':
                name: showFrom
            '-showFromToolbar:':
                name: showFrom
            '-showInView:':
                name: showIn
    UIActivity: # DONE
        properties:
            'activity(.*)':
                name: '#{g[0]}'
        methods:
            '-activityDidFinish:':
                name: didFinish
            '-performActivity':
                name: perform
            '-canPerformWithActivityItems:':
                name: canPerform
            '-prepareWithActivityItems:':
                name: prepare
    UIActivityIndicatorView: # DONE
        methods:
            '-initWithActivityIndicatorStyle:':
                name: init
    UIActivityItemProvider: # DONE
        methods:
            '-initWithPlaceholderItem:':
                name: init
    UIActivityViewController: # DONE
        properties:
            'completionHandler':
                type: '@Block VoidBlock2<String, Boolean>'
            'excludedActivityTypes':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
            'completionWithItemsHandler':
                type: '@Block VoidBlock4<String, Boolean, NSArray<NSObject>, NSError>'
        methods:
            '-initWithActivityItems:applicationActivities:':
                name: init
                parameters:
                    applicationActivities:
                        type: NSArray<UIActivity>
            '-initWithActivityItemsConfiguration:':
                name: init
    UIAlertAction: # DONE
        methods:
            '+actionWithTitle:style:handler:':
                name: create
                constructor: true
    UIAlertController: # DONE
        properties:
            'actions':
                type: NSArray<UIAlertAction>
            'textFields':
                type: NSArray<UITextField>
        methods:
            '-addAction:':
                trim_after_first_colon: true
            '-addTextFieldWithConfigurationHandler:':
                name: addTextField
            '+alertControllerWithTitle:message:preferredStyle:':
                name: create
                constructor: true
    UIAlertView: # DONE
        properties:
            'delegate':
                type: UIAlertViewDelegate
        methods:
            '-addButtonWithTitle:':
                name: addButton
            '-buttonTitleAtIndex:':
                name: getButtonTitle
            '-dismissWithClickedButtonIndex:animated:':
                name: dismiss
            '-textFieldAtIndex:':
                name: getTextField
    UIApplication: # DONE
        properties:
            'windows':
                type: NSArray<UIWindow>
            'scheduledLocalNotifications':
                type: NSArray<UILocalNotification>
            'applicationSupportsShakeToEdit':
                name: supportsShakeToEdit
            'shortcutItems':
                type: NSArray<UIApplicationShortcutItem>
        methods:
            '+registerObjectForStateRestoration:restorationIdentifier:':
                trim_after_first_colon: true
            '-beginBackgroundTaskWith.*':
                name: beginBackgroundTask
            '-enabledRemoteNotificationTypes':
                name: getEnabledRemoteNotificationTypes
            '-sendAction:to:from:forEvent:':
                trim_after_first_colon: true
            '-supportedInterfaceOrientationsForWindow:':
                name: getSupportedInterfaceOrientations
            '-setKeepAliveTimeout:handler:':
                trim_after_first_colon: true
            '-(openURL|canOpenURL|sendEvent|cancelLocalNotification|endBackgroundTask):':
                trim_after_first_colon: true
            '-(presentLocalNotificationNow|registerForRemoteNotificationTypes|scheduleLocalNotification):':
                trim_after_first_colon: true
            '-(setStatusBar(Hidden|Style|Orientation)).*':
                trim_after_first_colon: true
            '-registerUserNotificationSettings:':
                trim_after_first_colon: true
            '-openURL:options:completionHandler:':
                trim_after_first_colon: true
                parameters:
                    options:
                        type: UIApplicationOpenURLOptions
            '-setAlternateIconName:completionHandler:':
                name: setAlternateIcon
            '-requestSceneSessionActivation:userActivity:options:errorHandler:':
                name: requestSceneSessionActivation
            '-requestSceneSessionDestruction:options:errorHandler:':
                name: requestSceneSessionDestruction
    UIApplicationShortcutIcon: # DONE
        methods:
            '+iconWithSystemImageName:':
                name: createUsingSystemImageName
                constructor: false
            '+iconWith.*':
                name: create
                constructor: true
    UIApplicationShortcutItem: # DONE
        skip_def_constructor: true
        methods:
            '-initWithType:localizedTitle:localizedSubtitle:icon:userInfo:':
                name: init
            '-initWithType:localizedTitle:':
                name: init
    UIAttachmentBehavior: # DONE
        properties:
            'items':
                type: List<UIDynamicItem>
        methods:
            '-initWithItem:attachedToAnchor:':
                name: init
            '-initWithItem:offsetFromCenter:attachedToAnchor:':
                name: init
            '-initWithItem:attachedToItem:':
                name: init
            '-initWithItem:offsetFromCenter:attachedToItem:offsetFromCenter:':
                name: init
            '+slidingAttachment.*':
                name: getSlidingAttachment
            '+limitAttachment.*':
                name: getLimitAttachment
            '+fixedAttachment.*':
                name: getFixedAttachment
            '+pinAttachmentWithItem:attachedToItem:attachmentAnchor:':
                name: getPinAttachment
    UIBarButtonItem: # DONE
        properties:
            'possibleTitles':
                type: Set<String>
                marshaler: NSSet.AsStringSetMarshaler
        methods:
            '-initWithImage:style:target:action:':
                name: init
            '-initWithImage:landscapeImagePhone:style:target:action:':
                name: init
            '-initWithTitle:style:target:action:':
                name: init
            '-initWithBarButtonSystemItem:target:action:':
                name: init
            '-initWithItem:attachedToAnchor:':
                name: init
            '-initWithItem:offsetFromCenter:attachedToAnchor:':
                name: init
            '-initWithItem:attachedToItem:':
                name: init
            '-initWithItem:offsetFromCenter:attachedToItem:offsetFromCenter:':
                name: init
            '-initWithCustomView:':
                name: init
            '-backButtonBackgroundImageForState:barMetrics:':
                name: getBackButtonBackgroundImage
            '-backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:':
                name: getBackButtonBackgroundVerticalPositionAdjustment
            '-backButtonTitlePositionAdjustmentForBarMetrics:':
                name: getBackButtonTitlePositionAdjustment
            '-backgroundImageForState:barMetrics:':
                name: getBackgroundImage
            '-backgroundVerticalPositionAdjustmentForBarMetrics:':
                name: getBackgroundVerticalPositionAdjustment
            '-titlePositionAdjustmentForBarMetrics:':
                name: getTitlePositionAdjustment
            '-backgroundImageForState:style:barMetrics:':
                name: getBackgroundImage
            '-setBackgroundImage:forState:barMetrics:':
                trim_after_first_colon: true
            '-setBackgroundImage:forState:style:barMetrics:':
                trim_after_first_colon: true
            '-setBackgroundVerticalPositionAdjustment:forBarMetrics:':
                trim_after_first_colon: true
            '-setTitlePositionAdjustment:forBarMetrics:':
                trim_after_first_colon: true
            '-setBackButtonBackgroundImage:forState:barMetrics:':
                trim_after_first_colon: true
            '-setBackButtonTitlePositionAdjustment:forBarMetrics:':
                trim_after_first_colon: true
            '-setBackButtonBackgroundVerticalPositionAdjustment:forBarMetrics:':
                trim_after_first_colon: true
            '-initWithBarButtonSystemItem:primaryAction:':
                name: init
            '-initWithPrimaryAction:':
                name: init
            '-initWithBarButtonSystemItem:menu:':
                name: init
            '-initWithTitle:menu:':
                name: init
            '-initWithImage:menu:':
                name: init
    UIBarButtonItemGroup: # DONE
        properties:
            'barButtonItems':
                type: NSArray<UIBarButtonItem>
        methods:
            '-initWithBarButtonItems:representativeItem:':
                name: init
                parameters:
                    barButtonItems:
                        type: NSArray<UIBarButtonItem>
    UIBarItem: # DONE
        protocols: [NSCoding, UIAppearanceContainer]
        methods:
            '-setTitleTextAttributes:forState:':
                name: setTitleTextAttributesDictionary
                parameters:
                    attributes:
                        type: 'NSDictionary<NSString, ?>'
            '-titleTextAttributesForState:':
                name: getTitleTextAttributesDictionary
                return_type: 'NSDictionary<NSString, ?>'
    UIBezierPath: # DONE
        methods:
            '-init.*':
                name: init
            '+bezierPath':
                exclude: true
            '+bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:':
                name: newArc
            '+bezierPathWithCGPath:':
                name: newPath
            '+bezierPathWithOvalInRect:':
                name: newOval
            '+bezierPathWithRect:':
                name: newRect
            '+bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:':
                name: newRoundedRect
            '+bezierPathWithRoundedRect:cornerRadius:':
                name: newRoundedRect
            '-addArcWithCenter:radius:startAngle:endAngle:clockwise:':
                name: addArc
            '-addCurveToPoint:controlPoint1:controlPoint2:':
                name: addCurve
            '-addLineToPoint:':
                name: addLine
            '-addQuadCurveToPoint:controlPoint:':
                name: addQuadCurve
            '-fillWithBlendMode:alpha:':
                name: fill
            '-moveToPoint:':
                name: move
            '-strokeWithBlendMode:alpha:':
                name: stroke
            '-bezierPathByReversingPath':
                name: reverse
            '-appendPath:':
                trim_after_first_colon: true
            '-applyTransform:':
                trim_after_first_colon: true
            '-containsPoint:':
                trim_after_first_colon: true
            '-setLineDash:count:phase:':
                trim_after_first_colon: true
                visibility: protected
            '-getLineDash:count:phase:':
                trim_after_first_colon: true
                visibility: protected
    UIBlurEffect: # DONE
        methods:
            '+effectWithStyle:':
                name: create
                constructor: true
    UIButton: # DONE
        methods:
            '+buttonWithType:':
                name: create0
                constructor: true
            '-backgroundImageForState:':
                name: getBackgroundImage
            '-backgroundRectForBounds:':
                name: getBackgroundRect
            '-contentRectForBounds:':
                name: getContentRect
            '-imageForState:':
                name: getImage
            '-imageRectForContentRect:':
                name: getImageRect
            '-titleColorForState:':
                name: getTitleColor
            '-titleForState:':
                name: getTitle
            '-titleShadowColorForState:':
                name: getTitleShadowColor
            '-titleRectForContentRect:':
                name: getTitleRect
            '-attributedTitleForState:':
                name: getAttributedTitle
            '-(set.*):forState:.*':
                name: '#{g[0]}'
            '-setPreferredSymbolConfiguration:forImageInState:':
                name: setPreferredSymbolConfiguration
            '+systemButtonWithImage:target:action:':
                name: getSystemButtonWithImage
            '+systemButtonWithPrimaryAction:':
                name: getSystemButtonWithPrimaryAction
            '+buttonWithType:primaryAction:':
                name: create0
                constructor: true
            '+buttonWithConfiguration:primaryAction:':
                constructor: true
                name: create
    UICollectionReusableView: # DONE
        methods:
            '-didTransitionFromLayout:toLayout:':
                name: didTransition
            '-willTransitionFromLayout:toLayout:':
                name: willTransition
            '-applyLayoutAttributes:':
                trim_after_first_colon: true
            '-preferredLayoutAttributesFittingAttributes:':
                name: getPreferredLayoutAttributesFittingAttributes
    UICollectionView: # DONE
        properties:
            'transform3D':
                annotations: ['@WeaklyLinked']
        methods:
            '-initWithFrame:collectionViewLayout:':
                name: init
            '-cellForItemAtIndexPath:':
                name: getCellForItem
            '-deleteItemsAtIndexPaths:':
                name: deleteItems
            '-dequeueReusableCellWithReuseIdentifier:forIndexPath:':
                name: dequeueReusableCell
                return_type: UICollectionReusableView
            '-dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:':
                name: dequeueReusableSupplementaryView
                return_type: UICollectionReusableView
                parameters:
                    elementKind:
                        type: UICollectionElementKind
            '-deselectItemAtIndexPath:animated:':
                name: deselectItem
            '-indexPathForCell:':
                name: getIndexPathForCell
            '-indexPathForItemAtPoint:':
                name: getIndexPathForItem
            '-supplementaryViewForElementKind:atIndexPath:':
                name: getSupplementaryView
            '-visibleSupplementaryViewsOfKind:':
                name: getVisibleSupplementaryViews
            '-indexPathsForVisibleSupplementaryElementsOfKind:':
                name: getIndexPathsForVisibleSupplementaryElements
            '-insertItemsAtIndexPaths:':
                name: insertItems
            '-layoutAttributesForItemAtIndexPath:':
                name: getLayoutAttributesForItem
            '-layoutAttributesForSupplementaryElementOfKind:atIndexPath:':
                name: getLayoutAttributesForSupplementaryElement
                parameters:
                    kind:
                        type: UICollectionElementKind
            '-moveItemAtIndexPath:toIndexPath:':
                name: moveItem
            '-numberOfItemsInSection:':
                name: getNumberOfItemsInSection
            '-registerClass:forCellWithReuseIdentifier:':
                name: registerReusableCellClass
                parameters:
                    cellClass:
                        type: 'Class<? extends UICollectionViewCell>'
            '-registerClass:forSupplementaryViewOfKind:withReuseIdentifier:':
                name: registerReusableSupplementaryViewClass
                parameters:
                    viewClass:
                        type: 'Class<? extends UICollectionReusableView>'
                    elementKind:
                        type: UICollectionElementKind
            '-registerNib:forCellWithReuseIdentifier:':
                name: registerReusableCellNib
            '-registerNib:forSupplementaryViewOfKind:withReuseIdentifier:':
                name: registerReusableSupplementaryViewNib
                parameters:
                    kind:
                        type: UICollectionElementKind
            '-reloadItemsAtIndexPaths:':
                name: reloadItems
            '-scrollToItemAtIndexPath:atScrollPosition:animated:':
                name: scrollToItem
            '-selectItemAtIndexPath:animated:scrollPosition:':
                name: selectItem
            '-setCollectionViewLayout:animated:':
                trim_after_first_colon: true
            '-setCollectionViewLayout:animated:completion:':
                trim_after_first_colon: true
            '-startInteractiveTransitionToCollectionViewLayout:completion:':
                name: startInteractiveTransition
                parameters:
                    completion:
                        type: '@Block VoidBlock2<Boolean, Boolean>'
            '-(insert|delete|reload)Sections:':
                trim_after_first_colon: true
            '-moveSection:toSection:':
                trim_after_first_colon: true
            '-performBatchUpdates:completion:':
                trim_after_first_colon: true
            '-beginInteractiveMovementForItemAtIndexPath:':
                name: beginInteractiveMovement
            '-updateInteractiveMovementTargetPosition:':
                name: updateInteractiveMovement
            '-dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:':
                name: dequeueConfiguredReusableCell
            '-dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath:':
                name: dequeueConfiguredReusableSupplementaryView
    UICollectionViewCell: # DONE
        methods:
    UICollectionViewController: # DONE
        properties:
            'useLayoutToLayoutNavigationTransitions':
                name: usesLayoutToLayoutNavigationTransitions
        methods:
            '-initWithCollectionViewLayout:':
                name: init
            '-collectionView:shouldSpringLoadItemAtIndexPath:withContext:':
                name: shouldSpringLoadItem
    UICollectionViewFlowLayout: {} # DONE
    UICollectionViewFlowLayoutInvalidationContext: # DONE
        properties:
            'invalidateFlowLayoutDelegateMetrics':
                name: invalidatesFlowLayoutDelegateMetrics
            'invalidateFlowLayoutAttributes':
                name: invalidatesFlowLayoutAttributes
    UICollectionViewFocusUpdateContext: {} # DONE
    UICollectionViewLayout: # DONE
        properties:
            'layoutAttributesClass':
                type: 'Class<? extends UICollectionViewLayoutAttributes>'
            'invalidationContextClass':
                type: 'Class<? extends UICollectionViewLayoutInvalidationContext>'
        methods:
            '-finalLayoutAttributesForDisappearingDecorationElementOfKind:atIndexPath:':
                name: getFinalLayoutAttributesForDisappearingDecorationElement
            '-finalLayoutAttributesForDisappearingItemAtIndexPath:':
                name: getFinalLayoutAttributesForDisappearingItem
            '-finalLayoutAttributesForDisappearingSupplementaryElementOfKind:atIndexPath:':
                name: getFinalLayoutAttributesForDisappearingSupplementaryElement
            '-initialLayoutAttributesForAppearingDecorationElementOfKind:atIndexPath:':
                name: getInitialLayoutAttributesForAppearingDecorationElement
            '-initialLayoutAttributesForAppearingItemAtIndexPath:':
                name: getInitialLayoutAttributesForAppearingItem
            '-initialLayoutAttributesForAppearingSupplementaryElementOfKind:atIndexPath:':
                name: getInitialLayoutAttributesForAppearingSupplementaryElement
            '-layoutAttributesForDecorationViewOfKind:atIndexPath:':
                name: getLayoutAttributesForDecorationView
            '-layoutAttributesForElementsInRect:':
                name: getLayoutAttributesForElements
                return_type: NSArray<UICollectionViewLayoutAttributes>
            '-layoutAttributesForItemAtIndexPath:':
                name: getLayoutAttributesForItem
            '-layoutAttributesForSupplementaryViewOfKind:atIndexPath:':
                name: getLayoutAttributesForSupplementaryView
            '-registerClass:forDecorationViewOfKind:':
                name: registerDecorationViewClass
                parameters:
                    viewClass:
                        type: 'Class<? extends UICollectionReusableView>'
            '-registerNib:forDecorationViewOfKind:':
                name: registerDecorationViewNib
            '-targetContentOffsetForProposedContentOffset:withScrollingVelocity:':
                name: getTargetContentOffset
            '-invalidateLayoutWithContext:':
                name: invalidateLayout
            '-invalidationContextForBoundsChange:':
                name: getInvalidationContextForBoundsChange
            '-shouldInvalidateLayoutForBoundsChange:':
                trim_after_first_colon: true
            '-targetContentOffsetForProposedContentOffset:':
                name: getTargetContentOffset
            '-prepareForCollectionViewUpdates:':
                trim_after_first_colon: true
                parameters:
                    updateItems:
                        type: NSArray<UICollectionViewUpdateItem>
            '-prepareForAnimatedBoundsChange:':
                trim_after_first_colon: true
            '-prepareForTransitionToLayout:':
                trim_after_first_colon: true
            '-prepareForTransitionFromLayout:':
                trim_after_first_colon: true
            '-indexPaths(To.*For.*)OfKind:':
                name: 'getIndexPaths#{g[0]}'
                return_type: NSArray<NSIndexPath>
            '-shouldInvalidateLayoutForPreferredLayoutAttributes:withOriginalAttributes:':
                trim_after_first_colon: true
            '-invalidationContextForPreferredLayoutAttributes:withOriginalAttributes:':
                name: getInvalidationContextForPreferredLayoutAttributes
            '-targetIndexPathForInteractivelyMovingItem:withPosition:':
                name: getTargetIndexPathForInteractivelyMovingItem
            '-layoutAttributesForInteractivelyMovingItemAtIndexPath:withTargetPosition:':
                name: getLayoutAttributesForInteractivelyMovingItem
            '-invalidationContextForInteractivelyMovingItems:withTargetPosition:previousIndexPaths:previousPosition:':
                name: getInvalidationContextForInteractivelyMovingItems
            '-invalidationContextForEndingInteractiveMovementOfItemsToFinalIndexPaths:previousIndexPaths:movementCancelled:':
                name: getInvalidationContextForEndingInteractiveMovement
    UICollectionViewLayoutAttributes: # DONE
        methods:
            '+layoutAttributesForCellWithIndexPath:':
                name: createForCell
            '+layoutAttributesForDecorationViewOfKind:withIndexPath:':
                name: createForDecorationView
            '+layoutAttributesForSupplementaryViewOfKind:withIndexPath:':
                name: createForSupplementaryView
    UICollectionViewLayoutInvalidationContext: # DONE
        properties:
            'invalidated.*IndexPaths':
                type: NSArray<NSIndexPath>
            'invalidateEverything':
                name: invalidatesEverything
            'invalidateDataSourceCounts':
                name: invalidatesDataSourceCounts
            'previousIndexPathsForInteractivelyMovingItems':
                type: NSArray<NSIndexPath>
            'targetIndexPathsForInteractivelyMovingItems':
                type: NSArray<NSIndexPath>
        methods:
            '-invalidateItemsAtIndexPaths:':
                name: invalidateItems
                parameters:
                    indexPaths:
                        type: NSArray<NSIndexPath>
            '-invalidateSupplementaryElementsOfKind:atIndexPaths:':
                trim_after_first_colon: true
                parameters:
                    indexPaths:
                        type: NSArray<NSIndexPath>
            '-invalidateDecorationElementsOfKind:atIndexPaths:':
                trim_after_first_colon: true
                parameters:
                    indexPaths:
                        type: NSArray<NSIndexPath>
    UICollectionViewTransitionLayout: # DONE
        methods:
            '-initWithCurrentLayout:nextLayout:':
                name: init
            '-updateValue:forAnimatedKey:':
                trim_after_first_colon: true
            '-valueForAnimatedKey:':
                name: getValue
    UICollectionViewUpdateItem: {} # DONE
    UICollisionBehavior: # DONE
        properties:
            'items':
                type: List<UIDynamicItem>
        methods:
            '-initWithItems:':
                name: init
                parameters:
                    items:
                        type: List<UIDynamicItem>
            '-addItem:':
                trim_after_first_colon: true
            '-removeItem:':
                trim_after_first_colon: true
            '-setTranslatesReferenceBoundsIntoBoundaryWithInsets:':
                name: setTranslatesReferenceBoundsIntoBoundary
            '-addBoundaryWithIdentifier:forPath:':
                name: addBoundary
            '-addBoundaryWithIdentifier:fromPoint:toPoint:':
                name: addBoundary
            '-removeBoundaryWithIdentifier:':
                name: removeBoundary
            '-boundaryWithIdentifier:':
                name: getBoundary
    UIColor: # DONE
        properties:
            '(CIColor|CGColor)': {}
            '(.*)Color':
                getter: '#{g[0]}'
        methods:
            '-init.*':
                name: init
            '-initWithHue:saturation:brightness:alpha:':
                exclude: true
            '-initWithPatternImage:':
                exclude: true
            '-initWithWhite:alpha:':
                exclude: true
            '-initWithDisplayP3Red:green:blue:alpha:':
                exclude: true
            '+colorWithCGColor:':
                name: fromCGColor
            '+colorWithCIColor:':
                name: fromCIColor
            '+colorWithHue:saturation:brightness:alpha:':
                name: fromHSBA
            '+colorWithRed:green:blue:alpha:':
                name: fromRGBA
            '+colorWithPatternImage:':
                name: fromPatternImage
            '+colorWithWhite:alpha:':
                name: fromWhiteAlpha
            '+colorWithDisplayP3Red:green:blue:alpha:':
                name: fromDisplayP3
            '+colorNamed:inBundle:compatibleWithTraitCollection:':
                name: fromResourceBundle
            '-colorWithAlphaComponent:':
                name: addAlpha
            '-getHue:saturation:brightness:alpha:':
                name: getHSBA
                visibility: protected
            '-getRed:green:blue:alpha:':
                name: getRGBA
                visibility: protected
            '-getWhite:alpha:':
                name: getWhiteAlpha
                visibility: protected
            '-set':
                name: setFillAndStroke
            '-resolvedColorWithTraitCollection:':
                name: resolvedColorWithTraitCollection
            '+colorWithDynamicProvider:':
                exclude: true # as has init
    UIContentSizeCategoryAdjusting: {} # DONE
    UIControl: # DONE
        skip_handle_constructor: false
        methods:
            '-actionsForTarget:forControlEvent:':
                name: getActions
                return_type: List<String>
                return_marshaler: NSArray.AsStringListMarshaler
            '-beginTrackingWithTouch:withEvent:':
                name: beginTracking
            '-cancelTrackingWithEvent:':
                name: cancelTracking
            '-continueTrackingWithTouch:withEvent:':
                name: continueTracking
            '-endTrackingWithTouch:withEvent:':
                name: endTracking
            '-sendActionsForControlEvents:':
                name: sendControlEventsActions
            '-addTarget:action:forControlEvents:':
                name: addTarget
            '-removeTarget:action:forControlEvents:':
                name: removeTarget
            '-sendAction:to:forEvent:':
                name: sendAction
            '-initWithFrame:primaryAction:':
                name: init
            '-addAction:forControlEvents:':
                name: addAction
            '-removeAction:forControlEvents:':
                name: removeAction
            '-removeActionForIdentifier:forControlEvents:':
                name: removeAction
    UICubicTimingParameters: # DONE
        methods:
            '-init.*':
                name: init
    UIDatePicker: # DONE
        methods:
            '-setDate:animated:':
                name: setDate
    UIDevice: {} # DONE
    UIDictationPhrase: # DONE
        properties:
            'alternativeInterpretations':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
    UIDocument: # DONE
        methods:
            '-initWithFileURL:':
                name: init
            '-autosaveWithCompletionHandler:':
                name: autoSave
            '-closeWithCompletionHandler:':
                name: close
            '-fileAttributesToWriteToURL:forSaveOperation:error:':
                name: getFileAttributesToWrite
                return_type: NSFileAttributes
                throws: NSErrorException
            '-fileNameExtensionForType:saveOperation:':
                name: getFileNameExtension
            '-openWithCompletionHandler:':
                name: open
            '-performAsynchronousFileAccessUsingBlock:':
                name: performAsynchronousFileAccess
            '-readFromURL:error:':
                name: read
                throws: NSErrorException
            '-revertToContentsOfURL:completionHandler:':
                name: revert
            '-saveToURL:forSaveOperation:completionHandler:':
                name: save
            '-updateChangeCountWithToken:forSaveOperation:':
                name: updateChangeCount
            '-loadFromContents:ofType:error:':
                trim_after_first_colon: true
                throws: NSErrorException
            '-contentsForType:error:':
                name: getContentsForType
                throws: NSErrorException
            '-updateChangeCount:':
                trim_after_first_colon: true
            '-changeCountTokenForSaveOperation:':
                name: getChangeCountToken
            '-writeContents:andAttributes:safelyToURL:forSaveOperation:error:':
                trim_after_first_colon: true
                throws: NSErrorException
                parameters:
                    additionalFileAttributes:
                        type: NSFileAttributes
            '-writeContents:toURL:forSaveOperation:originalContentsURL:error:':
                trim_after_first_colon: true
                throws: NSErrorException
            '-handleError:userInteractionPermitted:':
                trim_after_first_colon: true
            '-finishedHandlingError:recovered:':
                trim_after_first_colon: true
            '-userInteractionNoLongerPermittedForError:':
                name: userInteractionNoLongerPermitted
            '-updateUserActivityState:':
                trim_after_first_colon: true
            '-restoreUserActivityState:':
                trim_after_first_colon: true
    UIDocumentMenuViewController: # DONE
        methods:
            '-initWithDocumentTypes:inMode:':
                name: init
                parameters:
                    allowedUTIs:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '-initWithURL:inMode:':
                name: init
            '-addOptionWithTitle:image:order:handler:':
                name: addOption
    UIDocumentInteractionController: # DONE
        properties:
            'icons':
                type: NSArray<UIImage>
            'gestureRecognizers':
                type: NSArray<UIGestureRecognizer>
        methods:
            '+interactionControllerWithURL:':
                name: create
                constructor: true
            '-dismissMenuAnimated:':
                name: dismissMenu
            '-dismissPreviewAnimated:':
                name: dismissPreview
            '-presentOpenInMenuFromBarButtonItem:animated:':
                name: presentOpenInMenu
            '-presentOpenInMenuFromRect:inView:animated:':
                name: presentOpenInMenu
            '-presentOptionsMenuFromBarButtonItem:animated:':
                name: presentOptionsMenu
            '-presentOptionsMenuFromRect:inView:animated:':
                name: presentOptionsMenu
            '-presentPreviewAnimated:':
                name: presentPreview
    UIDocumentPickerExtensionViewController: # DONE
        properties:
            'validTypes':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
        methods:
            '-dismissGrantingAccessToURL:':
                trim_after_first_colon: true
            '-prepareForPresentationInMode:':
                name: prepareForPresentation
    UIDocumentPickerViewController: # DONE
        methods:
            '-initWithDocumentTypes:inMode:':
                name: init
                parameters:
                    allowedUTIs:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '-initWithURL:inMode:':
                name: init
            '-initWithURLs:inMode:':
                name: init
            '-initForOpeningContentTypes:':
                static_constructor_name: createForOpeningContentTypes
            '-initForOpeningFilesWithContentTypes:':
                static_constructor_name: createForOpeningContentTypes
                name: initForOpeningFilesWithContentTypes
            '-initForOpeningContentTypes:asCopy:':
                static_constructor_name: createForOpeningContentTypes
                name: initForOpeningContentTypesAsCopy
            '-initForExportingURLs:asCopy:':
                static_constructor_name: createForExportingURLs
                name: initForExportingURLsAsCopy
    UIDynamicAnimator: # DONE
        properties:
            'behaviors':
                type: NSArray<UIDynamicBehavior>
        methods:
            '-initWithReferenceView:':
                name: init
            '-initWithCollectionViewLayout:':
                name: init
            '-addBehavior:':
                trim_after_first_colon: true
            '-removeBehavior:':
                trim_after_first_colon: true
            '-updateItemUsingCurrentState:':
                trim_after_first_colon: true
            '-layoutAttributesForCellAtIndexPath:':
                name: getLayoutAttributesForCell
            '-layoutAttributesForSupplementaryViewOfKind:atIndexPath:':
                name: getLayoutAttributesForSupplementaryView
            '-layoutAttributesForDecorationViewOfKind:atIndexPath:':
                name: getLayoutAttributesForDecorationView
            '-itemsInRect:':
                name: getItemsInRect
                return_type: List<UIDynamicItem>
    UIDynamicBehavior: # DONE
        properties:
            'childBehaviors':
                type: NSArray<UIDynamicBehavior>
        methods:
            '-addChildBehavior:':
                trim_after_first_colon: true
            '-removeChildBehavior:':
                trim_after_first_colon: true
            '-willMoveToAnimator:':
                trim_after_first_colon: true
    UIDynamicItemBehavior: # DONE
        properties:
            'items':
                type: List<UIDynamicItem>
        methods:
            '-initWithItems:':
                name: init
                parameters:
                    items:
                        type: List<UIDynamicItem>
            '-addItem:':
                trim_after_first_colon: true
            '-removeItem:':
                trim_after_first_colon: true
            '-addLinearVelocity:forItem:':
                name: addLinearVelocityForItem
            '-linearVelocityForItem:':
                name: getLinearVelocityForItem
            '-addAngularVelocity:forItem:':
                name: addAngularVelocityForItem
            '-angularVelocityForItem:':
                name: getAngularVelocityForItem
    UIDynamicItemGroup: # DONE
        properties:
            'items':
                type: List<UIDynamicItem>
                marshaler: NSArray.AsListMarshaler
        methods:
            '-initWithItems:':
                name: init
                parameters:
                    items:
                        type: List<UIDynamicItem>
                        marshaler: NSArray.AsListMarshaler
    UIEvent: # DONE
        methods:
            '-touchesForGestureRecognizer:':
                name: getTouches
            '-touchesForView:':
                name: getTouches
            '-touchesForWindow:':
                name: getTouches
            '-coalescedTouchesForTouch:':
                name: getCoalescedTouches
            '-predictedTouchesForTouch:':
                name: getPredictedTouches
    UIFeedbackGenerator: {} # DONE
    UIFieldBehavior: # DONE
        properties:
            'items':
                type: List<UIDynamicItem>
                marshaler: NSArray.AsListMarshaler
        methods:
            '+fieldWithEvaluationBlock:':
                exclude: true
            '+(.*)Field.*':
                name: '#{g[0]}'
            '-addItem:':
                trim_after_first_colon: true
            '-removeItem:':
                trim_after_first_colon: true
    UIFocusAnimationCoordinator: # DONE
        methods:
            '-addCoordinatedAnimations:completion:':
                trim_after_first_colon: true
            '-addCoordinatedFocusingAnimations:completion:':
                trim_after_first_colon: true
            '-addCoordinatedUnfocusingAnimations:completion:':
                trim_after_first_colon: true
    UIFocusGuide: # DONE
        properties:
            'preferredFocusEnvironments':
                type: List<UIFocusEnvironment>
                marshaler: NSArray.AsListMarshaler
    UIFocusUpdateContext: {} # DONE
    UIFont: # DONE
        properties:
            'familyNames':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
        methods:
            '+boldSystemFontOfSize:':
                name: getBoldSystemFont
            '+monospacedDigitSystemFontOfSize:weight:':
                name: getMonospacedDigitSystemFont
            '+fontNamesForFamilyName:':
                name: getFontNamesForFamilyName
                return_type: List<String>
                return_marshaler: NSArray.AsStringListMarshaler
            '+buttonFontSize':
                name: getButtonFontSize
            '+italicSystemFontOfSize:':
                name: getItalicSystemFont
            '+labelFontSize':
                name: getLabelFontSize
            '+smallSystemFontSize':
                name: getSmallSystemFontSize
            '+systemFontOfSize:':
                name: getSystemFont
            '+systemFontOfSize:weight:':
                name: getSystemFont
            '+systemFontSize':
                name: getSystemFontSize
            '+fontWithName:size:':
                name: getFont
            '+fontWithDescriptor:size:':
                name: getFont
            '+preferredFontForTextStyle.*':
                name: getPreferredFont
                parameters:
                    style:
                        type: UIFontTextStyle
            '-fontWithSize:':
                name: newWithSize
            '+monospacedSystemFontOfSize:weight:':
                name: getMonospacedSystemFont
    UIFontDescriptor: # DONE
        properties:
            'fontAttributes':
                type: UIFontDescriptorAttributes
        methods:
            '-initWithFontAttributes:':
                name: init
                parameters:
                    attributes:
                        type: UIFontDescriptorAttributes
            '-init.*':
                name: init
            '+fontDescriptorWithFontAttributes:':
                exclude: true
            '+fontDescriptorWithName:size:':
                name: create
                constructor: true
            '+fontDescriptorWithName:matrix:':
                name: create
                constructor: true
            '+preferredFontDescriptorWithTextStyle.*':
                name: getPreferredFontDescriptor
                parameters:
                    style:
                        type: UIFontTextStyle
            '-objectForKey:':
                name: getValue
                visibility: protected
                parameters:
                    anAttribute:
                        type: NSString
            '-matchingFontDescriptorsWithMandatoryKeys:':
                name: getMatchingFontDescriptors
                return_type: NSArray<UIFontDescriptor>
                visibility: protected
                parameters:
                    mandatoryKeys:
                        type: NSSet<NSString>
            '-fontDescriptorByAddingAttributes:':
                name: newWithAttributes
                parameters:
                    attributes:
                        type: UIFontDescriptorAttributes
            '-fontDescriptorWithSymbolicTraits:':
                name: newWithSymbolicTraits
            '-fontDescriptorWithSize:':
                name: newWithSize
            '-fontDescriptorWithMatrix:':
                name: newWithMatrix
            '-fontDescriptorWithFace:':
                name: newWithFace
            '-fontDescriptorWithFamily:':
                name: newWithFamily
            '-fontDescriptorWithDesign:':
                name: newWithDesign
    UIGestureRecognizer: # DONE
        properties:
            'allowedTouchTypes':
                type: List<UITouchType>
                marshaler: UITouchType.AsListMarshaler
            'allowedPressTypes':
                type: List<UIPressType>
                marshaler: UIPressType.AsListMarshaler
        methods:
            '-initWithTarget:action:':
                name: init
                parameters:
                    target:
                        type: NSObject
            '-initWithCoder:':
                name: init
            '-locationInView:':
                name: getLocationInView
            '-locationOfTouch:inView:':
                name: getLocationOfTouch
            '-numberOfTouches':
                name: getNumberOfTouches
            '-addTarget:action:':
                trim_after_first_colon: true
            '-removeTarget:action:':
                trim_after_first_colon: true
            '-requireGestureRecognizerToFail:':
                trim_after_first_colon: true
            '-ignoreTouch:forEvent:':
                trim_after_first_colon: true
                visibility: protected
            '-ignorePress:forEvent:':
                trim_after_first_colon: true
                visibility: protected
            '-touchesBegan:withEvent:':
                trim_after_first_colon: true
                visibility: protected
            '-touchesMoved:withEvent:':
                trim_after_first_colon: true
                visibility: protected
            '-touchesEnded:withEvent:':
                trim_after_first_colon: true
                visibility: protected
            '-touchesCancelled:withEvent:':
                trim_after_first_colon: true
                visibility: protected
            '-pressesBegan:withEvent:':
                trim_after_first_colon: true
                visibility: protected
            '-pressesChanged:withEvent:':
                trim_after_first_colon: true
                visibility: protected
            '-pressesEnded:withEvent:':
                trim_after_first_colon: true
                visibility: protected
            '-pressesCancelled:withEvent:':
                trim_after_first_colon: true
                visibility: protected

    UIGraphicsImageRenderer: # DONE
        methods:
            '-init.*':
                name: init
            '-imageWithActions:':
                name: toImage
            '-PNGDataWithActions:':
                name: toPNG
            '-JPEGDataWithCompressionQuality:actions:':
                name: toJPEG
    UIGraphicsImageRendererContext: {} # DONE
    UIGraphicsImageRendererFormat: {} # DONE
    UIGraphicsPDFRenderer: # DONE
        methods:
            '-init.*':
                name: init
            '-writePDFToURL:withActions:error:':
                name: writePDFToURL
                throws: NSErrorException
            '-PDFDataWithActions:':
                name: toPDFData
    UIGraphicsPDFRendererContext: # DONE
        methods:
            '-beginPageWithBounds:pageInfo:':
                name: beginPage
            '-setURL:forRect:':
                name: setURLForRect
            '-addDestinationWithName:atPoint:':
                name: addDestination
            '-setDestinationWithName:forRect:':
                name: setDestination
    UIGraphicsPDFRendererFormat: {} # DONE
    UIGraphicsRenderer: # DONE
        methods:
            '-runDrawingActions:completionActions:error:':
                trim_after_first_colon: true
            '+prepareCGContext:withRendererContext:':
                trim_after_first_colon: true
            '+contextWithFormat:':
                name: createContext
            '-initWithBounds:':
                name: init
            '-initWithBounds:format:':
                name: init
    UIGraphicsRendererContext: # DONE
        methods:
            '-fillRect.*':
                trim_after_first_colon: true
            '-strokeRect.*':
                trim_after_first_colon: true
            '-clipToRect:':
                trim_after_first_colon: true
    UIGraphicsRendererFormat: # DONE
        methods:
            '+defaultFormat':
                property: true
    UIGravityBehavior: # DONE
        properties:
            'items':
                type: List<UIDynamicItem>
        methods:
            '-initWithItems:':
                name: init
                parameters:
                    items:
                        type: List<UIDynamicItem>
            '-addItem:':
                trim_after_first_colon: true
            '-removeItem:':
                trim_after_first_colon: true
            '-setAngle:magnitude:':
                trim_after_first_colon: true
    UIImage: # DONE
        protocols: [UIAccessibility, UIAccessibilityIdentification]
        properties:
            'images':
                type: NSArray<UIImage>
            'imageOrientation':
                name: orientation
            'flipsForRightToLeftLayoutDirection':
                name: flipsHorizontally
            'CIImage':
                annotations: ['@WeaklyLinked']
        methods:
            '+animatedImageNamed:duration:':
                name: getAnimatedImage
            '+animatedImageWithImages:duration:':
                name: getAnimatedImage
                parameters:
                    images:
                        type: NSArray<UIImage>
            '+animatedResizableImageNamed:capInsets:duration:':
                name: getAnimatedResizableImage
            '+animatedResizableImageNamed:capInsets:resizingMode:duration:':
                name: getAnimatedResizableImage
            '+imageNamed:':
                name: getImage
            '+imageNamed:inBundle:compatibleWithTraitCollection:':
                name: getImage
            '+systemImageNamed:withConfiguration:':
                name: getSystemImage
            '+systemImageNamed:compatibleWithTraitCollection:':
                name: getSystemImage
            '+imageNamed:inBundle:withConfiguration:':
                name: getImage
            '+imageWithContentsOfFile:':
                name: getImageWithContentsOfFile
                visibility: private
            '+imageWithCGImage:':
                exclude: true
            '+imageWithCGImage:scale:orientation:':
                exclude: true
            '+imageWithCIImage:':
                exclude: true
            '+imageWithData:':
                exclude: true
            '+imageWithCIImage:scale:orientation:':
                exclude: true
            '+imageWithData:scale:':
                exclude: true
            '-resizableImageWithCapInsets:':
                name: newResizableImage
            '-resizableImageWithCapInsets:resizingMode:':
                name: newResizableImage
            '-imageWithAlignmentRectInsets:':
                name: newImage
            '-imageWithRenderingMode:':
                name: newImage
            '-imageFlippedForRightToLeftLayoutDirection':
                name: flipHorizontally
            '-stretchableImageWithLeftCapWidth:topCapHeight:':
                exclude: true
            '-drawAtPoint:':
                name: draw
            '-drawAtPoint:blendMode:alpha:':
                name: draw
            '-drawInRect:':
                name: draw
            '-drawInRect:blendMode:alpha:':
                name: draw
            '-drawAsPatternInRect:':
                name: drawAsPattern
            '-initWithContentsOfFile:':
                name: initWithFile
                constructor: false
            '-initWithCIImage.*':
                name: init
                annotations: ['@WeaklyLinked']
            '-imageWithBaselineOffsetFromBottom:':
                name: imageWithBaselineOffsetFromBottom
            '-imageWithConfiguration:':
                name: imageWithConfiguration
            '-imageWithTintColor:':
                name: imageWithTintColor
            '-imageWithTintColor:renderingMode:':
                name: imageWithTintColor
            '-init.*':
                name: init
            '-prepareForDisplayWithCompletionHandler:':
                name: prepareForDisplay
            '-prepareThumbnailOfSize:completionHandler:':
                name: prepareThumbnail

    UIImageAsset: # DONE
        methods:
            '-init.*':
                name: init
            '-imageWithTraitCollection:':
                name: getImage
            '-imageWithConfiguration:':
                name: getImage
            '-registerImage:withTraitCollection:':
                trim_after_first_colon: true
            '-registerImage:withConfiguration:':
                trim_after_first_colon: true
            '-unregisterImageWithTraitCollection:':
                name: unregisterImage
            '-unregisterImageWithConfiguration:':
                name: unregisterImage
    UIImagePickerController: # DONE
        properties:
            'delegate':
                type: UIImagePickerControllerDelegate
            'mediaTypes':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
        methods:
            '+availableCaptureModesForCameraDevice:':
                name: getAvailableCaptureModes
                return_type: List<UIImagePickerControllerCameraCaptureMode>
                return_marshaler: UIImagePickerControllerCameraCaptureMode.AsListMarshaler
            '+availableMediaTypesForSourceType:':
                name: getAvailableMediaTypes
                return_type: List<String>
                return_marshaler: NSArray.AsStringListMarshaler
            '+isSourceTypeAvailable:':
                trim_after_first_colon: true
            '+isCameraDeviceAvailable:':
                trim_after_first_colon: true
            '+isFlashAvailableForCameraDevice:':
                trim_after_first_colon: true
    UIImageView: # DONE
        properties:
            'animationImages':
                type: NSArray<UIImage>
            'highlightedAnimationImages':
                type: NSArray<UIImage>
        methods:
            '-initWithImage:':
                name: init
            '-initWithImage:highlightedImage:':
                name: init
    UIImpactFeedbackGenerator: # DONE
        methods:
            '-init.*':
                name: init
            '-impactOccurredWithIntensity:':
                name: impactOccurred
    UIInputView: # DONE
        methods:
            '-initWithFrame:inputViewStyle:':
                name: init
    UIInputViewController: # DONE
        methods:
            '-requestSupplementaryLexiconWithCompletion:':
                name: requestSupplementaryLexicon
            '-handleInputModeListFromView:withEvent:':
                name: handleInputModeList
    UIInterpolatingMotionEffect: # DONE
        properties:
            'minimumRelativeValue':
                type: NSValue
            'maximumRelativeValue':
                type: NSValue
        methods:
            '-init.*':
                name: init
    UIKeyCommand: # DONE
        methods:
            '-init.*':
                name: init
            '+keyCommandWithInput:modifierFlags.*':
                name: create
                constructor: true
            '+commandWithTitle:image:action:input:modifierFlags:propertyList:':
                name: create
                constructor: true
            '+commandWithTitle:image:action:input:modifierFlags:propertyList:alternates:':
                name: create
                constructor: true
    UILayoutGuide: # DONE
        methods:
            '-constraintsAffectingLayoutForAxis:':
                name: getConstraintsAffectingLayout
    UILabel: # DONE
        methods:
            '-drawTextInRect:':
                name: drawText
            '-textRectForBounds:limitedToNumberOfLines:':
                name: getTextRect
    UILexicon: # DONE
        properties:
            'entries':
                type: NSArray<UILexiconEntry>
    UILexiconEntry: {} # DONE
    UILocalizedIndexedCollation: # DONE
        properties:
            '(sectionTitles|sectionIndexTitles)':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
        methods:
            '+currentCollation':
                name: getCurrentCollation
                return_type: UILocalizedIndexedCollation
            '-sectionForObject:collationStringSelector:':
                name: getSection
            '-sectionForSectionIndexTitleAtIndex:':
                name: getSection
            '-sortedArrayFromArray:collationStringSelector:':
                name: sortArray
    UILocalNotification: # DONE
        properties:
            'regionTriggersOnce':
                getter: regionTriggersOnce
            'region':
                annotations: ['@WeaklyLinked']
    UILongPressGestureRecognizer: {} # DONE
    UIManagedDocument: # DONE
        properties: 
            '(managedObjectContext|managedObjectModel)':
                annotations: ['@WeaklyLinked']
            'persistentStoreOptions':
                type: NSPersistentStoreOptions
                annotations: ['@WeaklyLinked']
        methods:
            '-additionalContentForURL:error:':
                name: getAdditionalContent
                throws: NSErrorException
            '-configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:':
                name: configurePersistentStoreCoordinator
                throws: NSErrorException
                annotations: ['@WeaklyLinked']
                parameters:
                    storeOptions:
                        type: NSPersistentStoreOptions
            '-persistentStoreTypeForFileType:':
                name: getPersistentStoreType
            '-readAdditionalContentFromURL:error:':
                name: readAdditionalContent
                throws: NSErrorException
            '-writeAdditionalContent:toURL:originalContentsURL:error:':
                name: writeAdditionalContent
                throws: NSErrorException
    UIMarkupTextPrintFormatter: # DONE
        methods:
            '-init.*':
                name: init
    UIMenuController: # DONE
        properties:
            'menuItems':
                name: menuItems0
                visibility: private
        methods:
            '-setMenuVisible:animated:':
                trim_after_first_colon: true
            '-setTargetRect:inView:':
                trim_after_first_colon: true
            '-showMenuFromView:rect:':
                name: showMenu
    UIMenuItem: # DONE
        methods:
            '-initWithTitle:action:':
                name: init
    UIMotionEffect: # DONE
        methods:
            '-init.*':
                name: init
            '-keyPathsAndRelativeValuesForViewerOffset:':
                name: getKeyPathsAndRelativeValues
                return_type: UIMotionEffectViewerOffsetValues
    UIMotionEffectGroup: {} # DONE
    UINavigationBar: # DONE
        properties:
            'delegate':
                type: UINavigationBarDelegate
            'titleTextAttributes':
                name: titleTextAttributesDictionary
                type: 'NSDictionary<NSString, ?>'
        methods:
            '-backgroundImageForBarMetrics:':
                name: getBackgroundImage
            '-popNavigationItemAnimated:':
                name: popNavigationItem
            '-titleVerticalPositionAdjustmentForBarMetrics:':
                name: getTitleVerticalPositionAdjustment
            '-pushNavigationItem:animated:':
                trim_after_first_colon: true
            '-setItems:animated:':
                trim_after_first_colon: true
                parameters:
                    items:
                        type: NSArray<UINavigationItem>
            '-setBackgroundImage:forBarPosition:barMetrics:':
                trim_after_first_colon: true
            '-setBackgroundImage:forBarMetrics:':
                trim_after_first_colon: true
            '-backgroundImageForBarPosition:barMetrics:':
                name: getBackgroundImage
            '-setTitleVerticalPositionAdjustment:forBarMetrics:':
                trim_after_first_colon: true
    UINavigationController: # DONE
        properties:
            'viewControllers':
                type: NSArray<UIViewController>
        methods:
            '-initWithNavigationBarClass:toolbarClass:':
                name: init
                parameters:
                    navigationBarClass:
                        type: 'Class<? extends UINavigationBar>'
                    toolbarClass:
                        type: 'Class<? extends UIToolbar>'
            '-initWithRootViewController:':
                name: init
            '-pushViewController:animated:':
                trim_after_first_colon: true
            '-popViewControllerAnimated:':
                name: popViewController
            '-popToViewController:animated:':
                trim_after_first_colon: true
                return_type: NSArray<UIViewController>
            '-popToRootViewControllerAnimated:':
                name: popToRootViewController
                return_type: NSArray<UIViewController>
            '-setViewControllers:animated:':
                trim_after_first_colon: true
                parameters:
                    viewControllers:
                        type: NSArray<UIViewController>
            '-setNavigationBarHidden:animated:':
                trim_after_first_colon: true
            '-setToolbarHidden:animated:':
                trim_after_first_colon: true
            '-showViewController:sender:':
                trim_after_first_colon: true
    UINavigationItem: # DONE
        properties:
            'leftBarButtonItems':
                type: NSArray<UIBarButtonItem>
            'rightBarButtonItems':
                type: NSArray<UIBarButtonItem>
            'leftItemsSupplementBackButton':
                getter: leftItemsSupplementBackButton
        methods:
            '-initWithTitle:':
                name: init
            '-setHidesBackButton:animated:':
                trim_after_first_colon: true
            '-setLeftBarButtonItems:animated:':
                trim_after_first_colon: true
                parameters:
                    items:
                        type: NSArray<UIBarButtonItem>
            '-setRightBarButtonItems:animated:':
                trim_after_first_colon: true
                parameters:
                    items:
                        type: NSArray<UIBarButtonItem>
            '-setLeftBarButtonItem:animated:':
                trim_after_first_colon: true
            '-setRightBarButtonItem:animated:':
                trim_after_first_colon: true
    UINib: # DONE
        methods:
            '+nibWithData:bundle:':
                name: create
                constructor: true
            '+nibWithNibName:bundle:':
                name: create
                constructor: true
            '-instantiateWithOwner:options:':
                name: instantiate
                return_type: NSArray<?>
                parameters:
                    optionsOrNil:
                        type: UINibLoadingOptions
    UINotificationFeedbackGenerator: # DONE
        methods:
            '-notificationOccurred:':
                trim_after_first_colon: true
    UIPageControl: # DONE
        methods:
            '-sizeForNumberOfPages:':
                name: getSizeForNumberOfPages
            '-setIndicatorImage:forPage:':
                name: setIndicatorImage
    UIPageViewController: # DONE
        properties:
            'gestureRecognizers':
                type: NSArray<UIGestureRecognizer>
            'viewControllers':
                type: NSArray<UIViewController>
        methods:
            '-initWithTransitionStyle:navigationOrientation:options:':
                name: init
                parameters:
                    options:
                        type: UIPageViewControllerOptions
            '-setViewControllers:direction:animated:completion:':
                trim_after_first_colon: true
                parameters:
                    viewControllers:
                        type: NSArray<UIViewController>
    UIPanGestureRecognizer:
        methods: 
            '-translationInView:':
                name: getTranslation
            '-setTranslation:inView:':
                trim_after_first_colon: true
            '-velocityInView:':
                name: getVelocity
    UIPasteboard: # DONE
        properties:
            'items':
                name: items0
                type: NSArray<NSDictionary>
                visibility: private
            '(pasteboardTypes|strings)':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
        methods:
            '+pasteboardWithUniqueName':
                name: getUniquePasteboard
            '+pasteboardWithName:create:':
                name: getPasteboard
            '+removePasteboardWithName:':
                name: removePasteboard
            '-containsPasteboardTypes:':
                name: contains
                parameters:
                    pasteboardTypes:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '-containsPasteboardTypes:inItemSet:':
                name: contains
                parameters:
                    pasteboardTypes:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '-dataForPasteboardType:':
                name: getData
            '-dataForPasteboardType:inItemSet:':
                name: getData
                return_type: NSArray<NSData>
            '-itemSetWithPasteboardTypes:':
                name: getItemsWithTypes
                parameters:
                    pasteboardTypes:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '-pasteboardTypesForItemSet:':
                name: getTypes0
                visibility: private
                return_type: NSArray<NSArray<NSString>>
            '-valueForPasteboardType:':
                name: getValue
            '-valuesForPasteboardType:inItemSet:':
                name: getValues
            '-setValue:forPasteboardType:':
                trim_after_first_colon: true
            '-setData:forPasteboardType:':
                trim_after_first_colon: true
            '-addItems:':
                trim_after_first_colon: true
                visibility: private
                parameters:
                    items:
                        type: NSArray<NSDictionary>
            '-setItems:options:':
                name: setItems0
                visibility: private
                parameters:
                    items:
                        type: NSArray<NSDictionary>
                    options:
                        type: UIPasteboardOptions
            '-setItemProviders:localOnly:expirationDate:':
                trim_after_first_colon: true
            '-setObjects:localOnly:expirationDate:':
                trim_after_first_colon: true
            '-detectPatternsForPatterns:completionHandler:':
                name: detectPatternsForPatterns
            '-detectPatternsForPatterns:inItemSet:completionHandler:':
                name: detectPatternsForPatterns
            '-detectValuesForPatterns:completionHandler:':
                name: detectValuesForPatterns
            '-detectValuesForPatterns:inItemSet:completionHandler:':
                name: detectValuesForPatterns
    UIPercentDrivenInteractiveTransition: # DONE
        methods:
            '-updateInteractiveTransition:':
                trim_after_first_colon: true
    UIPickerView: # DONE
        methods:
            '-numberOfRowsInComponent:':
                name: getNumberOfRows
            '-reloadAllComponents':
                name: reloadAllComponents
            '-reloadComponent:':
                name: reloadComponent
            '-rowSizeForComponent:':
                name: getRowSize
            '-selectedRowInComponent:':
                name: getSelectedRow
            '-selectRow:inComponent:animated:':
                name: selectRow
            '-viewForRow:forComponent:':
                name: getViewForRow
    UIPinchGestureRecognizer: {} # DONE
    UIPopoverBackgroundView: # DONE
        methods:
            '+arrowBase':
                name: getArrowBase
            '+arrowHeight':
                name: getArrowHeight
            '+contentViewInsets':
                name: getContentViewInsets
    UIPopoverController: # DONE
        properties:
            'passthroughViews':
                type: NSArray<UIView>
            'popoverBackgroundViewClass':
                type: 'Class<? extends UIPopoverBackgroundView>'
        methods:
            '-initWithContentViewController:':
                name: init
            '-dismissPopoverAnimated:':
                name: dismiss
            '-presentPopoverFromBarButtonItem:permittedArrowDirections:animated:':
                name: presentFromBarButtonItem
            '-presentPopoverFromRect:inView:permittedArrowDirections:animated:':
                name: presentFromRectInView
            '-setContentViewController:animated:':
                trim_after_first_colon: true
            '-setPopoverContentSize:animated:':
                trim_after_first_colon: true
    UIPopoverPresentationController: # DONE
        properties:
            'delegate':
                name: popoverPresentationDelegate
            'passthroughViews':
                type: NSArray<UIView>
            'popoverBackgroundViewClass':
                type: 'Class<? extends UIPopoverBackgroundView>'
    UIPresentationController: # DONE
        methods:
            '-initWithPresentedViewController:presentingViewController:':
                name: init
            '-adaptivePresentationStyleForTraitCollection:':
                name: getAdaptivePresentationStyleForTraitCollection
            '-frameOfPresentedViewInContainerView':
                property: true
            '-presentationTransitionDidEnd:':
                trim_after_first_colon: true
            '-dismissalTransitionDidEnd:':
                trim_after_first_colon: true
    UIPress: {} # DONE
    UIPressesEvent: # DONE
        methods:
            '-pressesForGestureRecognizer:':
                name: getPressesForGestureRecognizer
    UIPreviewAction: # DONE
        properties:
            'handler':
                type: '@Block VoidBlock2<UIPreviewActionItem, UIViewController>'
        methods:
            '+actionWithTitle:style:handler:':
                name: create
                constructor: true
                parameters:
                    handler:
                        type: '@Block VoidBlock2<UIPreviewActionItem, UIViewController>'
    UIPreviewActionGroup: # DONE
        methods:
            '+actionGroupWithTitle:style:actions:':
                name: create
                constructor: true
    UIPreviewInteraction: # DONE
        methods:
            '-init.*':
                name: init
            '-locationInCoordinateSpace:':
                name: getLocationInCoordinateSpace
    UIPrinter: # DONE
        methods:
            '-contactPrinter:':
                trim_after_first_colon: true
            '+printerWithURL:':
                name: create
                constructor: true
    UIPrintFormatter: # DONE
        methods:
            '-drawInRect:forPageAtIndex:':
                name: draw
            '-rectForPageAtIndex:':
                name: getRectForPage
    UIPrintInfo: # DONE
        properties:
            'dictionaryRepresentation':
                getter: toDictionary
        methods:
            '-init.*':
                name: init
            '+printInfo':
                exclude: true
            '+printInfoWithDictionary:':
                name: create
                constructor: true
    UIPrintInteractionController: # DONE
        properties:
            'printableUTIs':
                type: Set<String>
                marshaler: NSSet.AsStringSetMarshaler
        methods:
            '+canPrintData:':
                name: canPrint
            '+canPrintURL:':
                name: canPrint
            '-dismissAnimated:':
                name: dismiss
            '-presentAnimated:completionHandler:':
                name: present
                parameters:
                    completion:
                        type: '@Block VoidBlock3<UIPrintInteractionController, Boolean, NSError>'
            '-presentFromRect:inView:animated:completionHandler:':
                name: presentFromRectInView
                parameters:
                    completion:
                        type: '@Block VoidBlock3<UIPrintInteractionController, Boolean, NSError>'
            '-presentFromBarButtonItem:animated:completionHandler:':
                name: presentFromBarButtonItem
                parameters:
                    completion:
                        type: '@Block VoidBlock3<UIPrintInteractionController, Boolean, NSError>'
            '-printToPrinter:completionHandler:':
                name: print
                parameters:
                    completion:
                        type: '@Block VoidBlock3<UIPrintInteractionController, Boolean, NSError>'
    UIPrintPageRenderer: # DONE
        properties:
            'printFormatters':
                type: NSArray<UIPrintFormatter>
        methods:
            '-drawContentForPageAtIndex:inRect:':
                name: drawContent
            '-drawFooterForPageAtIndex:inRect:':
                name: drawFooter
            '-drawHeaderForPageAtIndex:inRect:':
                name: drawHeader
            '-drawPageAtIndex:inRect:':
                name: drawPage
            '-drawPrintFormatter:forPageAtIndex:':
                name: drawPrintFormatter
            '-printFormattersForPageAtIndex:':
                name: getPrintFormatters
                return_type: NSArray<UIPrintFormatter>
            '-addPrintFormatter:startingAtPageAtIndex:':
                trim_after_first_colon: true
            '-prepareForDrawingPages:':
                trim_after_first_colon: true
    UIPrintPaper: # DONE
        methods:
            '+bestPaperForPageSize:withPapersFromArray:':
                name: getBestPaperForPageSize
                parameters:
                    paperList:
                        type: NSArray<UIPrintPaper>
            '-printRect':
                property: true
    UIPrinterPickerController: # DONE
        methods:
            '-presentAnimated:completionHandler:':
                trim_after_first_colon: true
                parameters:
                    completion:
                        type: '@Block VoidBlock3<UIPrinterPickerController, Boolean, NSError>'
            '-presentFromRect:inView:animated:completionHandler:':
                name: presentFromRectInView
                parameters:
                    completion:
                        type: '@Block VoidBlock3<UIPrinterPickerController, Boolean, NSError>'
            '-presentFromBarButtonItem:animated:completionHandler:':
                trim_after_first_colon: true
                parameters:
                    completion:
                        type: '@Block VoidBlock3<UIPrinterPickerController, Boolean, NSError>'
            '-dismissAnimated:':
                trim_after_first_colon: true
            '+printerPickerControllerWithInitiallySelectedPrinter:':
                name: create
                constructor: true
    UIProgressView: # DONE
        methods:
            '-setProgress:animated:':
                trim_after_first_colon: true
            '-initWithProgressViewStyle:':
                name: init
    UIPushBehavior: # DONE
        properties:
            'items':
                type: List<UIDynamicItem>
        methods:
            '-initWithItems:mode:':
                name: init
                parameters:
                    items:
                        type: List<UIDynamicItem>
            '-addItem:':
                trim_after_first_colon: true
            '-removeItem:':
                trim_after_first_colon: true
            '-targetOffsetFromCenterForItem:':
                name: getTargetOffset
            '-setTargetOffsetFromCenter:forItem:':
                name: setTargetOffset
            '-setAngle:magnitude:':
                name: setAngleAndMagnitude
    UIReferenceLibraryViewController: # DONE
        methods:
            '-initWithTerm:':
                name: init
            '+dictionaryHasDefinitionForTerm:':
                trim_after_first_colon: true
    UIRefreshControl: {} # DONE
    UIRegion: # DONE
        methods:
            '-init.*':
                name: init
            '-inverseRegion':
                name: inverse
            '-regionByUnionWithRegion:':
                name: union
            '-regionByDifferenceFromRegion:':
                name: difference
            '-regionByIntersectionWithRegion:':
                name: intersection
            '-containsPoint:':
                trim_after_first_colon: true
    UIResponder: # DONE
        skip_handle_constructor: false
        properties:
            'keyCommands':
                type: NSArray<UIKeyCommand>
        methods:
            '-remoteControlReceivedWithEvent:':
                name: remoteControlReceived
            '-(touches.*):withEvent:':
                name: '#{g[0]}'
                parameters:
                    touches:
                        type: NSSet<UITouch>
            '-(motion.*):withEvent:':
                name: '#{g[0]}'
                parameters:
                    touches:
                        type: NSSet<UITouch>
            '+clearTextInputContextIdentifier:':
                trim_after_first_colon: true
            '-canPerformAction:withSender:':
                trim_after_first_colon: true
            '-targetForAction:withSender:':
                name: getActionTarget
            '-updateUserActivityState:':
                trim_after_first_colon: true
            '-restoreUserActivityState:':
                trim_after_first_colon: true
            '-touchesEstimatedPropertiesUpdated:':
                trim_after_first_colon: true
            '-pressesBegan:withEvent:':
                trim_after_first_colon: true
            '-pressesChanged:withEvent:':
                trim_after_first_colon: true
            '-pressesEnded:withEvent:':
                trim_after_first_colon: true
            '-pressesCancelled:withEvent:':
                trim_after_first_colon: true
            '-buildMenuWithBuilder:':
                name: buildMenu
    UIRotationGestureRecognizer: {} # DONE
    UIScreen: # DONE
        methods:
            '-displayLinkWithTarget:selector:':
                name: getDisplayLink
                annotations: ['@WeaklyLinked']
            '-snapshotViewAfterScreenUpdates:':
                name: snapshotView
    UIScreenEdgePanGestureRecognizer: {} # DONE
    UIScreenMode: {} # DONE
    UIScrollView: # DONE
        methods:
            '-setContentOffset:animated:':
                trim_after_first_colon: true
            '-scrollRectToVisible:animated:':
                trim_after_first_colon: true
            '-touchesShouldBegin:withEvent:inContentView:':
                trim_after_first_colon: true
                parameters:
                    touches:
                        type: NSSet<UITouch>
            '-touchesShouldCancelInContentView:':
                trim_after_first_colon: true
            '-setZoomScale:animated:':
                trim_after_first_colon: true
            '-zoomToRect:animated:':
                trim_after_first_colon: true
    UISearchBar: # DONE
        properties:
            'scopeButtonTitles':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
        methods:
            '-imageForSearchBarIcon:state:':
                name: getImageForSearchBarIcon
            '-positionAdjustmentForSearchBarIcon:':
                name: getPositionAdjustmentForSearchBarIcon
            '-scopeBarButtonBackgroundImageForState:':
                name: getScopeBarButtonBackgroundImage
            '-scopeBarButtonDividerImageForLeftSegmentState:rightSegmentState:':
                name: getScopeBarButtonDividerImage
            '-scopeBarButtonTitleTextAttributesForState:':
                name: getScopeBarButtonTitleTextAttributesDictionary
                return_type: 'NSDictionary<NSString, ?>'
            '-searchFieldBackgroundImageForState:':
                name: getSearchFieldBackgroundImage
            '-setImage:forSearchBarIcon:state:':
                name: setImageForSearchBarIcon
            '-setPositionAdjustment:forSearchBarIcon:':
                name: setPositionAdjustmentForSearchBarIcon
            '-setShowsCancelButton:animated:':
                trim_after_first_colon: true 
            '-setBackgroundImage:forBarPosition:barMetrics:':
                trim_after_first_colon: true 
            '-backgroundImageForBarPosition:barMetrics:':
                name: getBackgroundImage
            '-setSearchFieldBackgroundImage:forState:':
                trim_after_first_colon: true 
            '-setScopeBarButtonBackgroundImage:forState:':
                trim_after_first_colon: true 
            '-setScopeBarButtonDividerImage:forLeftSegmentState:rightSegmentState:':
                trim_after_first_colon: true 
            '-setScopeBarButtonTitleTextAttributes:forState:':
                name: setScopeBarButtonTitleTextAttributesDictionary
                parameters:
                    attributes:
                        type: 'NSDictionary<NSString, ?>'
            '-setShowsScopeBar:animated:':
                name: setShowsScopeBar
    UISearchContainerViewController: # DONE
        methods:
            '-initWithSearchController:':
                name: init
    UISearchController: # DONE
        methods:
            '-initWithSearchResultsController:':
                name: init
    UISearchDisplayController: # DONE
        methods:
            '-initWithSearchBar:contentsController:':
                name: init
            '-setActive:animated:':
                name: setActive
    UISegmentedControl: # DONE
        properties:
            'segmentedControlStyle':
                name: controlStyle
            'selectedSegmentIndex':
                name: selectedSegment
        methods:
            '-initWithItems:':
                name: init
            '-backgroundImageForState:barMetrics:':
                name: getBackgroundImage
            '-contentOffsetForSegmentAtIndex:':
                name: getContentOffset
            '-contentPositionAdjustmentForSegmentType:barMetrics:':
                name: getContentPositionAdjustment
            '-dividerImageForLeftSegmentState:rightSegmentState:barMetrics:':
                name: getDividerImage
            '-imageForSegmentAtIndex:':
                name: getImage
            '-insertSegmentWithImage:atIndex:animated:':
                name: insertSegment
            '-insertSegmentWithTitle:atIndex:animated:':
                name: insertSegment
            '-isEnabledForSegmentAtIndex:':
                name: isEnabled
            '-widthForSegmentAtIndex:':
                name: getWidth
            '-titleForSegmentAtIndex:':
                name: getTitle
            '-titleTextAttributesForState:':
                name: getTitleTextAttributesDictionary
                return_type: 'NSDictionary<NSString, ?>'
            '-removeSegmentAtIndex:animated:':
                name: removeSegment
            '-setTitle:forSegmentAtIndex:':
                name: setTitle
            '-setImage:forSegmentAtIndex:':
                name: setImage
            '-setWidth:forSegmentAtIndex:':
                name: setWidth
            '-setContentOffset:forSegmentAtIndex:':
                name: setContentOffset
            '-setEnabled:forSegmentAtIndex:':
                name: setEnabled
            '-setBackgroundImage:forState:barMetrics:':
                name: setBackgroundImage
            '-setDividerImage:forLeftSegmentState:rightSegmentState:barMetrics:':
                name: setDividerImage
            '-setTitleTextAttributes:forState:':
                name: setTitleTextAttributesDictionary
                parameters:
                    attributes:
                        type: 'NSDictionary<NSString, ?>'
            '-setContentPositionAdjustment:forSegmentType:barMetrics:':
                name: setContentPositionAdjustment
            '-initWithFrame:actions:':
                name: init
            '-insertSegmentWithAction:atIndex:animated:':
                name: insertSegment
            '-setAction:forSegmentAtIndex:':
                name: setAction
    UISelectionFeedbackGenerator: {} # DONE
    UISimpleTextPrintFormatter: # DONE
        methods:
            '-initWithText:':
                name: init
            '-initWithAttributedText:':
                name: init
    UISlider: # DONE
        methods:
            '-maximumTrackImageForState:':
                name: getMaximumTrackImage
            '-maximumValueImageRectForBounds:':
                name: getMaximumValueImageRect
            '-minimumTrackImageForState:':
                name: getMinimumTrackImage
            '-minimumValueImageRectForBounds:':
                name: getMinimumValueImageRect
            '-thumbImageForState:':
                name: getThumbImage
            '-thumbRectForBounds:trackRect:value:':
                name: getThumbRect
            '-trackRectForBounds:':
                name: getTrackRect
            '-setValue:animated:':
                trim_after_first_colon: true
            '-setThumbImage:forState:':
                trim_after_first_colon: true
            '-setMinimumTrackImage:forState:':
                trim_after_first_colon: true
            '-setMaximumTrackImage:forState:':
                trim_after_first_colon: true
    UISnapBehavior: # DONE
        methods:
            '-initWithItem:snapToPoint:':
                name: init
    UISplitViewController: # DONE
        methods:
            '-showViewController:sender:':
                trim_after_first_colon: true
            '-showDetailViewController:sender:':
                trim_after_first_colon: true
            '-initWithStyle:':
                name: init
            '-setViewController:forColumn:':
                name: setViewController
    UISpringTimingParameters: # DONE
        methods:
            '-initWithDampingRatio:initialVelocity:':
                name: init
            '-initWithMass:stiffness:damping:initialVelocity:':
                name: init
            '-initWithDampingRatio:':
                name: init
    UIStackView: # DONE
        properties:
            'arrangedSubviews':
                type: NSArray<UIView>
        methods:
            '-initWithArrangedSubviews:':
                name: init
            '-addArrangedSubview:':
                trim_after_first_colon: true
            '-removeArrangedSubview:':
                trim_after_first_colon: true
            '-insertArrangedSubview:atIndex:':
                trim_after_first_colon: true
            '-setCustomSpacing:afterView:':
                trim_after_first_colon: true
    UIStepper: # DONE
        methods:
            '-backgroundImageForState:':
                name: getBackgroundImage
            '-decrementImageForState:':
                name: getDecrementImage
            '-dividerImageForLeftSegmentState:rightSegmentState:':
                name: getDividerImage
                parameters:
                    0: {name: leftState}
                    1: {name: rightState}
            '-incrementImageForState:':
                name: getIncrementImage
            '-setBackgroundImage:forState:':
                name: setBackgroundImage
            '-setDividerImage:forLeftSegmentState:rightSegmentState:':
                name: setDividerImage
            '-setIncrementImage:forState:':
                name: setIncrementImage
            '-setDecrementImage:forState:':
                name: setDecrementImage
    UIStoryboard: # DONE
        methods:
            '+storyboardWithName:bundle:':
                name: create
                constructor: true
            '-instantiateInitialViewController':
            '-instantiateViewControllerWithIdentifier:':
                name: instantiateViewController
            '-instantiateInitialViewControllerWithCreator:':
                name: instantiateViewController
            '-instantiateViewControllerWithIdentifier:creator:':
                name: instantiateViewController
    UIStoryboardPopoverSegue: {} # DONE
    UIStoryboardSegue: # DONE
        properties:
            'sourceViewController':
                type: UIViewController
            'destinationViewController':
                type: UIViewController
        methods:
            '-initWithIdentifier:source:destination:':
                name: init
            '+segueWithIdentifier:source:destination:performHandler:':
                name: create
                constructor: true
    UIStoryboardUnwindSegueSource: {} # DONE
    UISwipeGestureRecognizer: {} # DONE
    UISwitch: # DONE
        methods:
            '-setOn:animated:':
                trim_after_first_colon: true
    UITabBar: # DONE
        properties:
            'items':
                type: NSArray<UITabBarItem>
        methods:
            '-beginCustomizingItems:':
                name: beginCustomizing
                parameters:
                    items:
                        type: NSArray<UITabBarItem>
            '-endCustomizingAnimated:':
                name: endCustomizing
            '-setItems:animated:':
                trim_after_first_colon: true
                parameters:
                    items:
                        type: NSArray<UITabBarItem>
    UITabBarController: # DONE
        properties:
            'viewControllers':
                type: NSArray<UIViewController>
            'customizableViewControllers':
                type: NSArray<UIViewController>
        methods:
            '-setViewControllers:animated:':
                trim_after_first_colon: true
                parameters:
                    viewControllers:
                        type: NSArray<UIViewController>
    UITabBarItem: # DONE
        methods:
            '-initWithTitle:image:tag:':
                name: init
            '-initWithTitle:image:selectedImage:':
                name: init
            '-initWithTabBarSystemItem:tag:':
                name: init
            '-finishedSelectedImage':
                name: getFinishedSelectedImage
            '-finishedUnselectedImage':
                name: getFinishedUnselectedImage
            '-setFinishedSelectedImage:withFinishedUnselectedImage:':
                name: setFinishedImages
            '-titlePositionAdjustment':
                name: getTitlePositionAdjustment
            '-setBadgeTextAttributes:forState:':
                trim_after_first_colon: true
                parameters:
                    textAttributes:
                        type: 'NSDictionary<NSString, ?>'
            '-badgeTextAttributesForState:':
                name: getBadgeTextAttributes
                return_type: 'NSDictionary<NSString, ?>'
    UITableView: # DONE
        properties:
            'indexPathsForVisibleRows':
                type: NSArray<NSIndexPath>
            'indexPathsForSelectedRows':
                type: NSArray<NSIndexPath>
            'visibleCells':
                type: NSArray<UITableViewCell>
            'cellLayoutMarginsFollowReadableWidth':
                getter: cellLayoutMarginsFollowReadableWidth
        methods:
            '-initWithFrame:style:':
                name: init
            '-cellForRowAtIndexPath:':
                name: getCellForRow
            '-deleteRowsAtIndexPaths:withRowAnimation:':
                name: deleteRows
                parameters:
                    indexPaths:
                        type: NSArray<NSIndexPath>
            '-dequeueReusableCellWithIdentifier:':
                name: dequeueReusableCell
                return_type: UITableViewCell
            '-dequeueReusableCellWithIdentifier:forIndexPath:':
                name: dequeueReusableCell
                return_type: UITableViewCell
            '-dequeueReusableHeaderFooterViewWithIdentifier:':
                name: dequeueReusableHeaderFooterView   
                return_type: UITableViewHeaderFooterView
            '-deselectRowAtIndexPath:animated:':
                name: deselectRow
            '-indexPathForCell:':
                name: getIndexPathForCell
            '-indexPathForRowAtPoint:':
                name: getIndexPathForRow
            '-indexPathsForRowsInRect:':
                name: getIndexPathsForRowsInRect
                return_type: NSArray<NSIndexPath>
            '-insertRowsAtIndexPaths:withRowAnimation:':
                name: insertRows
                parameters:
                    indexPaths:
                        type: NSArray<NSIndexPath>
            '-moveRowAtIndexPath:toIndexPath:':
                name: moveRow
            '-numberOfRowsInSection:':
                name: getNumberOfRowsInSection
            '-numberOfSections':
                name: getNumberOfSections
            '-rectForFooterInSection:':
                name: getRectForFooterInSection
            '-rectForHeaderInSection:':
                name: getRectForHeaderInSection
            '-rectForRowAtIndexPath:':
                name: getRectForRow
            '-rectForSection:':
                name: getRectForSection
            '-registerNib:forCellReuseIdentifier:':
                name: registerReusableCellNib
            '-registerClass:forCellReuseIdentifier:':
                name: registerReusableCellClass
                parameters:
                    cellClass:
                        type: 'Class<? extends UITableViewCell>'
            '-reloadRowsAtIndexPaths:withRowAnimation:':
                name: reloadRows
                parameters:
                    indexPaths:
                        type: NSArray<NSIndexPath>
            '-scrollToNearestSelectedRowAtScrollPosition:animated:':
                name: scrollToNearestSelectedRow
            '-scrollToRowAtIndexPath:atScrollPosition:animated:':
                name: scrollToRow
            '-selectRowAtIndexPath:animated:scrollPosition:':
                name: selectRow
            '-registerClass:forHeaderFooterViewReuseIdentifier:':
                name: registerReusableHeaderFooterViewClass
                parameters:
                    aClass:
                        type: 'Class<? extends UITableViewHeaderFooterView>'
            '-registerNib:forHeaderFooterViewReuseIdentifier:':
                name: registerReusableHeaderFooterViewNib
            '-footerViewForSection:':
                name: getFooterViewForSection
            '-headerViewForSection:':
                name: getHeaderViewForSection
            '-insertSections:withRowAnimation:':
                name: insertSections
            '-deleteSections:withRowAnimation:':
                name: deleteSections
            '-reloadSections:withRowAnimation:':
                name: reloadSections
            '-moveSection:toSection:':
                name: moveSection
            '-setEditing:animated:':
                name: setEditing
            '-performBatchUpdates:completion:':
                trim_after_first_colon: true
    UITableViewCell: # DONE
        methods:
            '-initWithStyle:reuseIdentifier:':
                name: init
            '-setSelected:animated:':
                trim_after_first_colon: true
            '-setHighlighted:animated:':
                trim_after_first_colon: true
            '-setEditing:animated:':
                trim_after_first_colon: true
            '-willTransitionToState:':
                trim_after_first_colon: true
            '-didTransitionToState:':
                trim_after_first_colon: true
    UITableViewController: # DONE
        methods:
            '-initWithStyle:':
                name: init
    UITableViewFocusUpdateContext: {} # DONE
    UITableViewHeaderFooterView: # DONE
        methods:
            '-initWithReuseIdentifier:':
                name: init
    UITableViewRowAction: # DONE
        methods:
            '+rowActionWithStyle:title:handler:':
                name: create
                constructor: true
    UITapGestureRecognizer: {} # DONE
    UITextChecker: # DONE
        properties:
            '(ignoredWords|availableLanguages)':
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
        methods:
            '-rangeOfMisspelledWordInString:range:startingAt:wrap:language:':
                name: getRangeOfMisspelledWordInString
            '-guessesForWordRange:inString:language:':
                name: getGuessesForWord
                return_type: List<String>
                return_marshaler: NSArray.AsStringListMarshaler
            '-completionsForPartialWordRange:inString:language:':
                name: getCompletionsForPartialWord
                return_type: List<String>
                return_marshaler: NSArray.AsStringListMarshaler
            '-ignoreWord:':
                trim_after_first_colon: true
            '-setIgnoredWords:':
                trim_after_first_colon: true
                parameters:
                    words:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '+learnWord:':
                trim_after_first_colon: true
            '+hasLearnedWord:':
                trim_after_first_colon: true
            '+unlearnWord:':
                trim_after_first_colon: true
    UITextField: # DONE
        properties:
            'defaultTextAttributes':
                name: defaultTextAttributesDictionary
                type: 'NSDictionary<NSString, ?>'
            'typingAttributes':
                name: typingAttributesDictionary
                type: 'NSDictionary<NSString, ?>'
        methods:
            '-borderRectForBounds:':
                name: getBorderRect
            '-textRectForBounds:':
                name: getTextRect
            '-placeholderRectForBounds:':
                name: getPlaceholderRect
            '-editingRectForBounds:':
                name: getEditingRect
            '-clearButtonRectForBounds:':
                name: getClearButtonRect
            '-leftViewRectForBounds:':
                name: getLeftViewRect
            '-rightViewRectForBounds:':
                name: getRightViewRect
            '-drawTextInRect:':
                name: drawText
            '-drawPlaceholderInRect:':
                name: drawPlaceholder
    UITextInputMode: # DONE
        methods:
            '+currentInputMode':
                name: getCurrentInputMode
    UITextInputAssistantItem: # DONE
        properties:
            '(leadingBarButtonGroups|trailingBarButtonGroups)':
                type: NSArray<UIBarButtonItemGroup>
    UITextInputStringTokenizer: # DONE
        methods: 
            '-initWithTextInput:':
                name: init
                parameters:
                    textInput:
                        type: UITextInput
    UITextPosition: {} # DONE
    UITextRange: {} # DONE
    UITextSelectionRect: # DONE
        properties:
            'isVertical':
                name: vertical
    UITextView: # DONE
        properties:
            'linkTextAttributes':
                name: linkTextAttributesDictionary
                type: 'NSDictionary<NSString, ?>'
            'typingAttributes':
                name: typingAttributesDictionary
                type: 'NSDictionary<NSString, ?>'
        methods:
            '-initWithFrame:textContainer:':
                name: init
            '-scrollRangeToVisible:':
                trim_after_first_colon: true
    UIToolbar: # DONE
        properties:
            'items':
                type: NSArray<UIBarButtonItem>
        methods:
            '-backgroundImageForToolbarPosition:barMetrics:':
                name: getBackgroundImage
            '-shadowImageForToolbarPosition:':
                name: getShadowImage
            '-setItems:animated:':
                trim_after_first_colon: true
                parameters:
                    items:
                        type: NSArray<UIBarButtonItem>
            '-setBackgroundImage:forToolbarPosition:barMetrics:':
                trim_after_first_colon: true
            '-setShadowImage:forToolbarPosition:':
                trim_after_first_colon: true
    UITouch: # DONE
        properties:
            'gestureRecognizers':
                type: NSArray<UIGestureRecognizer>
        methods:
            '-locationInView:':
                name: getLocationInView
            '-previousLocationInView:':
                name: getPreviousLocationInView
            '-preciseLocationInView:':
                name: getPreciseLocationInView
            '-precisePreviousLocationInView:':
                name: getPrecisePreviousLocationInView
            '-azimuthAngleInView:':
                name: getAzimuthAngleInView
            '-azimuthUnitVectorInView:':
                name: getAzimuthUnitVectorInView
    UITraitCollection: # DONE
        methods:
            '-containsTraitsInCollection:':
                name: containsTraits
            '+traitCollectionWithTraitsFromCollections:':
                name: createWithTraits
                parameters:
                    traitCollections:
                        type: NSArray<UITraitCollection>
            '+traitCollectionWithUserInterfaceIdiom:':
                name: createWithUserInterfaceIdiom
            '+traitCollectionWithDisplayScale:':
                name: createWithDisplayScale
            '+traitCollectionWithHorizontalSizeClass:':
                name: createWithHorizontalSizeClass
            '+traitCollectionWithVerticalSizeClass:':
                name: createWithVerticalSizeClass
            '+traitCollectionWithForceTouchCapability:':
                name: create
                constructor: true
            '+traitCollectionWithUserInterfaceStyle:':
                name: create
                constructor: true
            '+traitCollectionWithLayoutDirection:':
                name: create
                constructor: true
            '+traitCollectionWithPreferredContentSizeCategory:':
                name: create
                constructor: true
                parameters:
                    preferredContentSizeCategory:
                        type: UIContentSizeCategory
            '+traitCollectionWithDisplayGamut:':
                name: create
                constructor: true
            '+traitCollectionWithAccessibilityContrast:':
                name: create
                constructor: true
            '+traitCollectionWithUserInterfaceLevel:':
                name: create
                constructor: true
            '+traitCollectionWithLegibilityWeight:':
                name: create
                constructor: true
            '+traitCollectionWithActiveAppearance:':
                name: create
                constructor: true
    UIMutableApplicationShortcutItem: # DONE
        skip_def_constructor: true
    UIMutableUserNotificationAction: {} # DONE
    UIMutableUserNotificationCategory: # DONE
        methods:
            '-setActions:forContext:':
                trim_after_first_colon: true
                parameters:
                    actions:
                        type: NSArray<UIUserNotificationAction>
    UIUserNotificationAction: {} # DONE
    UIUserNotificationCategory: # DONE
        methods:
            '-actionsForContext:':
                name: getActions
                return_type: NSArray<UIUserNotificationAction>
    UIUserNotificationSettings: # DONE
        properties:
            'categories':
                type: NSSet<UIUserNotificationCategory>
        methods:
            '+settingsForTypes:categories:':
                name: create
                constructor: true
                parameters:
                    categories:
                        type: NSSet<UIUserNotificationCategory>
    UIVideoEditorController: # DONE
        properties:
            'delegate':
                type: UIVideoEditorControllerDelegate
        methods:
            '+canEditVideoAtPath:':
                name: canEditVideo
                visibility: protected
    UIVibrancyEffect: # DONE
        methods:
            '+effectForBlurEffect:':
                name: create
                constructor: true
            '+effectForBlurEffect:style:':
                name: create
                constructor: true
    UIView: # DONE
        skip_handle_constructor: false
        properties:
            'subviews':
                type: NSArray<UIView>
            'gestureRecognizers':
                type: NSArray<UIGestureRecognizer>
            'motionEffects':
                type: NSArray<UIMotionEffect>
            'layer':
                annotations: ['@WeaklyLinked']
            'constraints':
                type: NSArray<NSLayoutConstraint>
            'layoutGuides':
                type: NSArray<UILayoutGuide>
            'layerClass':
                type: 'Class<? extends CALayer>'
                annotations: ['@WeaklyLinked']
        methods:
            '-initWithFrame:':
                name: init
            '+animateWithDuration:animations:':
                name: animate
            '+animateWithDuration:animations:completion:':
                name: animate
            '+animateWithDuration:delay:options:animations:completion:':
                name: animate
            '+animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:':
                name: animate
            '+transitionFromView:toView:duration:options:completion:':
                name: transition
            '+transitionWithView:duration:options:animations:completion:':
                name: transition
            '+performSystemAnimation:onViews:options:animations:completion:':
                trim_after_first_colon: true
                parameters:
                    views:
                        type: NSArray<UIView>
            '+animateKeyframesWithDuration:delay:options:animations:completion:':
                name: animateKeyframes
            '+addKeyframeWithRelativeStartTime:relativeDuration:animations:':
                name: addKeyframe
            '+userInterfaceLayoutDirectionForSemanticContentAttribute.*':
                name: getUserInterfaceLayoutDirection
            '+beginAnimations:context:':
                trim_after_first_colon: true
            '+setAnimationTransition:forView:cache:':
                trim_after_first_colon: true
            '-convertPoint:fromView:':
                name: convertPointFromView
            '-convertPoint:toView:':
                name: convertPointToView
            '-convertRect:fromView:':
                name: convertRectFromView
            '-convertRect:toView:':
                name: convertRectToView
            '-insertSubview:aboveSubview:':
                name: insertSubviewAbove
            '-insertSubview:belowSubview:':
                name: insertSubviewBelow
            '-isDescendantOfView:':
                name: isDescendantOf
            '-drawRect:':
                name: draw
            '-exchangeSubviewAtIndex:withSubviewAtIndex:':
                name: exchangeSubview
            '-viewPrintFormatter':
                name: getViewPrintFormatter
            '-setNeedsDisplayInRect:':
                name: setNeedsDisplay
            '-viewWithTag:':
                name: getViewWithTag
            '-sizeThatFits:':
                name: getSizeThatFits
            '-sizeToFit':
                name: sizeToFit
# Renamed since it conflicts with the animationDuration property in UIImageView. 
# The static method in UIView should not be used anymore so we rename it rather than the property in UIImageView.                
            '+setAnimationDuration:':
                name: setAnimationDurationInSeconds
            '-contentCompressionResistancePriorityForAxis:':
                name: getContentCompressionResistancePriority
            '-contentHuggingPriorityForAxis:':
                name: getContentHuggingPriority
            '-alignmentRectForFrame:':
                name: getAlignmentRectForFrame
            '-constraints':
                name: getConstraints
                return_type: NSArray<NSLayoutConstraint>
            '-constraintsAffectingLayoutForAxis:':
                name: getConstraintsAffectingLayout
                return_type: NSArray<NSLayoutConstraint>
            '-frameForAlignmentRect:':
                name: getFrameForAlignmentRect
            '-systemLayoutSizeFittingSize:':
                name: getSystemLayoutSizeFittingSize
                parameters:
                    targetSize:
                        type: UILayoutFittingSize
            '-translatesAutoresizingMaskIntoConstraints':
                name: translatesAutoresizingMaskIntoConstraints
            '-viewForBaselineLayout':
                name: getViewForBaselineLayout
            '-hitTest:withEvent:':
                trim_after_first_colon: true
            '-pointInside:withEvent:':
                name: isPointInside
            '-insertSubview:atIndex:':
                trim_after_first_colon: true
            '-addSubview:':
                trim_after_first_colon: true
            '-bringSubviewToFront:':
                trim_after_first_colon: true
            '-sendSubviewToBack:':
                trim_after_first_colon: true
            '-didAddSubview:':
                trim_after_first_colon: true
            '-willRemoveSubview:':
                trim_after_first_colon: true
            '-willMoveToSuperview:':
                trim_after_first_colon: true
            '-willMoveToWindow:':
                trim_after_first_colon: true
            '-addGestureRecognizer:':
                trim_after_first_colon: true
            '-removeGestureRecognizer:':
                trim_after_first_colon: true
            '-gestureRecognizerShouldBegin:':
                trim_after_first_colon: true
            '-addMotionEffect:':
                trim_after_first_colon: true
            '-removeMotionEffect:':
                trim_after_first_colon: true
            '-addConstraint:':
                trim_after_first_colon: true
            '-addConstraints:':
                trim_after_first_colon: true
                parameters:
                    constraints:
                        type: NSArray<NSLayoutConstraint>
            '-removeConstraint:':
                trim_after_first_colon: true
            '-removeConstraints:':
                trim_after_first_colon: true
                parameters:
                    constraints:
                        type: NSArray<NSLayoutConstraint>
            '-setContentHuggingPriority:forAxis:':
                trim_after_first_colon: true
            '-setContentCompressionResistancePriority:forAxis:':
                trim_after_first_colon: true
            '-encodeRestorableStateWithCoder:':
                name: encodeRestorableState
            '-decodeRestorableStateWithCoder:':
                name: decodeRestorableState
            '-snapshotViewAfterScreenUpdates:':
                name: getSnapshot
            '-resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:':
                name: getResizableSnapshot
            '-drawViewHierarchyInRect:afterScreenUpdates:':
                name: drawViewHierarchy
            '-endEditing:':
                trim_after_first_colon: true
            '-drawRect:forViewPrintFormatter:':
                name: draw
            '-systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:':
                name: getSystemLayoutSizeFittingSize
            '-addLayoutGuide:':
                trim_after_first_colon: true
            '-removeLayoutGuide:':
                trim_after_first_colon: true
            '+modifyAnimationsWithRepeatCount:autoreverses:animations:':
                name: modifyAnimations
            '+performWithoutAnimation:':
                name: performWithoutAnimation
    UIViewController: # DONE
        skip_handle_constructor: false
        properties:
            'restorationClass':
                type: ObjCClass
            'childViewControllers':
                type: NSArray<UIViewController>
            'toolbarItems':
                type: NSArray<UIBarButtonItem>
            'modalPresentationCapturesStatusBarAppearance':
                getter: modalPresentationCapturesStatusBarAppearance
            'extendedLayoutIncludesOpaqueBars':
                getter: extendedLayoutIncludesOpaqueBars
            'previewActionItems':
                type: List<UIPreviewActionItem>
                marshaler: NSArray.AsListMarshaler
        methods:
            '-initWithNibName:bundle:':
                name: init
            '-rotatingFooterView':
                name: getRotatingFooterView
            '-rotatingHeaderView':
                name: getRotatingHeaderView
            '-automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers':
                name: isAutomaticallyForwardAppearanceAndRotationMethodsToChildViewControllers
            '-didRotateFromInterfaceOrientation:':
                name: didRotate
            '-dismissModalViewControllerAnimated:':
                name: dismissModalViewController
            '-dismissViewControllerAnimated:completion:':
                name: dismissViewController
                parameters:
                    flag:
                        name: animated
            '-performSegueWithIdentifier:sender:':
                name: performSegue
            '-transitionFromViewController:toViewController:duration:options:animations:completion:':
                name: transition
            '-willAnimateRotationToInterfaceOrientation:duration:':
                name: willAnimateRotation
            '-willRotateToInterfaceOrientation:duration:':
                name: willRotate
            '-willMoveToParentViewController:':
                name: willMoveToParentViewController
            '-decodeRestorableStateWithCoder:':
                name: decodeRestorableState
            '-encodeRestorableStateWithCoder:':
                name: encodeRestorableState
            '-segueForUnwindingToViewController:fromViewController:identifier:':
                name: getSegueForUnwinding
            '-shouldPerformSegueWithIdentifier:sender:':
                name: shouldPerformSegue
            '-supportedInterfaceOrientations':
                name: getSupportedInterfaceOrientations
                return_type: UIInterfaceOrientationMask
            '-viewControllerForUnwindSegueAction:fromViewController:withSender:':
                name: getViewControllerForUnwind
            '-addChildViewController:':
                trim_after_first_colon: true
            '-beginAppearanceTransition:animated:':
                trim_after_first_colon: true
            '-canPerformUnwindSegueAction:fromViewController:withSender:':
                name: canPerformUnwind
            '-didAnimateFirstHalfOfRotationToInterfaceOrientation:':
                name: didAnimateFirstHalfOfRotation
            '-didMoveToParentViewController:':
                trim_after_first_colon: true
            '-prepareForSegue:sender:':
                trim_after_first_colon: true
            '-presentModalViewController:animated:':
                trim_after_first_colon: true
            '-presentViewController:animated:completion:':
                trim_after_first_colon: true
                parameters:
                    flag:
                        name: animated
            '-setEditing:animated:':
                trim_after_first_colon: true
            '-setToolbarItems:animated:':
                trim_after_first_colon: true
                parameters:
                    toolbarItems:
                        type: NSArray<UIBarButtonItem>
            '-shouldAutorotateToInterfaceOrientation:':
                name: shouldAutorotate
            '-viewDidAppear:':
                trim_after_first_colon: true
            '-viewDidDisappear:':
                trim_after_first_colon: true
            '-viewWillAppear:':
                trim_after_first_colon: true
            '-viewWillDisappear:':
                trim_after_first_colon: true
            '-willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:':
                name: willAnimateFirstHalfOfRotation
            '-willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:':
                name: willAnimateSecondHalfOfRotation
            '-targetViewControllerForAction:sender:':
                name: getTargetViewControllerForAction
            '-showViewController:sender:':
                trim_after_first_colon: true
            '-showDetailViewController:sender:':
                trim_after_first_colon: true
            '-setOverrideTraitCollection:forChildViewController:':
                name: setOverrideTraitCollection
            '-overrideTraitCollectionForChildViewController:':
                name: getOverrideTraitCollection
            '-collapseSecondaryViewController:forSplitViewController:':
                name: collapseSecondaryViewController
            '-separateSecondaryViewControllerForSplitViewController:':
                name: separateSecondaryViewController
            '-addKeyCommand:':
                trim_after_first_colon: true
            '-removeKeyCommand:':
                trim_after_first_colon: true
            '-allowedChildViewControllersForUnwindingFromSource:':
                name: getAllowedChildViewControllersForUnwinding
                return_type: NSArray<UIViewController>
            '-childViewControllerContainingSegueSource:':
                name: getChildViewControllerContainingSegueSource
            '-unwindForSegue:towardsViewController:':
                name: unwind
            '-registerForPreviewingWithDelegate:sourceView:':
                name: registerForPreviewing
            '-unregisterForPreviewingWithContext:':
                name: unregisterForPreviewing
            '-canPerformUnwindSegueAction:fromViewController:sender:':
                name: canPerformUnwindSegueAction
            '-setContentScrollView:forEdge:':
                name: setContentScrollView
    UIViewPrintFormatter: {} # DONE
    UIViewPropertyAnimator: # DONE
        methods:
            '-initWithDuration:timingParameters:':
                name: init
            '-initWithDuration:curve:animations:':
                name: init
            '-initWithDuration:controlPoint1:controlPoint2:animations:':
                name: init
            '-initWithDuration:dampingRatio:animations:':
                name: init
            '+runningPropertyAnimatorWithDuration:delay:options:animations:completion:':
                name: getRunningPropertyAnimator
            '-addAnimations.*':
                trim_after_first_colon: true
            '-addCompletion:':
                trim_after_first_colon: true
            '-continueAnimationWithTimingParameters:durationFactor:':
                name: continueAnimation
    UIVisualEffect: # DONE
        skip_handle_constructor: false
    UIVisualEffectView: # DONE
        methods:
            '-initWithEffect:':
                name: init
    UIWebView: # DONE
        methods:
            '-loadHTMLString:baseURL:':
                name: loadHTML
            '-stringByEvaluatingJavaScriptFromString:':
                name: evaluateJavaScript
            '-loadRequest:':
                trim_after_first_colon: true
            '-loadData:MIMEType:textEncodingName:baseURL:':
                trim_after_first_colon: true
    UIWindow: # DONE
        methods:
            '-convertPoint:fromWindow:':
                name: convertPointFromWindow
            '-convertPoint:toWindow:':
                name: convertPointToWindow
            '-convertRect:fromWindow:':
                name: convertRectFromWindow
            '-convertRect:toWindow:':
                name: convertRectToWindow
            '-sendEvent:':
                trim_after_first_colon: true
            '-initWithWindowScene:':
                name: init
    UIAccessibilityLocationDescriptor: #since 11.0
        methods:
            '-initWithName:view:':
                name: init
            '-initWithName:point:inView:':
                name: init
            '-initWithAttributedName:point:inView:':
                name: init
    UICloudSharingController: #since 10.0
        methods:
            '-initWithShare:container:':
                name: init
            '-initWithPreparationHandler:':
                name: init
    UICollectionViewDropPlaceholder: {} #since 11.0
    UICollectionViewDropProposal: #since 11.0
        methods:
            '-initWithDropOperation:intent:':
                name: init
    UICollectionViewPlaceholder: #since 11.0
        methods:
            '-initWithInsertionIndexPath:reuseIdentifier:':
                name: init
    UIContextualAction: #since 11.0
        methods:
            '+contextualActionWithStyle:title:handler:':
                constructor: true
                name: create
    UIDragInteraction: #since 11.0
        methods:
            '-initWithDelegate:':
                name: init
    UIDragItem: #since 11.0
        methods:
            '-initWithItemProvider:':
                name: init
    UIDragPreview: #since 11.0
        methods:
            '-initWithView:':
                name: init
            '-initWithView:parameters:':
                name: init
            '+previewForURL:title:':
                constructor: true
                name: create
    UIDragPreviewParameters: #since 11.0
        methods:
            '-initWithTextLineRects:':
                name: init
    UIDragPreviewTarget: #since 11.0
        methods:
            '-initWithContainer:center:transform:':
                name: init
            '-initWithContainer:center:':
                name: init
    UIDropInteraction: #since 11.0
        methods:
            '-initWithDelegate:':
                name: init
    UIDropProposal: #since 11.0
        methods:
            '-initWithDropOperation:':
                name: init
    UIFocusDebugger: {} #since 11.0
    UIFocusSystem: #since 11.0
        methods:
            '+environment:containsEnvironment:':
                name: isEnvironmentContainsEnvironment
    UIFontMetrics: #since 11.0
        methods:
            '-scaledFontForFont:maximumPointSize:':
                name: scaledFont
            '-scaledFontForFont:compatibleWithTraitCollection:':
                name: scaledFont
            '-scaledFontForFont:maximumPointSize:compatibleWithTraitCollection:':
                name: scaledFont
            '-scaledValueForValue:compatibleWithTraitCollection:':
                name: scaledValue
    UIPasteConfiguration: #since 11.0
        methods:
            '-initWithAcceptableTypeIdentifiers:':
                name: init
            '-initWithTypeIdentifiersForAcceptingClass:':
                name: init
    UISpringLoadedInteraction: #since 11.0
        methods:
            '-initWithInteractionBehavior:interactionEffect:activationHandler:':
                name: init
            '-initWithActivationHandler:':
                name: init
    UISwipeActionsConfiguration: #since 11.0
        methods:
            '+configurationWithActions:':
                name: create
                constructor: true
    UITableViewDropPlaceholder: {} #since 11.0
    UITableViewDropProposal: #since 11.0
        methods:
            '-initWithDropOperation:intent:':
                name: init
    UITableViewPlaceholder: #since 11.0
        methods:
            '-initWithInsertionIndexPath:reuseIdentifier:rowHeight:':
                name: init
    UITargetedDragPreview: #since 11.0
        methods:
            '-initWithView:parameters:target:':
                name: init
            '-initWithView:parameters:':
                name: init
            '-initWithView:':
                name: init
            '+previewForURL:target:':
                constructor: true
                name: create
            '+previewForURL:title:target:':
                constructor: true
                name: create
            '-retargetedPreviewWithTarget:':
                name: retargetedPreview
    UITextDragPreviewRenderer: #since 11.0
        methods:
            '-initWithLayoutManager:range:':
                name: init
            '-initWithLayoutManager:range:unifyRects:':
                name: init
            '-adjustFirstLineRect:bodyRect:lastLineRect:textOrigin:':
                trim_after_first_colon: true
    UITextDropProposal: {} #since 11.0

    UIDocumentBrowserAction: #since 11.0
        methods:
            '-initWithIdentifier:localizedTitle:availability:handler:':
                name: init
    UIDocumentBrowserTransitionController: {} #since 11.0
    UIDocumentBrowserViewController: #since 11.0
        methods:
            '-revealDocumentAtURL:importIfNeeded:completion:':
                name: revealDocument
            '-importDocumentAtURL:nextToDocumentAtURL:mode:completionHandler:':
                name: importDocument
            '-initForOpeningFilesWithContentTypes:':
                name: initForOpeningFilesUsingContentTypes
            '-initForOpeningContentTypes:':
                static_constructor_name: createForOpeningContentTypes
    UIFocusMovementHint: {} #since 12.0
    UITextInputPasswordRules: #since 12.0
        methods:
            '+passwordRulesWithDescriptor:':
                name: create
                constructor: true
    UIPencilInteraction: {} #since 12.1

    # iOS13
    NSCollectionLayoutAnchor: #since 13.0
        methods:
            '+layoutAnchorWithEdges:':
                constructor: true
                name: create
            '+layoutAnchorWithEdges:absoluteOffset:':
                name: createUsingAbsoluteOffset
            '+layoutAnchorWithEdges:fractionalOffset:':
                name: createUsingFactionOffset
    NSCollectionLayoutBoundarySupplementaryItem: #since 13.0
        methods:
            '+boundarySupplementaryItemWithLayoutSize:elementKind:alignment:':
                constructor: true
                name: create
            '+boundarySupplementaryItemWithLayoutSize:elementKind:alignment:absoluteOffset:':
                constructor: true
                name: create
    NSCollectionLayoutDecorationItem: #since 13.0
        methods:
            '+backgroundDecorationItemWithElementKind:':
                constructor: true
                name: create
    NSCollectionLayoutDimension: {} #since 13.0
    NSCollectionLayoutEdgeSpacing: #since 13.0
        methods:
            '+spacingForLeading:top:trailing:bottom:':
                constructor: true
                name: create
    NSCollectionLayoutGroup: #since 13.0
        methods:
            '+horizontalGroupWithLayoutSize:subitem:count:':
                name: createHorizontalGroup
            '+horizontalGroupWithLayoutSize:subitems:':
                name: createHorizontalGroup
            '+verticalGroupWithLayoutSize:subitem:count:':
                name: createVerticalGroup
            '+verticalGroupWithLayoutSize:subitems:':
                name: createVerticalGroup
            '+customGroupWithLayoutSize:itemProvider:':
                name: createCustomGroup
    NSCollectionLayoutGroupCustomItem: #since 13.0
        methods:
            '+customItemWithFrame:':
                constructor: true
                name: create
            '+customItemWithFrame:zIndex:':
                constructor: true
                name: create
    NSCollectionLayoutItem: #since 13.0
        methods:
            '+itemWithLayoutSize:':
                constructor: true
                name: create
            '+itemWithLayoutSize:supplementaryItems:':
                constructor: true
                name: create
    NSCollectionLayoutSection: #since 13.0
        methods:
            '+sectionWithGroup:':
                constructor: true
                name: create
            '+sectionWithListConfiguration:layoutEnvironment:':
                constructor: true
                name: create
    NSCollectionLayoutSize: #since 13.0
        methods:
            '+sizeWithWidthDimension:heightDimension:':
                constructor: true
                name: create
    NSCollectionLayoutSpacing: {} #since 13.0
    NSCollectionLayoutSupplementaryItem: #since 13.0
        methods:
            '+supplementaryItemWithLayoutSize:elementKind:containerAnchor:':
                constructor: true
                name: create
            '+supplementaryItemWithLayoutSize:elementKind:containerAnchor:itemAnchor:':
                constructor: true
                name: create
    NSDiffableDataSourceSnapshot: #since 13.0
        methods:
            '-itemIdentifiersInSectionWithIdentifier:':
                name: getItemIdentifiersInSection
            '-appendItemsWithIdentifiers:':
                name: appendItems
            '-appendItemsWithIdentifiers:intoSectionWithIdentifier:':
                name: appendItems
            '-insertItemsWithIdentifiers:beforeItemWithIdentifier:':
                name: insertItemsBeforeItem
            '-insertItemsWithIdentifiers:afterItemWithIdentifier:':
                name: insertItemsAfterItem
            '-deleteItemsWithIdentifiers:':
                name: deleteItems
            '-moveItemWithIdentifier:beforeItemWithIdentifier:':
                name: moveItemBeforeItem
            '-moveItemWithIdentifier:afterItemWithIdentifier:':
                name: moveItemAfterItem
            '-reloadItemsWithIdentifiers:':
                name: reloadItems
            '-appendSectionsWithIdentifiers:':
                name: appendSections
            '-insertSectionsWithIdentifiers:beforeSectionWithIdentifier:':
                name: insertSectionsBeforeSection
            '-insertSectionsWithIdentifiers:afterSectionWithIdentifier:':
                name: insertSectionsAfterSection
            '-deleteSectionsWithIdentifiers:':
                name: deleteSections
            '-moveSectionWithIdentifier:beforeSectionWithIdentifier:':
                name: moveSectionBeforeSection
            '-moveSectionWithIdentifier:afterSectionWithIdentifier:':
                name: moveSectionAfterSection
            '-reloadSectionsWithIdentifiers:':
                name: reloadSections
            '-reconfigureItemsWithIdentifiers:':
                name: reconfigureItems
    UIAction: #since 13.0
        methods:
            '+actionWithTitle:image:identifier:handler:':
                constructor: true
                name: create
            '+actionWithHandler:':
                constructor: true
                name: create
            '+captureTextFromCameraActionForResponder:identifier:':
                name: captureTextFromCameraActionForResponder
    UIActivityItemsConfiguration: #since 13.0
        methods:
            '-initWithObjects:':
                static_constructor_name: createUsingObjects
            '-initWithItemProviders:':
                static_constructor_name: createUsingItemProviders
            '+activityItemsConfigurationWithObjects:':
                exclude: true
            '+activityItemsConfigurationWithItemProviders:':
                exclude: true
    UIBarAppearance: #since 13.0
        methods:
            '-initWithIdiom:':
                name: init
            '-initWithBarAppearance:':
                name: init
            '-initWithCoder:':
                name: init
            '-configureWithDefaultBackground':
                name: configureWithDefaultBackground
            '-configureWithOpaqueBackground':
                name: configureWithOpaqueBackground
            '-configureWithTransparentBackground':
                name: configureWithTransparentBackground
    UIBarButtonItemAppearance: #since 13.0
        methods:
            '-initWithStyle:':
                name: init
            '-initWithCoder:':
                name: init
            '-configureWithDefaultForStyle:':
                name: configureWithDefaultForStyle
    UIBarButtonItemStateAppearance: {} #since 13.0
    UICollectionViewCompositionalLayout: #since 13.0
        methods:
            '-initWithSection:':
                name: init
            '-initWithSection:configuration:':
                name: init
            '-initWithSectionProvider:':
                name: init
            '-initWithSectionProvider:configuration:':
                name: init
            '+layoutWithListConfiguration:':
                constructor: true
                name: create
    UICollectionViewCompositionalLayoutConfiguration: {} #since 13.0
    UICollectionViewDiffableDataSource: #since 13.0
        methods:
            '-initWithCollectionView:cellProvider:':
                name: init
            '-applySnapshot:animatingDifferences:':
                name: applySnapshot
            '-applySnapshot:animatingDifferences:completion:':
                name: applySnapshot
            '-applySnapshot:toSection:animatingDifferences:':
                name: applySnapshot
            '-applySnapshot:toSection:animatingDifferences:completion:':
                name: applySnapshot
            '-applySnapshotUsingReloadData:completion:':
                name: applySnapshot
    UICommand: #since 13.0
        methods:
            '+commandWithTitle:image:action:propertyList:':
                constructor: true
                name: create
            '+commandWithTitle:image:action:propertyList:alternates:':
                constructor: true
                name: create
    UICommandAlternate: #since 13.0
        methods:
            '-initWithCoder:':
                name: init
            '+alternateWithTitle:action:modifierFlags:':
                constructor: true
                name: create
    UIContextMenuConfiguration: #since 13.0
        methods:
            '+configurationWithIdentifier:previewProvider:actionProvider:':
                constructor: true
                name: create
    UIContextMenuInteraction: #since 13.0
        methods:
            '-initWithDelegate:':
                name: init
            '-updateVisibleMenuWithBlock:':
                name: updateVisibleMenu
    UIFontPickerViewController: #since 13.0
        methods:
            '-initWithConfiguration:':
                name: init
    UIFontPickerViewControllerConfiguration: {} #since 13.0
    UIHoverGestureRecognizer: {} #since 13.0
    UIImageConfiguration: #since 13.0
        methods:
            '-configurationWithTraitCollection:':
                constructor: true
                name: create
    UIImageSymbolConfiguration: #since 13.0
        methods:
            '-configurationWithoutTextStyle':
                name: getConfigurationWithoutTextStyle
            '-configurationWithoutScale':
                name: getConfigurationWithoutScale
            '-configurationWithoutWeight':
                name: getConfigurationWithoutWeight
            '-configurationWithoutPointSizeAndWeight':
                name: getConfigurationWithoutPointSizeAndWeight
            '+configurationWithScale:':
                name: getConfigurationWithScale
            '+configurationWithPointSize:':
                name: getConfigurationWithPointSize
            '+configurationWithWeight:':
                name: getConfigurationWithWeight
            '+configurationWithPointSize:weight:':
                name: getConfigurationWithPointSizeWeight
            '+configurationWithPointSize:weight:scale:':
                name: getConfigurationWithPointSizeWeightScale
            '+configurationWithTextStyle:':
                name: getConfigurationWithTextStyle
            '+configurationWithTextStyle:scale:':
                name: getConfigurationWithTextStyleScale
            '+configurationWithFont:':
                name: getConfigurationWithFont
            '+configurationWithFont:scale:':
                name: getConfigurationWithFontScale
            '+configurationWithHierarchicalColor:':
                name: getConfigurationWithHierarchicalColor
            '+configurationWithPaletteColors:':
                name: getConfigurationWithPaletteColors
    UILargeContentViewerInteraction: #since 13.0
        methods:
            '-initWithDelegate:':
                name: init
    UIMenu: #since 13.0
        methods:
            '+menuWithTitle:children:':
                constructor: true
                name: create
            '+menuWithTitle:image:identifier:options:children:':
                constructor: true
                name: create
            '-initWithCoder:':
                name: init
            '+menuWithChildren:':
                constructor: true
                name: create
    UIMenuElement: {} #since 13.0
    UIMenuSystem: {} #since 13.0
    UINavigationBarAppearance: #since 13.0
        methods:
            '-setBackIndicatorImage:transitionMaskImage:':
                name: setBackIndicatorImage
    UIOpenURLContext: {} #since 13.0
    UIPreviewParameters: #since 13.0
        methods:
            '-initWithTextLineRects:':
                name: init
    UIPreviewTarget: #since 13.0
        methods:
            '-initWithContainer:center:transform:':
                name: init
            '-initWithContainer:center:':
                name: init
    UIScene: #since 13.0
        methods:
            '-initWithSession:connectionOptions:':
                name: init
            '-openURL:options:completionHandler:':
                name: openURL
    UISceneActivationConditions: #since 13.0
        methods:
            '-initWithCoder:':
                name: init
    UISceneActivationRequestOptions: {} #since 13.0
    UISceneConfiguration: #since 13.0
        methods:
            '-initWithName:sessionRole:':
                name: init
            '+configurationWithName:sessionRole:':
                exclude: true
    UISceneConnectionOptions: {} #since 13.0
    UISceneDestructionRequestOptions: {} #since 13.0
    UISceneOpenExternalURLOptions: {} #since 13.0
    UISceneOpenURLOptions: {} #since 13.0
    UISceneSession: {} #since 13.0
    UISceneSizeRestrictions: {} #since 13.0
    UIScreenshotService: {} #since 13.0
    UISearchTextField: #since 13.0
        methods:
            '-insertToken:atIndex:':
                name: insertToken
            '-replaceTextualPortionOfRange:withToken:atIndex:':
                name: replaceTextualPortionOfRange
    UISearchToken: #since 13.0
        methods:
            '+tokenWithIcon:text:':
                constructor: true
                name: create
    UIStatusBarManager: {} #since 13.0
    UITabBarAppearance: {} #since 13.0
    UITabBarItemAppearance: #since 13.0
        methods:
            '-initWithStyle:':
                name: init
            '-initWithCoder:':
                name: init
            '-configureWithDefaultForStyle:':
                name: configureWithDefaultForStyle
    UITabBarItemStateAppearance: {} #since 13.0
    UITableViewDiffableDataSource: #since 13.0
        methods:
            '-initWithTableView:cellProvider:':
                name: init
            '-applySnapshot:animatingDifferences:':
                name: applySnapshot
            '-applySnapshot:animatingDifferences:completion:':
                name: applySnapshot
            '-applySnapshotUsingReloadData:completion:':
                name: applySnapshot
    UITargetedPreview: #since 13.0
        methods:
            '-initWithView:parameters:target:':
                name: init
            '-initWithView:parameters:':
                name: init
            '-initWithView:':
                name: init
            '-retargetedPreviewWithTarget:':
                name: retargetedPreview
    UITextFormattingCoordinator: #since 13.0
        methods:
            '-initWithWindowScene:':
                name: init
            '-setSelectedAttributes:isMultiple:':
                name: setSelectedAttributes
    UITextInteraction: {} #since 13.0
    UITextPlaceholder: {} #since 13.0
    UIToolbarAppearance: {} #since 13.0
    UIWindowScene: {} #since 13.0
    UIWindowSceneDestructionRequestOptions: {} #since 13.0
    UIKey:  #since 13.4
        properties:
            'keyCode':
                name: keyCodeRaw
                type: "@MachineSizedSInt long"
    NSDiffableDataSourceSectionSnapshot: #since 14.0
        methods:
            '-appendItems:intoParentItem:':
                name: appendItems
            '-insertItems:beforeItem:':
                name: insertItemsBeforeItem
            '-insertItems:afterItem:':
                name: insertItemsAgterItem
            '-replaceChildrenOfParentItem:withSnapshot:':
                name: replaceChildrenOfParentItem
            '-insertSnapshot:beforeItem:':
                name: insertSnapshotBeforeItem
            '-insertSnapshot:afterItem:':
                name: insertSnapshotAfterItem
            '-snapshotOfParentItem:includingParentItem:':
                name: getSnapshotOfParentItem
    NSDiffableDataSourceSectionTransaction: {} #since 14.0
    NSDiffableDataSourceTransaction: {} #since 14.0
    UIBackgroundConfiguration: {} #since 14.0
    UICellAccessory: #since 14.0
        methods:
            '-initWithCoder:':
                name: init
    UICellAccessoryCheckmark: {} #since 14.0
    UICellAccessoryCustomView: #since 14.0
        methods:
            '-initWithCustomView:placement:':
                name: init
    UICellAccessoryDelete: {} #since 14.0
    UICellAccessoryDisclosureIndicator: {} #since 14.0
    UICellAccessoryInsert: {} #since 14.0
    UICellAccessoryLabel: #since 14.0
        methods:
            '-initWithText:':
                name: init
    UICellAccessoryMultiselect: {} #since 14.0
    UICellAccessoryOutlineDisclosure: {} #since 14.0
    UICellAccessoryReorder: {} #since 14.0
    UICellConfigurationState: {} #since 14.0
    UICollectionLayoutListConfiguration: #since 14.0
        methods:
            '-initWithAppearance:':
                name: initWithAppearance
    UICollectionViewCellRegistration: #since 14.0
        methods:
            '+registrationWithCellClass:configurationHandler:':
                name: create
                constructor: true
            '+registrationWithCellNib:configurationHandler:':
                name: create
                constructor: true
    UICollectionViewDiffableDataSourceReorderingHandlers: {} #since 14.0
    UICollectionViewDiffableDataSourceSectionSnapshotHandlers: {} #since 14.0
    UICollectionViewListCell: {} #since 14.0
    UICollectionViewSupplementaryRegistration: #since 14.0
        methods:
            '+registrationWithSupplementaryClass:elementKind:configurationHandler:':
                name: create
                constructor: true
            '+registrationWithSupplementaryNib:elementKind:configurationHandler:':
                name: create
                constructor: true
    UIColorPickerViewController: {} #since 14.0
    UIColorWell: {} #since 14.0
    UIDeferredMenuElement: #since 14.0
        methods:
            '+elementWithProvider:':
                name: elementWithProvider
            '+elementWithUncachedProvider:':
                name: elementWithUncachedProvider
    UIIndirectScribbleInteraction: #since 14.0
        methods:
            '-initWithDelegate:':
                name: init
    UIListContentConfiguration: {} #since 14.0
    UIListContentImageProperties: {} #since 14.0
    UIListContentTextProperties: {} #since 14.0
    UIListContentView: #since 14.0
        methods:
            '-initWithConfiguration:':
                name: init
    UIPointerEffect: #since 13.4
        methods:
            '+effectWithPreview:':
                name: create
                constructor: true
    UIPointerHighlightEffect: {} #since 13.4
    UIPointerHoverEffect: {} #since 13.4
    UIPointerInteraction: #since 13.4
        methods:
            '-initWithDelegate:':
                name: init
    UIPointerLiftEffect: {} #since 13.4
    UIPointerLockState: {} #since 14.0
    UIPointerRegion: #since 13.4
        methods:
            '+regionWithRect:identifier:':
                name: create
                constructor: true
    UIPointerRegionRequest: {} #since 13.4
    UIPointerShape: #since 13.4
        methods:
            '+shapeWithPath:':
                name: create
                constructor: true
            '+shapeWithRoundedRect:':
                name: create
                constructor: true
            '+shapeWithRoundedRect:cornerRadius:':
                name: create
                constructor: true
            '+beamWithPreferredLength:axis:':
                name: create
                constructor: true
    UIPointerStyle: #since 13.4
        methods:
            '+styleWithEffect:shape:':
                name: create
                constructor: true
            '+styleWithShape:constrainedAxes:':
                name: create
                constructor: true
    UIScribbleInteraction: #since 14.0
        methods:
            '-initWithDelegate:':
                name: init
    UIViewConfigurationState: #since 14.0
        methods:
            '-initWithTraitCollection:':
                name: init
    UIEventAttribution: #since 14.5
        methods:
            '-initWithSourceIdentifier:destinationURL:sourceDescription:purchaser:':
                name: init
    UIEventAttributionView: {} #since 14.5
    UIListSeparatorConfiguration: #since 14.5
        methods:
            '-initWithListAppearance:':
                name: init
    UIPrintServiceExtension: {} #since 14.5
    UIPrinterDestination: #since 14.5
        methods:
            '-initWithURL:':
                name: init
    NSTextAttachmentViewProvider: #since 15.0
        methods:
            '-initWithTextAttachment:parentView:textLayoutManager:location:':
                name: init
            '-attachmentBoundsForAttributes:location:textContainer:proposedLineFragment:position:':
                name: attachmentBoundsForAttributes
    NSTextContentManager: #since 15.0
        methods:
            '-recordEditActionInRange:newTextRange:':
                name: recordEditAction
    NSTextContentStorage: #since 15.0
        methods:
            '-locationFromLocation:withOffset:':
                name: locationFromLocation
            '-offsetFromLocation:toLocation:':
                name: offsetFromLocation
            '-adjustedRangeFromRange:forEditingTextSelection:':
                name: adjustedRangeFromRange
    NSTextElement: #since 15.0
        methods:
            '-initWithTextContentManager:':
                name: init
    NSTextLayoutFragment: #since 15.0
        methods:
            '-initWithTextElement:range:':
                name: init
            '-drawAtPoint:inContext:':
                name: drawAtPoint
    NSTextLayoutManager: #since 15.0
        methods:
            '-enumerateTextLayoutFragmentsFromLocation:options:usingBlock:':
                name: enumerateTextLayoutFragments
            '-enumerateRenderingAttributesFromLocation:reverse:usingBlock:':
                name: enumerateRenderingAttributes
            '-setRenderingAttributes:forTextRange:':
                name: setRenderingAttributes
            '-addRenderingAttribute:value:forTextRange:':
                name: addRenderingAttribute
            '-removeRenderingAttribute:forTextRange:':
                name: removeRenderingAttribute
            '-renderingAttributesForLink:atLocation:':
                name: renderingAttributesForLink
            '-enumerateTextSegmentsInRange:type:options:usingBlock:':
                name: enumerateTextSegmentsInRange
            '-replaceContentsInRange:withTextElements:':
                name: replaceContentsInRange
            '-replaceContentsInRange:withAttributedString:':
                name: replaceContentsInRange
    NSTextLineFragment: #since 15.0
        methods:
            '-initWithAttributedString:range:':
                name: init
            '-initWithString:attributes:range:':
                name: init
            '-drawAtPoint:inContext:':
                name: drawAtPoint
    NSTextParagraph: #since 15.0
        methods:
            '-initWithAttributedString:':
                name: init
    NSTextRange: #since 15.0
        methods:
            '-initWithLocation:endLocation:':
                name: init
            '-initWithLocation:':
                name: init
            '-intersectsWithTextRange:':
                name: intersects
            '-textRangeByIntersectingWithTextRange:':
                name: textRangeByIntersectingWithTextRange
            '-textRangeByFormingUnionWithTextRange:':
                name: textRangeByFormingUnionWithTextRange
    NSTextSelection: #since 15.0
        methods:
            '-initWithRanges:affinity:granularity:':
                name: init
            '-initWithRange:affinity:granularity:':
                name: init
            '-initWithLocation:affinity:':
                name: init
            '-textSelectionWithTextRanges:':
                name: textSelection
    NSTextSelectionNavigation: #since 15.0
        methods:
            '-initWithDataSource:':
                name: init
            '-destinationSelectionForTextSelection:direction:destination:extending:confined:':
                name: destinationSelectionForTextSelection
            '-textSelectionsInteractingAtPoint:inContainerAtLocation:anchors:modifiers:selecting:bounds:':
                name: textSelectionsInteractingAtPoint
            '-textSelectionForSelectionGranularity:enclosingTextSelection:':
                name: textSelectionForSelectionGranularity
            '-textSelectionForSelectionGranularity:enclosingPoint:inContainerAtLocation:':
                name: textSelectionForSelectionGranularity
            '-resolvedInsertionLocationForTextSelection:writingDirection:':
                name: resolvedInsertionLocationForTextSelection
            '-deletionRangesForTextSelection:direction:destination:allowsDecomposition:':
                name: deletionRangesForTextSelection
    NSTextViewportLayoutController: #since 15.0
        methods:
            '-initWithTextLayoutManager:':
                name: init
    UIBandSelectionInteraction: #since 15.0
        methods:
            '-initWithSelectionHandler:':
                name: init
    UIButtonConfiguration: {} #since 15.0
    UIFocusEffect: {} #since 15.0
    UIFocusHaloEffect: #since 15.0
        methods:
            '+effectWithRect:':
                constructor: true
                name: create
            '+effectWithRoundedRect:cornerRadius:curve:':
                constructor: true
                name: create
            '+effectWithPath:':
                constructor: true
                name: create
    UIKeyboardLayoutGuide: {} #since 15.0
    UIPointerAccessory: #since 15.0
        methods:
            '+accessoryWithShape:position:':
                constructor: true
                name: create
            '+arrowAccessoryWithPosition:':
                constructor: true
                name: create
    UISheetPresentationController: {} #since 15.0
    UISheetPresentationControllerDetent: {} #since 15.0
    UIToolTipConfiguration: #since 15.0
        methods:
            '+configurationWithToolTip:':
                constructor: true
                name: create
            '+configurationWithToolTip:inRect:':
                constructor: true
                name: create
    UIToolTipInteraction: #since 15.0
        methods:
            '-initWithDefaultToolTip:':
                name: init
    UITrackingLayoutGuide: #since 15.0
        methods:
            '-setConstraints:activeWhenNearEdge:':
                name: setConstraintsActiveWhenNearEdge
            '-setConstraints:activeWhenAwayFromEdge:':
                name: setConstraintsActiveWhenAwayFromEdge
    UIWindowSceneActivationAction: #since 15.0
        methods:
            '+actionWithIdentifier:alternateAction:configurationProvider:':
                constructor: true
                name: create
    UIWindowSceneActivationConfiguration: #since 15.0
        methods:
            '-initWithUserActivity:':
                name: init
    UIWindowSceneActivationInteraction: #since 15.0
        methods:
            '-initWithConfigurationProvider:errorHandler:':
                name: init
    UIWindowSceneActivationRequestOptions: {} #since 15.0
    UICellAccessoryDetail: {} #since 15.4
protocols:
    NSLayoutManagerDelegate: # DONE
        methods:
            '-layoutManager:shouldGenerateGlyphs:properties:characterIndexes:font:forGlyphRange:':
                name: shouldGenerateGlyphs
            '-layoutManager:lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:':
                name: getLineSpacingAfterGlyph
            '-layoutManager:paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:':
                name: getParagraphSpacingBeforeGlyph
            '-layoutManager:paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:':
                name: getParagraphSpacingAfterGlyph
            '-layoutManager:shouldUseAction:forControlCharacterAtIndex:':
                name: shouldUseAction
            '-layoutManager:shouldBreakLineByWordBeforeCharacterAtIndex:':
                name: shouldBreakLineByWordBeforeCharacter
            '-layoutManager:shouldBreakLineByHyphenatingBeforeCharacterAtIndex:':
                name: shouldBreakLineByHyphenatingBeforeCharacter
            '-layoutManager:boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:':
                name: getBoundingBoxForControlGlyph
            '-layoutManager:shouldSetLineFragmentRect:lineFragmentUsedRect:baselineOffset:inTextContainer:forGlyphRange:':
                name: shouldSetLineFragmentRect
            '-layoutManagerDidInvalidateLayout:':
                name: didInvalidateLayout
            '-layoutManager:didCompleteLayoutForTextContainer:atEnd:':
                name: didCompleteLayout
            '-layoutManager:textContainer:didChangeGeometryFromSize:':
                name: didChangeGeometry
    NSTextAttachmentContainer: # DONE
        methods:
            '-imageForBounds:textContainer:characterIndex:':
                name: getImageForBounds
            '-attachmentBoundsForTextContainer:proposedLineFragment:glyphPosition:characterIndex:':
                name: getAttachmentBounds
    NSTextLayoutOrientationProvider: {} # DONE
    NSTextStorageDelegate:
        methods:
            '-textStorage:willProcessEditing:range:changeInLength:':
                name: willProcessEditing
            '-textStorage:didProcessEditing:range:changeInLength:':
                name: didProcessEditing
    UIAccessibilityIdentification: {} # DONE
    UIActionSheetDelegate: # DONE
        methods:
            '-actionSheet:clickedButtonAtIndex:':
                name: clicked
            '-actionSheet:didDismissWithButtonIndex:':
                name: didDismiss
            '-actionSheet:willDismissWithButtonIndex:':
                name: willDismiss
            '-actionSheetCancel:':
                name: cancel
            '-didPresentActionSheet:':
                name: didPresent
            '-willPresentActionSheet:':
                name: willPresent
    UIActivityItemSource: # DONE
        methods:
            '-activityViewController:itemForActivityType:':
                name: getItem
            '-activityViewControllerPlaceholderItem:':
                name: getPlaceholderItem
            '-activityViewController:subjectForActivityType:':
                name: getSubject
            '-activityViewController:dataTypeIdentifierForActivityType:':
                name: getDataTypeIdentifier
            '-activityViewController:thumbnailImageForActivityType:suggestedSize:':
                name: getThumbnailImage
    UIAdaptivePresentationControllerDelegate: # DONE
        methods:
            '-adaptivePresentationStyleForPresentationController:':
                name: getAdaptivePresentationStyle
            '-adaptivePresentationStyleForPresentationController:traitCollection:':
                name: getAdaptivePresentationStyle
            '-presentationController:viewControllerForAdaptivePresentationStyle:':
                name: getViewController
            '-presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:':
                name: willPresent
            '-presentationController:prepareAdaptivePresentationController:':
                name: prepareAdaptivePresentationController
    UIAlertViewDelegate: # DONE
        methods:
            '-alertView:clickedButtonAtIndex:':
                name: clicked
            '-alertView:didDismissWithButtonIndex:':
                name: didDismiss
            '-alertView:willDismissWithButtonIndex:':
                name: willDismiss
            '-alertViewCancel:':
                name: cancel
            '-didPresentAlertView:':
                name: didPresent
            '-willPresentAlertView:':
                name: willPresent
            '-alertViewShouldEnableFirstOtherButton:':
                name: shouldEnableFirstOtherButton
    UIAppearanceContainer: # DONE
        skip_adapter: true
    UIApplicationDelegate: # DONE
        properties:
            'window':
                skip_adapter: true
        methods:
            '-application:didChangeStatusBarFrame:':
                name: didChangStatusBarFrame
            '-application:didChangeStatusBarOrientation:':
                name: didChangStatusBarOrientation
            '-application:didFailToRegisterForRemoteNotificationsWithError:':
                name: didFailToRegisterForRemoteNotifications
            '-application:didFinishLaunchingWithOptions:':
                name: didFinishLaunching
                parameters:
                    launchOptions:
                        type: UIApplicationLaunchOptions
            '-applicationDidFinishLaunching:':
                name: didFinishLaunching
            '-application:didReceiveLocalNotification:':
                name: didReceiveLocalNotification
            '-application:didReceiveRemoteNotification:':
                name: didReceiveRemoteNotification
                parameters:
                    userInfo:
                        type: UIRemoteNotification
            '-application:didRegisterForRemoteNotificationsWithDeviceToken:':
                name: didRegisterForRemoteNotifications
            '-application:handleOpenURL:':
                name: handleOpenURL
            '-application:openURL:sourceApplication:annotation:':
                name: openURL
                parameters:
                    annotation:
                        type: NSPropertyList
            '-application:openURL:options:':
                name: openURL
                parameters:
                    options:
                        type: UIApplicationOpenURLOptions
            '-application:willChangeStatusBarFrame:':
                name: willChangeStatusBarFrame
            '-application:willChangeStatusBarOrientation:duration:':
                name: willChangeStatusBarOrientation
            '-applicationDidBecomeActive:':
                name: didBecomeActive
            '-applicationDidEnterBackground:':
                name: didEnterBackground
            '-applicationDidReceiveMemoryWarning:':
                name: didReceiveMemoryWarning
                skip_adapter: true
            '-applicationProtectedDataDidBecomeAvailable:':
                name: protectedDataDidBecomeAvailable
            '-applicationProtectedDataWillBecomeUnavailable:':
                name: protectedDataWillBecomeUnavailable
            '-applicationSignificantTimeChange:':
                name: significantTimeChange
            '-applicationWillEnterForeground:':
                name: willEnterForeground
            '-applicationWillResignActive:':
                name: willResignActive
            '-applicationWillTerminate:':
                name: willTerminate
            '-application:shouldSaveApplicationState:':
                name: shouldSaveApplicationState
            '-application:shouldRestoreApplicationState:':
                name: shouldRestoreApplicationState
            '-application:didDecodeRestorableStateWithCoder:':
                name: didDecodeRestorableState
            '-application:supportedInterfaceOrientationsForWindow:':
                name: getSupportedInterfaceOrientations
            '-application:viewControllerWithRestorationIdentifierPath:coder:':
                name: getViewController
                parameters:
                    identifierComponents:
                        type: List<String>
                        marshaler: NSArray.AsStringListMarshaler
            '-application:willEncodeRestorableStateWithCoder:':
                name: willEncodeRestorableState
            '-application:willFinishLaunchingWithOptions:':
                name: willFinishLaunching
                parameters:
                    launchOptions:
                        type: UIApplicationLaunchOptions
            '-application:didReceiveRemoteNotification:fetchCompletionHandler:':
                name: didReceiveRemoteNotification
                parameters:
                    userInfo:
                        type: UIRemoteNotification
            '-application:performActionForShortcutItem:completionHandler:':
                name: performAction
            '-application:performFetchWithCompletionHandler:':
                name: performFetch
            '-application:handleEventsForBackgroundURLSession:completionHandler:':
                name: handleEventsForBackgroundURLSession
            '-application:didRegisterUserNotificationSettings:':
                name: didRegisterUserNotificationSettings
            '-application:handleActionWithIdentifier:forLocalNotification:completionHandler:':
                name: handleLocalNotificationAction
            '-application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:':
                name: handleLocalNotificationAction
            '-application:handleActionWithIdentifier:forRemoteNotification:completionHandler:':
                name: handleRemoteNotificationAction
                parameters:
                    userInfo:
                        type: UIRemoteNotification
            '-application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:':
                name: handleRemoteNotificationAction
                parameters:
                    userInfo:
                        type: UIRemoteNotification
            '-application:shouldAllowExtensionPointIdentifier:':
                name: shouldAllowExtensionPointIdentifier
                parameters:
                    extensionPointIdentifier:
                        type: UIApplicationExtensionPointIdentifier
            '-application:willContinueUserActivityWithType:':
                name: willContinueUserActivity
            '-application:continueUserActivity:restorationHandler:':
                name: continueUserActivity
                parameters:
                    restorationHandler:
                        type: '@Block VoidBlock1<NSArray<UIResponder>>'
            '-application:didFailToContinueUserActivityWithType:error:':
                name: didFailToContinueUserActivity
            '-application:didUpdateUserActivity:':
                name: didUpdateUserActivity
            '-application:handleWatchKitExtensionRequest:reply:':
                name: handleWatchKitExtensionRequest
                parameters:
                    reply:
                        type: '@Block VoidBlock1<NSDictionary<?, ?>>'
            '-applicationShouldRequestHealthAuthorization:':
                name: shouldRequestHealthAuthorization
            '-application:userDidAcceptCloudKitShareWithMetadata:':
                name: didAcceptCloudKitShare
            '-application:handleIntent:completionHandler:':
                name: handleIntent
            '-application:configurationForConnectingSceneSession:options:':
                name: getConfigurationForConnectingSceneSession
            '-application:didDiscardSceneSessions:':
                name: didDiscardSceneSessions
            '-application:shouldSaveSecureApplicationState:':
                name: shouldSaveSecureApplicationState
            '-application:shouldRestoreSecureApplicationState:':
                name: shouldRestoreSecureApplicationState
            '-application:handlerForIntent:':
                name: getHandlerForIntent
    UIBarPositioning: {} # DONE
    UIBarPositioningDelegate: # DONE
        methods:
            '-positionForBar:':
                name: getPosition
    UICollectionViewDataSource: # DONE
        methods:
            '-collectionView:cellForItemAtIndexPath:':
                name: getCellForItem
            '-collectionView:numberOfItemsInSection:':
                name: getNumberOfItemsInSection
            '-collectionView:viewForSupplementaryElementOfKind:atIndexPath:':
                name: getViewForSupplementaryElement
            '-numberOfSectionsInCollectionView:':
                name: getNumberOfSections
            '-collectionView:canMoveItemAtIndexPath:':
                name: canMoveItemAt
            '-collectionView:moveItemAtIndexPath:toIndexPath:':
                name: moveItemAt
            '-collectionView:indexPathForIndexTitle:atIndex:':
                name: indexPathForIndexTitle
    UICollectionViewDataSourcePrefetching: # DONE
        methods:
            '-collectionView:prefetchItemsAtIndexPaths:':
                name: prefetchItems
            '-collectionView:cancelPrefetchingForItemsAtIndexPaths:':
                name: cancelPrefetchingForItems
    UICollectionViewDelegate: # DONE
        methods:
            '-collectionView:canPerformAction:forItemAtIndexPath:withSender:':
                name: canPerformAction
            '-collectionView:didDeselectItemAtIndexPath:':
                name: didDeselectItem
            '-collectionView:didEndDisplayingCell:forItemAtIndexPath:':
                name: didEndDisplayingCell
            '-collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:':
                name: didEndDisplayingSupplementaryView
            '-collectionView:didHighlightItemAtIndexPath:':
                name: didHighlightItem
            '-collectionView:didSelectItemAtIndexPath:':
                name: didSelectItem
            '-collectionView:didUnhighlightItemAtIndexPath:':
                name: didUnhighlightItem
            '-collectionView:performAction:forItemAtIndexPath:withSender:':
                name: performAction
            '-collectionView:shouldDeselectItemAtIndexPath:':
                name: shouldDeselectItem
            '-collectionView:shouldHighlightItemAtIndexPath:':
                name: shouldHighlightItem
            '-collectionView:shouldSelectItemAtIndexPath:':
                name: shouldSelectItem
            '-collectionView:shouldShowMenuForItemAtIndexPath:':
                name: shouldShowMenuForItem
            '-collectionView:transitionLayoutForOldLayout:newLayout:':
                name: getTransitionLayout
            '-collectionView:willDisplayCell:forItemAtIndexPath:':
                name: willDisplayCell
            '-collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:':
                name: willDisplaySupplementaryView
            '-collectionView:targetIndexPathForMoveFromItemAtIndexPath:toProposedIndexPath:':
                name: getTargetIndexPathForMoveFromItem
            '-collectionView:targetContentOffsetForProposedContentOffset:':
                name: getTargetContentOffsetForProposedContentOffset
            '-collectionView:canFocusItemAtIndexPath:':
                name: canFocusItem
            '-collectionView:shouldUpdateFocusInContext:':
                name: shouldUpdateFocus
            '-collectionView:didUpdateFocusInContext:withAnimationCoordinator:':
                name: didUpdateFocus
            '-indexPathForPreferredFocusedViewInCollectionView:':
                name: getIndexPathForPreferredFocusedView
            '-collectionView:shouldSpringLoadItemAtIndexPath:withContext:':
                name: shouldSpringLoadItem
            '-collectionView:shouldBeginMultipleSelectionInteractionAtIndexPath:':
                name: shouldBeginMultipleSelectionInteraction
            '-collectionView:didBeginMultipleSelectionInteractionAtIndexPath:':
                name: didBeginMultipleSelectionInteraction
            '-collectionView:contextMenuConfigurationForItemAtIndexPath:point:':
                name: getContextMenuConfiguration
            '-collectionView:previewForHighlightingContextMenuWithConfiguration:':
                name: getPreviewForHighlightingContextMenu
            '-collectionView:previewForDismissingContextMenuWithConfiguration:':
                name: getPreviewForDismissingContextMenu
            '-collectionView:willCommitMenuWithAnimator:':
                name: willCommitMenu
            '-collectionView:willPerformPreviewActionForMenuWithConfiguration:animator:':
                name: willPerformPreviewAction
            '-collectionView:canEditItemAtIndexPath:':
                name: canEditItem
            '-collectionView:willDisplayContextMenuWithConfiguration:animator:':
                name: willDisplayContextMenu
            '-collectionView:willEndContextMenuInteractionWithConfiguration:animator:':
                name: willEndContextMenuInteraction
            '-collectionView:selectionFollowsFocusForItemAtIndexPath:':
                name: isSelectionFollowsFocus
            '-collectionView:targetIndexPathForMoveOfItemFromOriginalIndexPath:atCurrentIndexPath:toProposedIndexPath:':
                name: getTargetIndexPathForMoveOfItemFromOriginalIndexPath
            '-collectionView:sceneActivationConfigurationForItemAtIndexPath:point:':
                name: getSceneActivationConfiguration
    UICollectionViewDelegateFlowLayout: # DONE
        methods:
            '-collectionView:layout:insetForSectionAtIndex:':
                name: getSectionInset
            '-collectionView:layout:minimumInteritemSpacingForSectionAtIndex:':
                name: getSectionMinimumInteritemSpacing
            '-collectionView:layout:minimumLineSpacingForSectionAtIndex:':
                name: getSectionMinimumLineSpacing
            '-collectionView:layout:referenceSizeForFooterInSection:':
                name: getSectionFooterReferenceSize
            '-collectionView:layout:referenceSizeForHeaderInSection:':
                name: getSectionHeaderReferenceSize
            '-collectionView:layout:sizeForItemAtIndexPath:':
                name: getItemSize
    UICollisionBehaviorDelegate: # DONE
        methods:
            '-collisionBehavior:beganContactForItem:withItem:atPoint:':
                name: beganContact
            '-collisionBehavior:endedContactForItem:withItem:':
                name: endedContact
            '-collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:':
                name: beganBoundaryContact
            '-collisionBehavior:endedContactForItem:withBoundaryIdentifier:':
                name: endedBoundaryContact
    UICoordinateSpace: # DONE
        methods:
            '-convertPoint:toCoordinateSpace:':
                name: convertPointToCoordinateSpace
            '-convertPoint:fromCoordinateSpace:':
                name: convertPointFromCoordinateSpace
            '-convertRect:toCoordinateSpace:':
                name: convertRectToCoordinateSpace
            '-convertRect:fromCoordinateSpace:':
                name: convertRectFromCoordinateSpace
    UIDataSourceModelAssociation: # DONE
        methods:
            '-indexPathForElementWithModelIdentifier:inView:':
                name: getElementIndexPath
            '-modelIdentifierForElementAtIndexPath:inView:':
                name: getElementModelIdentifier
    UIDocumentInteractionControllerDelegate: # DONE
        methods:
            '-documentInteractionController:canPerformAction:':
                name: canPerformAction
            '-documentInteractionController:didEndSendingToApplication:':
                name: didEndSendingToApplication
            '-documentInteractionController:performAction:':
                name: performAction
            '-documentInteractionController:willBeginSendingToApplication:':
                name: willBeginSendingToApplication
            '-documentInteractionControllerDidDismissOpenInMenu:':
                name: didDismissOpenInMenu
            '-documentInteractionControllerDidDismissOptionsMenu:':
                name: didDismissOptionsMenu
            '-documentInteractionControllerDidEndPreview:':
                name: didEndPreview
            '-documentInteractionControllerRectForPreview:':
                name: getRectForPreview
            '-documentInteractionControllerViewControllerForPreview:':
                name: getViewControllerForPreview
            '-documentInteractionControllerViewForPreview:':
                name: getViewForPreview
            '-documentInteractionControllerWillBeginPreview:':
                name: willBeginPreview
            '-documentInteractionControllerWillPresentOpenInMenu:':
                name: willPresentOpenInMenu
            '-documentInteractionControllerWillPresentOptionsMenu:':
                name: willPresentOptionsMenu
    UIDocumentMenuDelegate: # DONE
        methods:
            '-documentMenu:didPickDocumentPicker:':
                name: didPickDocumentPicker
            '-documentMenuWasCancelled:':
                name: wasCancelled
    UIDocumentPickerDelegate: # DONE
        methods:
            '-documentPicker:didPickDocumentAtURL:':
                name: didPickDocument
            '-documentPickerWasCancelled:':
                name: wasCancelled
            '-documentPicker:didPickDocumentsAtURLs:':
                name: didPickDocuments
    UIDynamicAnimatorDelegate: # DONE
        methods:
            '-dynamicAnimatorWillResume:':
                name: willResume
            '-dynamicAnimatorDidPause:':
                name: didPause
    UIDynamicItem: {} # DONE
    UIFocusEnvironment: # DONE
        properties:
            'preferredFocusEnvironments':
                type: List<UIFocusEnvironment>
                marshaler: NSArray.AsListMarshaler
        methods:
            '-shouldUpdateFocusInContext:':
                name: shouldUpdateFocus
            '-didUpdateFocusInContext:withAnimationCoordinator:':
                name: didUpdateFocus
    UIFocusItem: {} # DONE
    UIGestureRecognizerDelegate: # DONE
        methods:
            '-gestureRecognizer:shouldReceiveTouch:':
                name: shouldReceiveTouch
            '-gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:':
                name: shouldRecognizeSimultaneously
            '-gestureRecognizerShouldBegin:':
                name: shouldBegin
            '-gestureRecognizer:shouldRequireFailureOfGestureRecognizer:':
                name: shouldRequireFailure
            '-gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:':
                name: shouldBeRequiredToFail
            '-gestureRecognizer:shouldReceivePress:':
                name: shouldReceivePress
            '-gestureRecognizer:shouldReceiveEvent:':
                name: shouldReceiveEvent
    UIGuidedAccessRestrictionDelegate: # DONE
        properties:
            'guidedAccessRestrictionIdentifiers':
                name: identifiers
                type: List<String>
                marshaler: NSArray.AsStringListMarshaler
        methods:
            '-guidedAccessRestrictionWithIdentifier:didChangeState:':
                name: didChangeState
            '-textForGuidedAccessRestrictionWithIdentifier:':
                name: getText
            '-detailTextForGuidedAccessRestrictionWithIdentifier:':
                name: getDetailText
    UIImagePickerControllerDelegate: # DONE
        protocols: [UINavigationControllerDelegate]
        methods:
            '-imagePickerController:didFinishPickingMediaWithInfo:':
                name: didFinishPickingMedia
                parameters:
                    info:
                        type: UIImagePickerControllerEditingInfo
            '-imagePickerControllerDidCancel:':
                name: didCancel
            '-imagePickerController:didFinishPickingImage:editingInfo:':
                name: didFinishPickingImage
                parameters:
                    editingInfo:
                        type: UIImagePickerControllerEditingInfo
    UIKeyInput: # DONE
        methods:
            '-insertText:':
                name: insertText
    UILayoutSupport: {} # DONE
    UINavigationBarDelegate: # DONE
        methods:
            '-navigationBar:didPopItem:':
                name: didPopItem
            '-navigationBar:didPushItem:':
                name: didPushItem
            '-navigationBar:shouldPopItem:':
                name: shouldPopItem
            '-navigationBar:shouldPushItem:':
                name: shouldPushItem
    UINavigationControllerDelegate: # DONE
        methods:
            '-navigationController:didShowViewController:animated:':
                name: didShowViewController
            '-navigationController:willShowViewController:animated:':
                name: willShowViewController
            '-navigationControllerPreferredInterfaceOrientationForPresentation:':
                name: getPreferredInterfaceOrientation
            '-navigationController:interactionControllerForAnimationController:':
                name: getInteractionController
            '-navigationController:animationControllerForOperation:fromViewController:toViewController:':
                name: getAnimationController
            '-navigationControllerSupportedInterfaceOrientations:':
                name: getSupportedInterfaceOrientations
    UIPageViewControllerDataSource: # DONE
        methods:
            '-pageViewController:viewControllerAfterViewController:':
                name: getViewControllerAfter
            '-pageViewController:viewControllerBeforeViewController:':
                name: getViewControllerBefore
            '-presentationCountForPageViewController:':
                name: getPresentationCount
            '-presentationIndexForPageViewController:':
                name: getPresentationIndex
    UIPageViewControllerDelegate: # DONE
        methods:
            '-pageViewController:didFinishAnimating:previousViewControllers:transitionCompleted:':
                name: didFinishAnimating
                parameters:
                    previousViewControllers:
                        type: NSArray<UIViewController>
            '-pageViewController:spineLocationForInterfaceOrientation:':
                name: getSpineLocation
            '-pageViewController:willTransitionToViewControllers:':
                name: willTransition
                parameters:
                    pendingViewControllers:
                        type: NSArray<UIViewController>
            '-pageViewControllerSupportedInterfaceOrientations:':
                name: getSupportedInterfaceOrientations
                return_type: UIInterfaceOrientationMask
            '-pageViewControllerPreferredInterfaceOrientationForPresentation:':
                name: getPreferredInterfaceOrientation
    UIPickerViewAccessibilityDelegate: # DONE
        methods:
            '-pickerView:accessibilityHintForComponent:':
                name: getAccessibilityHint
            '-pickerView:accessibilityLabelForComponent:':
                name: getAccessibilityLabel
            '-pickerView:accessibilityAttributedLabelForComponent:':
                name: getAccessibilityAttributedLabel
            '-pickerView:accessibilityAttributedHintForComponent:':
                name: getAccessibilityAttributedHint
            '-pickerView:accessibilityUserInputLabelsForComponent:':
                name: getAccessibilityUserInputLabels
            '-pickerView:accessibilityAttributedUserInputLabelsForComponent:':
                name: getAccessibilityAttributedUserInputLabels
    UIPickerViewDataSource: # DONE
        methods:
            '-numberOfComponentsInPickerView:':
                name: getNumberOfComponents
            '-pickerView:numberOfRowsInComponent:':
                name: getNumberOfRows
    UIPickerViewDelegate: # DONE
        methods:
            '-pickerView:didSelectRow:inComponent:':
                name: didSelectRow
            '-pickerView:rowHeightForComponent:':
                name: getRowHeight
            '-pickerView:titleForRow:forComponent:':
                name: getRowTitle
            '-pickerView:viewForRow:forComponent:reusingView:':
                name: getRowView
            '-pickerView:widthForComponent:':
                name: getComponentWidth
            '-pickerView:attributedTitleForRow:forComponent:':
                name: getAttributedRowTitle
    UIPopoverControllerDelegate: # DONE
        methods:
            '-popoverControllerDidDismissPopover:':
                name: didDismiss
            '-popoverControllerShouldDismissPopover:':
                name: shouldDismiss
            '-popoverController:willRepositionPopoverToRect:inView:':
                name: willReposition
    UIPopoverPresentationControllerDelegate: # DONE
        methods:
            '-prepareForPopoverPresentation:':
                trim_after_first_colon: true
            '-popoverPresentationControllerShouldDismissPopover:':
                name: shouldDismissPopover
            '-popoverPresentationControllerDidDismissPopover:':
                name: didDismissPopover
            '-popoverPresentationController:willRepositionPopoverToRect:inView:':
                name: willRepositionPopover
    UIPreviewActionItem: {} # DONE
    UIPreviewInteractionDelegate: # DONE
        methods:
            '-previewInteraction:didUpdatePreviewTransition:ended:':
                name: didUpdatePreviewTransition
            '-previewInteractionDidCancel:':
                name: didCancel
            '-previewInteractionShouldBegin:':
                name: shouldBegin
            '-previewInteraction:didUpdateCommitTransition:ended:':
                name: didUpdateCommitTransition
    UIPrintInteractionControllerDelegate: # DONE
        methods:
            '-printInteractionController:choosePaper:':
                name: choosePaper
                parameters:
                    paperList:
                        type: NSArray<UIPrintPaper>
            '-printInteractionControllerDidDismissPrinterOptions:':
                name: didDismissPrinterOptions
            '-printInteractionControllerDidFinishJob:':
                name: didFinishJob
            '-printInteractionControllerDidPresentPrinterOptions:':
                name: didPresentPrinterOptions
            '-printInteractionControllerParentViewController:':
                name: getParentViewController
            '-printInteractionControllerWillDismissPrinterOptions:':
                name: willDismissPrinterOptions
            '-printInteractionControllerWillPresentPrinterOptions:':
                name: willPresentPrinterOptions
            '-printInteractionControllerWillStartJob:':
                name: willStartJob
            '-printInteractionController:cutLengthForPaper:':
                name: getCutLength
            '-printInteractionController:chooseCutterBehavior:':
                name: chooseCutterBehavior
                parameters:
                    availableBehaviors:
                        type: List<UIPrinterCutterBehavior>
                        marshaler: UIPrinterCutterBehavior.AsListMarshaler
    UIPrinterPickerControllerDelegate: # DONE
        methods:
            '-printerPickerControllerParentViewController:':
                name: getParentViewController
            '-printerPickerController:shouldShowPrinter:':
                name: shouldShowPrinter
            '-printerPickerControllerWillPresent:':
                name: willPresent
            '-printerPickerControllerDidPresent:':
                name: didPresent
            '-printerPickerControllerWillDismiss:':
                name: willDismiss
            '-printerPickerControllerDidDismiss:':
                name: didDismiss
            '-printerPickerControllerDidSelectPrinter:':
                name: didSelectPrinter
    UIScrollViewDelegate: # DONE
        methods:
            '-scrollViewDidEndDecelerating:':
                name: didEndDecelerating
            '-scrollViewDidEndDragging:willDecelerate:':
                name: didEndDragging
            '-scrollViewDidEndScrollingAnimation:':
                name: didEndScrollingAnimation
            '-scrollViewDidEndZooming:withView:atScale:':
                name: didEndZooming
            '-scrollViewDidScroll:':
                name: didScroll
            '-scrollViewDidScrollToTop:':
                name: didScrollToTop
            '-scrollViewDidZoom:':
                name: didZoom
            '-scrollViewShouldScrollToTop:':
                name: shouldScrollToTop
            '-scrollViewWillBeginDecelerating:':
                name: willBeginDecelerating
            '-scrollViewWillBeginDragging:':
                name: willBeginDragging
            '-scrollViewWillBeginZooming:withView:':
                name: willBeginZooming
            '-scrollViewWillEndDragging:withVelocity:targetContentOffset:':
                name: willEndDragging
            '-viewForZoomingInScrollView:':
                name: getViewForZooming
    UISearchBarDelegate: # DONE
        methods:
            '-searchBar:selectedScopeButtonIndexDidChange:':
                name: selectedScopeButtonIndexDidChange
            '-searchBar:shouldChangeTextInRange:replacementText:':
                name: shouldChange
            '-searchBar:textDidChange:':
                name: didChange
            '-searchBarBookmarkButtonClicked:':
                name: bookmarkButtonClicked
            '-searchBarCancelButtonClicked:':
                name: cancelButtonClicked
            '-searchBarResultsListButtonClicked:':
                name: resultsListButtonClicked
            '-searchBarSearchButtonClicked:':
                name: searchButtonClicked
            '-searchBarShouldBeginEditing:':
                name: shouldBeginEditing
            '-searchBarShouldEndEditing:':
                name: shouldEndEditing
            '-searchBarTextDidBeginEditing:':
                name: didBeginEditing
            '-searchBarTextDidEndEditing:':
                name: didEndEditing
    UISearchControllerDelegate: # DONE
        methods:
            '-willPresentSearchController:':
                name: willPresent
            '-didPresentSearchController:':
                name: didPresent
            '-willDismissSearchController:':
                name: willDismiss
            '-didDismissSearchController:':
                name: didDismiss
            '-presentSearchController:':
                name: present
    UISearchDisplayDelegate: # DONE
        methods:
            '-searchDisplayController:didHideSearchResultsTableView:':
                name: didHideSearchResults
            '-searchDisplayController:didLoadSearchResultsTableView:':
                name: didLoadSearchResults
            '-searchDisplayController:didShowSearchResultsTableView:':
                name: didShowSearchResults
            '-searchDisplayController:shouldReloadTableForSearchScope:':
                name: shouldReloadForSearchScope
            '-searchDisplayController:shouldReloadTableForSearchString:':
                name: shouldReloadForSearchString
            '-searchDisplayController:willHideSearchResultsTableView:':
                name: willHideSearchResults
            '-searchDisplayController:willUnloadSearchResultsTableView:':
                name: willUnloadSearchResults
            '-searchDisplayController:willShowSearchResultsTableView:':
                name: willShowSearchResults
            '-searchDisplayControllerDidBeginSearch:':
                name: didBeginSearch
            '-searchDisplayControllerDidEndSearch:':
                name: didEndSearch
            '-searchDisplayControllerWillBeginSearch:':
                name: willBeginSearch
            '-searchDisplayControllerWillEndSearch:':
                name: willEndSearch
    UISearchResultsUpdating: # DONE
        methods:
            '-updateSearchResultsForSearchController:':
                name: updateSearchResults
    UISplitViewControllerDelegate: # DONE
        methods:
            '-splitViewController:popoverController:willPresentViewController:':
                name: willPresentViewController
            '-splitViewController:shouldHideViewController:inOrientation:':
                name: shouldHideViewController
            '-splitViewController:willHideViewController:withBarButtonItem:forPopoverController:':
                name: willHideViewController
            '-splitViewController:willShowViewController:invalidatingBarButtonItem:':
                name: willShowViewController
            '-splitViewControllerSupportedInterfaceOrientations:':
                name: getSupportedInterfaceOrientations
            '-splitViewControllerPreferredInterfaceOrientationForPresentation:':
                name: getPreferredInterfaceOrientation
            '-splitViewController:willChangeToDisplayMode:':
                name: willChangeToDisplayMode
            '-targetDisplayModeForActionInSplitViewController:':
                name: getTargetDisplayMode
            '-splitViewController:showViewController:sender:':
                name: showViewController
            '-splitViewController:showDetailViewController:sender:':
                name: showDetailViewController
            '-primaryViewControllerForCollapsingSplitViewController:':
                name: getPrimaryViewControllerForCollapsing
            '-primaryViewControllerForExpandingSplitViewController:':
                name: getPrimaryViewControllerForExpanding
            '-splitViewController:collapseSecondaryViewController:ontoPrimaryViewController:':
                name: collapseSecondaryViewController
            '-splitViewController:separateSecondaryViewControllerFromPrimaryViewController:':
                name: separateSecondaryViewController
            '-splitViewController:topColumnForCollapsingToProposedTopColumn:':
                name: getTopColumnForCollapsingToProposedTopColumn
            '-splitViewController:displayModeForExpandingToProposedDisplayMode:':
                name: getDisplayModeForExpandingToProposedDisplayMode
            '-splitViewController:willShowColumn:':
                name: willShowColumn
            '-splitViewController:willHideColumn:':
                name: willHideColumn
            '-splitViewControllerDidCollapse:':
                name: didCollapse
            '-splitViewControllerDidExpand:':
                name: didExpand
            '-splitViewControllerInteractivePresentationGestureWillBegin:':
                name: interactivePresentationGestureWillBegin
            '-splitViewControllerInteractivePresentationGestureDidEnd:':
                name: interactivePresentationGestureDidEnd
    UIStateRestoring: # DONE
        methods:
            '-decodeRestorableStateWithCoder:':
                name: decodeRestorableState
            '-encodeRestorableStateWithCoder:':
                name: encodeRestorableState
    UITabBarControllerDelegate: # DONE
        methods:
            '-tabBarController:didEndCustomizingViewControllers:changed:':
                name: didEndCustomizingViewControllers
                parameters:
                    viewControllers:
                        type: NSArray<UIViewController>
            '-tabBarController:didSelectViewController:':
                name: didSelectViewController
            '-tabBarController:shouldSelectViewController:':
                name: shouldSelectViewController
            '-tabBarController:willBeginCustomizingViewControllers:':
                name: willBeginCustomizingViewControllers
                parameters:
                    viewControllers:
                        type: NSArray<UIViewController>
            '-tabBarController:willEndCustomizingViewControllers:changed:':
                name: willEndCustomizingViewControllers
                parameters:
                    viewControllers:
                        type: NSArray<UIViewController>
            '-tabBarControllerSupportedInterfaceOrientations:':
                name: getSupportedInterfaceOrientations
                return_type: UIInterfaceOrientation
            '-tabBarControllerPreferredInterfaceOrientationForPresentation:':
                name: getPreferredInterfaceOrientation
            '-tabBarController:interactionControllerForAnimationController:':
                name: getInteractionController
            '-tabBarController:animationControllerForTransitionFromViewController:toViewController:':
                name: getAnimationController
    UITabBarDelegate: # DONE
        methods:
            '-tabBar:didBeginCustomizingItems:':
                name: didBeginCustomizingItems
                parameters:
                    items:
                        type: NSArray<UITabBarItem>
            '-tabBar:didEndCustomizingItems:changed:':
                name: didEndCustomizingItems
                parameters:
                    items:
                        type: NSArray<UITabBarItem>
            '-tabBar:didSelectItem:':
                name: didSelectItem
            '-tabBar:willBeginCustomizingItems:':
                name: willBeginCustomizingItems
                parameters:
                    items:
                        type: NSArray<UITabBarItem>
            '-tabBar:willEndCustomizingItems:changed:':
                name: willEndCustomizingItems
                parameters:
                    items:
                        type: NSArray<UITabBarItem>
    UITableViewDataSource: # DONE
        methods:
            '-numberOfSectionsInTableView:':
                name: getNumberOfSections
            '-sectionIndexTitlesForTableView:':
                name: getSectionIndexTitles
                return_type: List<String>
                return_marshaler: NSArray.AsStringListMarshaler
            '-tableView:commitEditingStyle:forRowAtIndexPath:':
                name: commitEditingStyleForRow
            '-tableView:canMoveRowAtIndexPath:':
                name: canMoveRow
            '-tableView:cellForRowAtIndexPath:':
                name: getCellForRow
            '-tableView:canEditRowAtIndexPath:':
                name: canEditRow
            '-tableView:moveRowAtIndexPath:toIndexPath:':
                name: moveRow
            '-tableView:numberOfRowsInSection:':
                name: getNumberOfRowsInSection
            '-tableView:sectionForSectionIndexTitle:atIndex:':
                name: getSectionForSectionIndexTitle
            '-tableView:titleForFooterInSection:':
                name: getTitleForFooter
            '-tableView:titleForHeaderInSection:':
                name: getTitleForHeader
    UITableViewDataSourcePrefetching: # DONE
        methods:
            '-tableView:prefetchRowsAtIndexPaths:':
                name: prefetchRows
            '-tableView:cancelPrefetchingForRowsAtIndexPaths:':
                name: cancelPrefetchingForRows
    UITableViewDelegate: # DONE
        methods:
            '-tableView:accessoryButtonTappedForRowWithIndexPath:':
                name: accessoryButtonTapped
            '-tableView:canPerformAction:forRowAtIndexPath:withSender:':
                name: canPerformAction
            '-tableView:didDeselectRowAtIndexPath:':
                name: didDeselectRow
            '-tableView:didEndEditingRowAtIndexPath:':
                name: didEndEditingRow
            '-tableView:didSelectRowAtIndexPath:':
                name: didSelectRow
            '-tableView:editingStyleForRowAtIndexPath:':
                name: getEditingStyleForRow
            '-tableView:heightForFooterInSection:':
                name: getHeightForFooter
            '-tableView:heightForHeaderInSection:':
                name: getHeightForHeader
            '-tableView:heightForRowAtIndexPath:':
                name: getHeightForRow
            '-tableView:indentationLevelForRowAtIndexPath:':
                name: getIndentationLevelForRow
            '-tableView:performAction:forRowAtIndexPath:withSender:':
                name: performActionForRow
            '-tableView:shouldIndentWhileEditingRowAtIndexPath:':
                name: shouldIndentWhileEditingRow
            '-tableView:shouldShowMenuForRowAtIndexPath:':
                name: shouldShowMenuForRow
            '-tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:':
                name: getTargetForMove
            '-tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:':
                name: getTitleForDeleteConfirmationButton
            '-tableView:viewForFooterInSection:':
                name: getViewForFooter
            '-tableView:viewForHeaderInSection:':
                name: getViewForHeader
            '-tableView:willBeginEditingRowAtIndexPath:':
                name: willBeginEditingRow
            '-tableView:willDeselectRowAtIndexPath:':
                name: willDeselectRow
            '-tableView:willDisplayCell:forRowAtIndexPath:':
                name: willDisplayCell
            '-tableView:willSelectRowAtIndexPath:':
                name: willSelectRow
            '-tableView:didUnhighlightRowAtIndexPath:':
                name: didUnhighlightRow
            '-tableView:didEndDisplayingFooterView:forSection:':
                name: didEndDisplayingFooterView
            '-tableView:shouldHighlightRowAtIndexPath:':
                name: shouldHighlightRow
            '-tableView:didEndDisplayingCell:forRowAtIndexPath:':
                name: didEndDisplayingCell
            '-tableView:didEndDisplayingHeaderView:forSection:':
                name: didEndDisplayingHeaderView
            '-tableView:didHighlightRowAtIndexPath:':
                name: didHighlightRow
            '-tableView:willDisplayFooterView:forSection:':
                name: willDisplayFooterView
            '-tableView:willDisplayHeaderView:forSection:':
                name: willDisplayHeaderView
            '-tableView:estimatedHeightForRowAtIndexPath:':
                name: getEstimatedHeightForRow
            '-tableView:estimatedHeightForHeaderInSection:':
                name: getEstimatedHeightForHeader
            '-tableView:estimatedHeightForFooterInSection:':
                name: getEstimatedHeightForFooter
            '-tableView:accessoryTypeForRowWithIndexPath:':
                name: getAccessoryTypeForRow
            '-tableView:editActionsForRowAtIndexPath:':
                name: getEditActionsForRow
                return_type: NSArray<UITableViewRowAction>
            '-tableView:canFocusRowAtIndexPath:':
                name: canFocusRow
                default: true
            '-tableView:shouldUpdateFocusInContext:':
                name: shouldUpdateFocus
                default: true
            '-tableView:didUpdateFocusInContext:withAnimationCoordinator:':
                name: didUpdateFocus
            '-indexPathForPreferredFocusedViewInTableView:':
                name: getIndexPathForPreferredFocusedView
            '-tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:':
                name: getLeadingSwipeActionsConfigurationForRow
            '-tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:':
                name: getTrailingSwipeActionsConfigurationForRow
            '-tableView:shouldSpringLoadRowAtIndexPath:withContext:':
                name: shouldSpringLoadRow
            '-tableView:shouldBeginMultipleSelectionInteractionAtIndexPath:':
                name: shouldBeginMultipleSelectionInteraction
            '-tableView:didBeginMultipleSelectionInteractionAtIndexPath:':
                name: didBeginMultipleSelectionInteraction
            '-tableView:contextMenuConfigurationForRowAtIndexPath:point:':
                name: getContextMenuConfiguration
            '-tableView:previewForHighlightingContextMenuWithConfiguration:':
                name: getPreviewForHighlightingContextMenu
            '-tableView:previewForDismissingContextMenuWithConfiguration:':
                name: getPreviewForDismissingContextMenu
            '-tableView:willCommitMenuWithAnimator:':
                name: willCommitMenu
            '-tableView:willPerformPreviewActionForMenuWithConfiguration:animator:':
                name: willPerformPreviewAction
            '-tableView:willDisplayContextMenuWithConfiguration:animator:':
                name: willDisplayContextMenu
            '-tableView:willEndContextMenuInteractionWithConfiguration:animator:':
                name: willEndContextMenuInteraction
            '-tableView:selectionFollowsFocusForRowAtIndexPath:':
                name: isSelectionFollowsFocus

    UITextDocumentProxy: # DONE
        methods:
            '-adjustTextPositionByCharacterOffset:':
                name: adjustTextPosition
            '-setMarkedText:selectedRange:':
                name: setMarkedText
    UITextFieldDelegate: # DONE
        methods:
            '-textField:shouldChangeCharactersInRange:replacementString:':
                name: shouldChangeCharacters
                default: true
            '-textFieldDidBeginEditing:':
                name: didBeginEditing
            '-textFieldDidEndEditing.*':
                name: didEndEditing
            '-textFieldShouldBeginEditing:':
                name: shouldBeginEditing
                default: true
            '-textFieldShouldClear:':
                name: shouldClear
                default: true
            '-textFieldShouldEndEditing:':
                name: shouldEndEditing
                default: true
            '-textFieldShouldReturn:':
                name: shouldReturn
                default: true
    UITextInput: # DONE
        properties:
            'markedTextStyle':
                type: UITextInputTextStyle
        methods:
            '-baseWritingDirectionForPosition:inDirection:':
                name: getBaseWritingDirection
            '-caretRectForPosition:':
                name: getCaretRect
            '-characterOffsetOfPosition:withinRange:':
                name: getCharacterOffset
            '-characterRangeAtPoint:':
                name: getCharacterRange
            '-characterRangeByExtendingPosition:inDirection:':
                name: getCharacterRange
            '-closestPositionToPoint:':
                name: getClosestPosition
            '-closestPositionToPoint:withinRange:':
                name: getClosestPosition
            '-comparePosition:toPosition:':
                name: comparePositions
            '-firstRectForRange:':
                name: getFirstRect
            '-offsetFromPosition:toPosition:':
                name: getOffset
            '-positionFromPosition:offset:':
                name: getPosition
            '-positionFromPosition:inDirection:offset:':
                name: getPosition
            '-positionWithinRange:farthestInDirection:':
                name: getPosition
            '-positionWithinRange:atCharacterOffset:':
                name: getPosition
            '-replaceRange:withText:':
                name: replaceText
            '-textInRange:':
                name: getText
            '-textRangeFromPosition:toPosition:':
                name: getTextRange
            '-textStylingAtPosition:inDirection:':
                name: getTextStyling
                return_type: UITextInputTextStyle
            '-frameForDictationResultPlaceholder:':
                name: getDictationResultPlaceholderFrame
            '-selectionRectsForRange:':
                name: getSelectionRects
                return_type: NSArray<UITextSelectionRect>
            '-shouldChangeTextInRange:replacementText:':
                name: shouldChangeText
            '-setMarkedText:selectedRange:':
                name: setMarkedText
            '-setBaseWritingDirection:forRange:':
                name: setBaseWritingDirection
            '-insertDictationResult:':
                name: insertDictationResult
                parameters:
                    dictationResult:
                        type: NSArray<UIDictationPhrase>
            '-removeDictationResultPlaceholder:willInsertResult:':
                name: removeDictationResultPlaceholder
            '-beginFloatingCursorAtPoint:':
                name: beginFloatingCursor
            '-updateFloatingCursorAtPoint:':
                name: updateFloatingCursor
            '-insertText:alternatives:style:':
                name: insertText
            '-setAttributedMarkedText:selectedRange:':
                name: setAttributedMarkedText
            '-insertTextPlaceholderWithSize:':
                name: insertTextPlaceholder
    UITextInputDelegate: # DONE
        methods:
            '-selectionWillChange:':
                name: selectionWillChange
            '-selectionDidChange:':
                name: selectionDidChange
            '-textWillChange:':
                name: textWillChange
            '-textDidChange:':
                name: textDidChange
    UITextInputTokenizer: # DONE
        methods:
            '-positionFromPosition:toBoundary:inDirection:':
                name: getPosition
                parameters:
                    direction:
                        type: UITextDirection
            '-rangeEnclosingPosition:withGranularity:inDirection:':
                name: getRangeEnclosingPosition
                parameters:
                    direction:
                        type: UITextDirection
            '-isPosition:atBoundary:inDirection:':
                name: isPositionAtBoundary
                parameters:
                    direction:
                        type: UITextDirection
            '-isPosition:withinTextUnit:inDirection:':
                name: isPositionWithinTextUnit
                parameters:
                    direction:
                        type: UITextDirection
    UITextInputTraits: {} # DONE
    UITextViewDelegate: # DONE
        methods:
            '-textView:shouldChangeTextInRange:replacementText:':
                name: shouldChangeCharacters
            '-textViewDidBeginEditing:':
                name: didBeginEditing
            '-textViewDidChange:':
                name: didChange
            '-textViewDidChangeSelection:':
                name: didChangeSelection
            '-textViewDidEndEditing:':
                name: didEndEditing
            '-textViewShouldBeginEditing:':
                name: shouldBeginEditing
            '-textViewShouldEndEditing:':
                name: shouldEndEditing
            '-textView:shouldInteractWithURL:inRange.*':
                name: shouldInteractWithURL
            '-textView:shouldInteractWithTextAttachment:inRange.*':
                name: shouldInteractWithTextAttachment
    UITimingCurveProvider: {} # DONE
    UIToolbarDelegate: {} # DONE
    UITraitEnvironment: # DONE
        methods:
            '-traitCollectionDidChange:':
                trim_after_first_colon: true
    UIVideoEditorControllerDelegate: # DONE
        protocols: [UINavigationControllerDelegate]
        methods:
            '-videoEditorController:didFailWithError:':
                name: didFail
            '-videoEditorController:didSaveEditedVideoToPath:':
                name: didSave
            '-videoEditorControllerDidCancel:':
                name: didCancel
    UIViewAnimating: # DONE
        methods:
            '-startAnimationAfterDelay:':
                name: startAnimation
            '-stopAnimation:':
                trim_after_first_colon: true
            '-finishAnimationAtPosition:':
                name: finishAnimation
    UIViewImplicitlyAnimating: # DONE
        methods:
            '-addAnimations.*':
                trim_after_first_colon: true
            '-addCompletion:':
                trim_after_first_colon: true
            '-continueAnimationWithTimingParameters:durationFactor:':
                name: continueAnimation
    UIViewControllerAnimatedTransitioning: # DONE
        methods:
            '-transitionDuration:':
                name: getTransitionDuration
            '-animateTransition:':
                name: animateTransition
            '-animationEnded:':
                name: animationEnded
            '-interruptibleAnimatorForTransition:':
                name: getInterruptibleAnimator
    UIViewControllerContextTransitioning: # DONE
        methods:
            '-updateInteractiveTransition:':
                name: updateInteractiveTransition
            '-completeTransition:':
                name: completeTransition
            '-viewControllerForKey:':
                name: getViewController
                parameters:
                    key:
                        type: UITransitionContextViewControllerType
            '-initialFrameForViewController:':
                name: getInitialFrame
            '-finalFrameForViewController:':
                name: getFinalFrame
            '-viewForKey:':
                name: getView
                parameters:
                    key:
                        type: UITransitionContextViewType
    UIViewControllerInteractiveTransitioning: # DONE
        methods:
            '-completion(Speed|Curve)':
                property: true
            '-startInteractiveTransition:':
                name: startInteractiveTransition
    UIViewControllerPreviewingDelegate: # DONE
        methods:
            '-previewingContext:commitViewController:':
                name: commitViewController
            '-previewingContext:viewControllerForLocation:':
                name: getViewControllerForLocation
    UIViewControllerPreviewing: {} # DONE
    UIViewControllerTransitionCoordinator: # DONE
        methods:
            '-animateAlongsideTransition:completion:':
                name: animateAlongsideTransition
            '-animateAlongsideTransitionInView:animation:completion:':
                name: animateAlongsideTransition
            '-notifyWhenInteractionEndsUsingBlock:':
                name: notifyWhenInteractionEnds
            '-notifyWhenInteractionChangesUsingBlock:':
                name: notifyWhenInteractionChanges
    UIViewControllerTransitionCoordinatorContext: # DONE
        methods:
            '-(presentationStyle|initiallyInteractive|transitionDuration|percentComplete|completionVelocity|completionCurve|containerView|targetTransform)':
                property: true
            '-viewControllerForKey:':
                name: getViewController
            '-viewForKey:':
                name: getView
    UIViewControllerTransitioningDelegate: # DONE
        methods:
            '-animationControllerForPresentedController:presentingController:sourceController:':
                name: getAnimationControllerForPresentedController
            '-animationControllerForDismissedController:':
                name: getAnimationControllerForDismissedController
            '-interactionControllerForPresentation:':
                name: getInteractionControllerForPresentation
            '-interactionControllerForDismissal:':
                name: getInteractionControllerForDismissal
            '-presentationControllerForPresentedViewController:presentingViewController:sourceViewController:':
                name: getPresentationControllerForPresentedViewController
    UIWebViewDelegate: # DONE
        methods:
            '-webView:didFailLoadWithError:':
                name: didFailLoad
            '-webView:shouldStartLoadWithRequest:navigationType:':
                name: shouldStartLoad
                default: true
            '-webViewDidFinishLoad:':
                name: didFinishLoad
            '-webViewDidStartLoad:':
                name: didStartLoad

    # Informal protocols (categories)
    UIAccessibility: # DONE
        properties:
            'isAccessibilityElement':
                name: accessibilityElement
            'accessibilityElementsHidden':
                name: accessibilityElementsHidden
                getter: areAccessibilityElementsHidden
            'accessibilityViewIsModal':
                name: accessibilityViewModal
    UIAccessibilityAction: # DONE
        properties:
            'accessibilityCustomActions':
                type: NSArray<UIAccessibilityCustomAction>
        methods:
            '-accessibility(.*):':
                name: '#{g[0][0].downcase}#{g[0][1..-1]}'
            '-accessibility(.*)':
                name: '#{g[0][0].downcase}#{g[0][1..-1]}'   
    UIAccessibilityContainer: # DONE
        properties:
            'accessibilityElements':
                type: NSArray<UIAccessibilityElement>
        methods:
            '-accessibilityElementCount':
                property: true
            '-accessibilityElementAtIndex:':
                name: getAccessibilityElement
                return_type: UIAccessibilityElement
            '-indexOfAccessibilityElement:':
                name: indexOfAccessibilityElement
                parameters:
                    element:
                        type: UIAccessibilityElement
    UIAccessibilityFocus: # DONE
        methods:
            '-accessibilityElementDidBecomeFocused':
                name: didBecomeFocused
            '-accessibilityElementDidLoseFocus':
                name: didLoseFocus
            '-accessibilityElementIsFocused':
                name: isFocused
            '-accessibilityAssistiveTechnologyFocusedIdentifiers':
                name: getAssistiveTechnologyFocusedIdentifiers
                return_type: Set<String>
                return_marshaler: NSSet.AsStringSetMarshaler
    UINibLoadingAdditions: {} # DONE
    UIResponderStandardEditActions: # DONE
        methods:
            '-cut:':
                name: cut
            '-copy:':
                name: copy
            '-paste:':
                name: paste
            '-select:':
                name: select
            '-selectAll:':
                name: selectAll
            '-delete:':
                name: delete
            '-makeTextWritingDirectionLeftToRight:':
                name: makeTextWritingDirectionLeftToRight
            '-makeTextWritingDirectionRightToLeft:':
                name: makeTextWritingDirectionRightToLeft
            '-toggleBoldface:':
                name: toggleBoldface
            '-toggleItalics:':
                name: toggleItalics
            '-toggleUnderline:':
                name: toggleUnderline
            '-increaseSize:':
                name: increaseSize
            '-decreaseSize:':
                name: decreaseSize
            '-updateTextAttributesWithConversionHandler:':
                name: updateTextAttributes
    # ios11 binding actions
    UIAccelerometerDelegate: # it is replaced by coremotion but lets have it here for a while
        methods:
            '-accelerometer:didAccelerate:':
                name: didAccelerate
    UIAccessibilityContainerDataTable: #since 11.0
        methods:
            '-accessibilityDataTableCellElementForRow:column:':
                name: provideElement
    UIAccessibilityContainerDataTableCell: {} #since 11.0
    UIAccessibilityContentSizeCategoryImageAdjusting: {} #since 11.0
    UIAccessibilityReadingContent: {}
    UICloudSharingControllerDelegate:
        methods:
            '-cloudSharingController:failedToSaveShareWithError:':
                name: failedToSaveShare

    UICollectionViewDragDelegate: #since 11.0
        methods:
            '-collectionView:itemsForBeginningDragSession:atIndexPath:':
                name: itemsForBeginningDragSession
            '-collectionView:itemsForAddingToDragSession:atIndexPath:point:':
                name: itemsForAddingToDragSession
            '-collectionView:dragPreviewParametersForItemAtIndexPath:':
                name: dragPreviewParametersForItem
            '-collectionView:dragSessionWillBegin:':
                name: dragSessionWillBegin
            '-collectionView:dragSessionDidEnd:':
                name: dragSessionDidEnd
            '-collectionView:dragSessionAllowsMoveOperation:':
                name: dragSessionAllowsMoveOperation
            '-collectionView:dragSessionIsRestrictedToDraggingApplication:':
                name: dragSessionIsRestrictedToDraggingApplication
    UICollectionViewDropCoordinator: #since 11.0
        methods:
            '-dropItem:toPlaceholder:':
                name: dropItem
            '-dropItem:toItemAtIndexPath:':
                name: dropItem
            '-dropItem:intoItemAtIndexPath:rect:':
                name: dropItemIntoItem
            '-dropItem:toTarget:':
                name: dropItemToTarget
    UICollectionViewDropDelegate: #since 11.0
        methods:
            '-collectionView:performDropWithCoordinator:':
                name: performDrop
            '-collectionView:canHandleDropSession:':
                name: canHandleDropSession
            '-collectionView:dropSessionDidEnter:':
                name: dropSessionDidEnter
            '-collectionView:dropSessionDidUpdate:withDestinationIndexPath:':
                name: dropSessionDidUpdate
            '-collectionView:dropSessionDidExit:':
                name: dropSessionDidExit
            '-collectionView:dropSessionDidEnd:':
                name: dropSessionDidEnd
            '-collectionView:dropPreviewParametersForItemAtIndexPath:':
                name: dropPreviewParameters
    UICollectionViewDropItem: {} #since 11.0
    UICollectionViewDropPlaceholderContext: #since 11.0
        methods:
            '-commitInsertionWithDataSourceUpdates:':
                name: commitInsertion
    UIContentContainer:
        methods:
            '-sizeForChildContentContainer:withParentContainerSize:':
                name: sizeForChildContentContainer
            '-viewWillTransitionToSize:withTransitionCoordinator:':
                name: viewWillTransitionToSize
            '-willTransitionToTraitCollection:withTransitionCoordinator:':
                name: willTransitionToTraitCollection
    UIContentSizeCategoryAdjusting: {} #since 10.0
    UIDataSourceTranslating: {} #since 11.0
    UIDragAnimating: {} #since 11.0
    UIDragDropSession: {} #since 11.0
    UIDragInteractionDelegate: #since 11.0
        methods:
            '-dragInteraction:itemsForBeginningSession:':
                name: itemsForBeginningSession
            '-dragInteraction:previewForLiftingItem:session:':
                name: previewForLiftingItem
            '-dragInteraction:willAnimateLiftWithAnimator:session:':
                name: willAnimateLift
            '-dragInteraction:sessionWillBegin:':
                name: sessionWillBegin
            '-dragInteraction:sessionAllowsMoveOperation:':
                name: sessionAllowsMoveOperation
            '-dragInteraction:sessionIsRestrictedToDraggingApplication:':
                name: sessionIsRestrictedToDraggingApplication
            '-dragInteraction:prefersFullSizePreviewsForSession:':
                name: prefersFullSizePreviews
            '-dragInteraction:sessionDidMove:':
                name: sessionDidMove
            '-dragInteraction:session:willEndWithOperation:':
                name: sessionWillEnd
            '-dragInteraction:session:didEndWithOperation:':
                name: sessionDidEnd
            '-dragInteraction:sessionDidTransferItems:':
                name: sessionDidTransferItems
            '-dragInteraction:itemsForAddingToSession:withTouchAtPoint:':
                name: itemsForAddingToSession
            '-dragInteraction:sessionForAddingItems:withTouchAtPoint:':
                name: sessionForAddingItems
            '-dragInteraction:session:willAddItems:forInteraction:':
                name: sessionWillAddItems
            '-dragInteraction:previewForCancellingItem:withDefault:':
                name: previewForCancellingItem
            '-dragInteraction:item:willAnimateCancelWithAnimator:':
                name: itemWillAnimateCancel
    UIDragSession: {} #since 11.0
    UIDropInteractionDelegate: #since 11.0
        methods:
            '-dropInteraction:canHandleSession:':
                name: canHandleSession
            '-dropInteraction:sessionDidEnter:':
                name: sessionDidEnter
            '-dropInteraction:sessionDidUpdate:':
                name: sessionDidUpdate
            '-dropInteraction:sessionDidExit:':
                name: sessionDidExit
            '-dropInteraction:performDrop:':
                name: performDrop
            '-dropInteraction:concludeDrop:':
                name: concludeDrop
            '-dropInteraction:sessionDidEnd:':
                name: sessionDidEnd
            '-dropInteraction:previewForDroppingItem:withDefault:':
                name: previewForDroppingItem
            '-dropInteraction:item:willAnimateDropWithAnimator:':
                name: itemWillAnimateDrop
    UIDropSession: #since 11.0
        methods:
            '-loadObjectsOfClass:completion:':
                name: loadObjects
    UIFocusAnimationContext: {} #since 11.0
    UIFocusDebuggerOutput: {} #since 11.0
    UIInteraction: {} #since 11.0
    UIItemProviderPresentationSizeProviding: {} #since 11.0
    UIObjectRestoration:
        methods:
            '+objectWithRestorationIdentifierPath:coder:':
                name: objectWithRestorationIdentifier
    UIPasteConfigurationSupporting: {} #since 11.0
    UIPopoverBackgroundViewMethods: {}
    UIScrollViewAccessibilityDelegate: {}
    UISpringLoadedInteractionBehavior: #since 11.0
        methods:
            '-shouldAllowInteraction:withContext:':
                trim_after_first_colon: true
    UISpringLoadedInteractionContext: {} #since 11.0
    UISpringLoadedInteractionEffect: #since 11.0
        methods:
            '-interaction:didChangeWithContext:':
                name: didChange
    UISpringLoadedInteractionSupporting: {} #since 11.0
    UITableViewDragDelegate: #since 11.0
        methods:
            '-tableView:itemsForBeginningDragSession:atIndexPath:':
                name: itemsForBeginningDragSession
            '-tableView:itemsForAddingToDragSession:atIndexPath:point:':
                name: itemsForAddingToDragSession
            '-tableView:dragPreviewParametersForRowAtIndexPath:':
                name: dragPreviewParametersForRow
            '-tableView:dragSessionWillBegin:':
                name: dragSessionWillBegin
            '-tableView:dragSessionDidEnd:':
                name: dragSessionDidEnd
            '-tableView:dragSessionAllowsMoveOperation:':
                name: dragSessionAllowsMoveOperation
            '-tableView:dragSessionIsRestrictedToDraggingApplication:':
                name: dragSessionIsRestrictedToDraggingApplication
    UITableViewDropCoordinator: #since 11.0
        methods:
            '-dropItem:toPlaceholder:':
                name: dropItem
            '-dropItem:toRowAtIndexPath:':
                name: dropItem
            '-dropItem:intoRowAtIndexPath:rect:':
                name: dropItem
            '-dropItem:toTarget:':
                name: dropItem
    UITableViewDropDelegate: #since 11.0
        methods:
            '-tableView:performDropWithCoordinator:':
                name: performDrop
            '-tableView:canHandleDropSession:':
                name: canHandleDropSession
            '-tableView:dropSessionDidEnter:':
                name: dropSessionDidEnter
            '-tableView:dropSessionDidUpdate:withDestinationIndexPath:':
                name: dropSessionDidUpdate
            '-tableView:dropSessionDidExit:':
                name: dropSessionDidExit
            '-tableView:dropSessionDidEnd:':
                name: dropSessionDidEnd
            '-tableView:dropPreviewParametersForRowAtIndexPath:':
                name: dropPreviewParameters
    UITableViewDropItem: {} #since 11.0
    UITableViewDropPlaceholderContext: #since 11.0
        methods:
            '-commitInsertionWithDataSourceUpdates:':
                name: commitInsertion
    UITextDragDelegate: #since 11.0
        methods:
            '-textDraggableView:itemsForDrag:':
                name: itemsForDrag
            '-textDraggableView:dragPreviewForLiftingItem:session:':
                name: dragPreviewForLiftingItem
            '-textDraggableView:willAnimateLiftWithAnimator:session:':
                name: willAnimateLift
            '-textDraggableView:dragSessionWillBegin:':
                name: dragSessionWillBegin
            '-textDraggableView:dragSessionDidEnd:withOperation:':
                name: dragSessionDidEnd
    UITextDragRequest: {} #since 11.0
    UITextDraggable: {} #since 11.0
    UITextDropDelegate: #since 11.0
        methods:
            '-textDroppableView:willBecomeEditableForDrop:':
                name: willBecomeEditableForDrop
            '-textDroppableView:proposalForDrop:':
                name: proposalForDrop
            '-textDroppableView:willPerformDrop:':
                name: willPerformDrop
            '-textDroppableView:previewForDroppingAllItemsWithDefault:':
                name: previewForDroppingAllItemsWithDefault
            '-textDroppableView:dropSessionDidEnter:':
                name: dropSessionDidEnter
            '-textDroppableView:dropSessionDidUpdate:':
                name: dropSessionDidUpdate
            '-textDroppableView:dropSessionDidExit:':
                name: dropSessionDidExit
            '-textDroppableView:dropSessionDidEnd:':
                name: dropSessionDidEnd
    UITextDropRequest: {} #since 11.0
    UITextDroppable: {} #since 11.0
    UITextPasteConfigurationSupporting: {} #since 11.0
    UITextPasteDelegate: #since 11.0
        methods:
            '-textPasteConfigurationSupporting:transformPasteItem:':
                name: transformPasteItem
            '-textPasteConfigurationSupporting:combineItemAttributedStrings:forRange:':
                name: combineItemAttributedStrings
            '-textPasteConfigurationSupporting:performPasteOfAttributedString:toRange:':
                name: performPasteOfAttributedString
            '-textPasteConfigurationSupporting:shouldAnimatePasteOfAttributedString:toRange:':
                name: shouldAnimatePasteOfAttributedString
    UITextPasteItem: {} #since 11.0

    UIViewControllerRestoration:
        methods:
            '+viewControllerWithRestorationIdentifierPath:coder:':
                name: viewControllerWithRestorationIdentifier

    UIDocumentBrowserViewControllerDelegate: #since 11.0
        methods:
            '-documentBrowser:didPickDocumentURLs:':
                name: didPickDocumentURLs
            '-documentBrowser:didPickDocumentsAtURLs:':
                name: didPickDocumentsAtURLs
            '-documentBrowser:didRequestDocumentCreationWithHandler:':
                name: didRequestDocumentCreationWithHandler
            '-documentBrowser:didImportDocumentAtURL:toDestinationURL:':
                name: didImportDocument
            '-documentBrowser:failedToImportDocumentAtURL:error:':
                name: failedToImportDocument
            '-documentBrowser:applicationActivitiesForDocumentURLs:':
                name: applicationActivities
            '-documentBrowser:willPresentActivityViewController:':
                name: willPresentActivityViewController
    UIFocusItemContainer: {} #since 12.0
    UIFocusItemScrollableContainer: {} #since 12.0
    UIInputViewAudioFeedback: {}
    UIUserActivityRestoring: {} #since 8.0
    UIPencilInteractionDelegate: {} #since 12.1
    # iOS13
    NSCollectionLayoutContainer: {} #since 13.0
    NSCollectionLayoutEnvironment: {} #since 13.0
    NSCollectionLayoutVisibleItem: {} #since 13.0
    UIActivityItemsConfigurationReading: #since 13.0
        methods:
            '-activityItemsConfigurationMetadataForItemAtIndex:key:':
                name: getItem
            '-activityItemsConfigurationPreviewForItemAtIndex:intent:suggestedSize:':
                name: getPreview
    UIContextMenuInteractionCommitAnimating: {} #since 13.0
    UIContextMenuInteractionDelegate: #since 13.0
        methods:
            '-contextMenuInteraction:configurationForMenuAtLocation:':
                name: getConfiguration
            '-contextMenuInteraction:previewForHighlightingMenuWithConfiguration:':
                name: getPreviewForHighlightingMenu
            '-contextMenuInteraction:previewForDismissingMenuWithConfiguration:':
                name: getPreviewForDismissingMenu
            '-contextMenuInteraction:willCommitWithAnimator:':
                name: willCommitWithAnimator
            '-contextMenuInteraction:willPerformPreviewActionForMenuWithConfiguration:animator:':
                name: willPerformPreviewAction
            '-contextMenuInteraction:willDisplayMenuForConfiguration:animator:':
                name: willDisplayMenu
            '-contextMenuInteraction:willEndForConfiguration:animator:':
                name: willEnd
    UIFontPickerViewControllerDelegate: {} #since 13.0
    UILargeContentViewerInteractionDelegate: #since 13.0
        methods:
            '-largeContentViewerInteraction:didEndOnItem:atPoint:':
                name: didEndOnItem
            '-largeContentViewerInteraction:itemAtPoint:':
                name: getItem
    UILargeContentViewerItem: {} #since 13.0
    UIMenuBuilder: #since 13.0
        methods:
            '-commandForAction:propertyList:':
                name: getCommand
            '-replaceMenuForIdentifier:withMenu:':
                name: replaceMenu
            '-replaceChildrenOfMenuForIdentifier:fromChildrenBlock:':
                name: replaceChildren
            '-insertSiblingMenu:beforeMenuForIdentifier:':
                name: insertSiblingMenuBefore
            '-insertSiblingMenu:afterMenuForIdentifier:':
                name: insertSiblingMenuAfter
            '-insertChildMenu:atStartOfMenuForIdentifier:':
                name: insertChildMenuAtStart
            '-insertChildMenu:atEndOfMenuForIdentifier:':
                name: insertChildMenuAtEnd
    UISceneDelegate: #since 13.0
        methods:
            '-scene:willConnectToSession:options:':
                name: willConnect
            '-scene:openURLContexts:':
                name: openURLContexts
            '-scene:willContinueUserActivityWithType:':
                name: willContinueUserActivity
            '-scene:continueUserActivity:':
                name: continueUserActivity
            '-scene:didFailToContinueUserActivityWithType:error:':
                name: didFailToContinueUserActivity
            '-scene:didUpdateUserActivity:':
                name: didUpdateUserActivity
            '-scene:restoreInteractionStateWithUserActivity:':
                name: restoreInteractionState
    UIScreenshotServiceDelegate:
        methods:
            '-screenshotService:generatePDFRepresentationWithCompletion:':
                name: generatePDFRepresentation
    UISearchTextFieldDelegate:
        methods:
            '-searchTextField:itemProviderForCopyingToken:':
                name: getItemProviderForCopyingToken
    UISearchTextFieldPasteItem: {}
    UITextFormattingCoordinatorDelegate: #since 13.0
        methods:
            '-updateTextAttributesWithConversionHandler:':
                name: updateTextAttributes
    UITextInteractionDelegate:
        methods:
            '-interactionShouldBegin:atPoint:':
                name: interactionShouldBegin
    UIWindowSceneDelegate: #since 13.0
        methods:
            '-windowScene:didUpdateCoordinateSpace:interfaceOrientation:traitCollection:':
                name: didUpdateCoordinateSpace
            '-windowScene:performActionForShortcutItem:completionHandler:':
                name: performAction
            '-windowScene:userDidAcceptCloudKitShareWithMetadata:':
                name: userDidAcceptCloudKitShare
    UIContextMenuInteractionAnimating: {} #since 13.0

    UIColorPickerViewControllerDelegate:  #since 14.0
        methods:
            '-colorPickerViewControllerDidSelectColor:':
                name: didSelectColor
            '-colorPickerViewControllerDidFinish:':
                name: didFinish
            '-colorPickerViewController:didSelectColor:continuously:':
                name: didSelectColor
    UIConfigurationState: #since 14.0
        methods:
            '-initWithTraitCollection:':
                name: init
            '-setCustomState:forKey:':
                name: setCustomState
            '-setObject:forKeyedSubscript:':
                name: setObject
    UIContentConfiguration: {} #since 14.0
    UIContentView: {} #since 14.0
    UIIndirectScribbleInteractionDelegate: #since 14.0
        methods:
            '-indirectScribbleInteraction:requestElementsInRect:completion:':
                name: requestElementsInRect
            '-indirectScribbleInteraction:isElementFocused:':
                name: isElementFocused
            '-indirectScribbleInteraction:frameForElement:':
                name: getFrame
            '-indirectScribbleInteraction:focusElementIfNeeded:referencePoint:completion:':
                name: focusElementIfNeeded
            '-indirectScribbleInteraction:shouldDelayFocusForElement:':
                name: shouldDelayFocus
            '-indirectScribbleInteraction:willBeginWritingInElement:':
                name: willBeginWritingInElement
            '-indirectScribbleInteraction:didFinishWritingInElement:':
                name: didFinishWriting
    UIPointerInteractionAnimating: {} #since 13.4
    UIPointerInteractionDelegate: #since 13.4
        methods:
            '-pointerInteraction:regionForRequest:defaultRegion:':
                name: getRegionForRequest
            '-pointerInteraction:styleForRegion:':
                name: getStyleForRegion
            '-pointerInteraction:willEnterRegion:animator:':
                name: willEnterRegion
            '-pointerInteraction:willExitRegion:animator:':
                name: willExitRegion
    UIScribbleInteractionDelegate: #since 14.0
        methods:
            '-scribbleInteraction:shouldBeginAtLocation:':
                name: shouldBegin
            '-scribbleInteractionShouldDelayFocus:':
                name: shouldDelayFocus
            '-scribbleInteractionWillBeginWriting:':
                name: willBeginWriting
            '-scribbleInteractionDidFinishWriting:':
                name: didFinishWriting

    NSTextAttachmentLayout:
        methods:
            '-imageForBounds:attributes:location:textContainer:':
                name: imageForBounds
            '-attachmentBoundsForAttributes:location:textContainer:proposedLineFragment:position:':
                name: attachmentBoundsForAttributes
            '-viewProviderForParentView:location:textContainer:':
                name: viewProviderForParentView
    NSTextContentManagerDelegate: #since 15.0
        methods:
            '-textContentManager:textElementAtLocation:':
                name: getTextElementAtLocation
            '-textContentManager:shouldEnumerateTextElement:options:':
                name: shouldEnumerateTextElement
    NSTextContentStorageDelegate: #since 15.0
        methods:
            '-textContentStorage:textParagraphWithRange:':
                name: getTextParagraph
    NSTextElementProvider: #since 15.0
        methods:
            '-enumerateTextElementsFromLocation:options:usingBlock:':
                name: enumerateTextElements
            '-replaceContentsInRange:withTextElements:':
                name: replaceContents
            '-locationFromLocation:withOffset:':
                name: getLocationFromLocation
            '-offsetFromLocation:toLocation:':
                name: getOffsetFromLocation
            '-adjustedRangeFromRange:forEditingTextSelection:':
                name: adjustedRange
    NSTextLayoutManagerDelegate: #since 15.0
        methods:
            '-textLayoutManager:textLayoutFragmentForLocation:inTextElement:':
                name: getTextLayoutFragmentForLocation
            '-textLayoutManager:shouldBreakLineBeforeLocation:hyphenating:':
                name: shouldBreakLineBeforeLocation
            '-textLayoutManager:renderingAttributesForLink:atLocation:defaultAttributes:':
                name: renderingAttributesForLink
    NSTextLocation: {} #since 15.0
    NSTextSelectionDataSource: #since 15.0
        methods:
            '-enumerateSubstringsFromLocation:options:usingBlock:':
                name: enumerateSubstringsFromLocation
            '-textRangeForSelectionGranularity:enclosingLocation:':
                name: getTextRangeForSelectionGranularity
            '-locationFromLocation:withOffset:':
                name: getLocationFromLocation
            '-offsetFromLocation:toLocation:':
                name: getOffsetFromLocation
            '-enumerateCaretOffsetsInLineFragmentAtLocation:usingBlock:':
                name: enumerateCaretOffsetsInLineFragmentAtLocation
            '-lineFragmentRangeForPoint:inContainerAtLocation:':
                name: getLineFragmentRangeForPoint
            '-enumerateContainerBoundariesFromLocation:reverse:usingBlock:':
                name: enumerateContainerBoundariesFromLocation
    NSTextStorageObserving: #since 15.0
        methods:
            '-processEditingForTextStorage:edited:range:changeInLength:invalidatedRange:':
                name: processEditingForTextStorage
            '-performEditingTransactionForTextStorage:usingBlock:':
                name: performEditingTransactionForTextStorage
    NSTextViewportLayoutControllerDelegate: #since 15.0
        methods:
            '-textViewportLayoutController:configureRenderingSurfaceForTextLayoutFragment:':
                name: configureRenderingSurfaceForTextLayoutFragment
    UIActivityItemsConfigurationProviding: {} #since 15.0
    UISheetPresentationControllerDelegate: {} #since 15.0
    UIToolTipInteractionDelegate: #since 15.0
        methods:
            '-toolTipInteraction:configurationAtPoint:':
                name: getConfigurationAtPoint

    # skipped
    UIAppearance: {exclude: true, skip_implements: true, skip_methods: true} # as functionality is implemented in UIAppearance

functions:
    # NSTextAlignment
    NSTextAlignmentToCTTextAlignment: # We use them directly in NSTextAlignment
        exclude: true
    NSTextAlignmentFromCTTextAlignment: # We use them directly in NSTextAlignment
        exclude: true 

    # UIAccessibility
    UIAccessibility(PostNotificatзion):
        class: UIAccessibilityGlobals
        name: '#{g[0]}'
        visibility: protected
    UIAccessibility(DarkerSystemColorsEnabled):
        class: UIAccessibilityGlobals
        name: 'are#{g[0]}'
    UIAccessibility(FocusedElement):
        class: UIAccessibilityGlobals
        name: 'get#{g[0]}'
    UIAccessibilityHearingDevicePairedEar:
        class: UIAccessibilityGlobals
        name: getHearingDevicePairingStatus
    UIAccessibility(.*):
        class: UIAccessibilityGlobals
        name: '#{g[0]}'

    UIApplication(Main):
        class: UIApplication
        visibility: protected
        name: '#{g[0]}'

    # UIFloatRange
    UIFloatRange(IsInfinite):
        class: UIFloatRange
        name: '#{g[0]}'
    UIFloatRangeIsEqualToRange:
        class: UIFloatRange
        name: equalsTo

    # UIGraphics
    UI(RectFill)UsingBlendMode:
        class: UIGraphics
        name: '#{g[0]}'
    UI(RectFrame)UsingBlendMode:
        class: UIGraphics
        name: '#{g[0]}'
    UIGraphics(BeginImageContext)WithOptions:
        class: UIGraphics
        name: '#{g[0]}'
    UIGraphics(BeginPDFPage)WithInfo:
        class: UIGraphics
        name: '#{g[0]}'
        parameters:
            pageInfo:
                type: CGPDFBoxOptions
    UIGraphics(.*):
        class: UIGraphics
        name: '#{g[0]}'
        parameters:
            documentInfo:
                type: CGPDFContextOptions
    UI(Rect.*):
        class: UIGraphics
        name: '#{g[0]}'

    UIGuidedAccessRestrictionStateForIdentifier:
        class: UIGuidedAccessRestriction
        name: getState

    # UIImage
    UIImage(.*)Representation:
        class: UIImage
        name: 'to#{g[0]}Data'
    UIImage(WriteToSavedPhotosAlbum):
        class: UIImage
        name: saveToPhotosAlbum
        parameters:
            contextInfo:
                type: '@Pointer long'

    # UIVideo
    UIVideoAtPath(IsCompatibleWithSavedPhotosAlbum):
        class: UIVideo
        visibility: protected
        name: '#{g[0]}'
    UISaveVideoAtPathToSavedPhotosAlbum:
        class: UIVideo
        name: saveToPhotosAlbum
        parameters:
            contextInfo:
                type: '@Pointer long'

    NSStringFrom(UI.*):
        class: '#{g[0]}'
        name: toString
        visibility: protected
        static: true
    (UI.*)FromString:
        class: '#{g[0]}'
        name: fromString
    NSStringFrom.*:
        class: UIGeometry
        name: toString
    (.*)FromString:
        class: UIGeometry
        name: 'stringTo#{g[0]}'

    UIContentSizeCategory(IsAccessibilityCategory|CompareToCategory):
        name: '#{g[0]}'
        class: UIContentSizeCategory

    UIGuidedAccessConfigureAccessibilityFeatures:
        class: UIGuidedAccess
        name: configureAccessibilityFeatures

    #ios13
    # TODO: fix this after fixing primitive types of GlobalValueEnumerations
    # - make a wrapper that take instance and pass to function, make functions private
    UIFontWeightForImageSymbolWeight:
        class: UIImageSymbolWeight
        name: toFontWeight
    # TODO: use 'static:false' configuration parameter to force it  into instance method
    UIImageSymbolWeightForFontWeight:
        class: UIFontWeight
        name: toImageSymbolWeight

    UIEventButtonMaskForButtonNumber:
        class: UIEventButtonMask
        name: fromButtonNumber

    # TODO: probably not a best option to put it inside UICellAccessory
    UICellAccessoryPosition(.*):
        class: UICellAccessory
        name: 'getPosition#{g[0]}'

    # Make sure we don't miss any functions if new ones are introduced in a later UIKit
    (CG.*):
        name: 'Function__#{g[0]}'
        class: FIXME
    (NS.*):
        name: 'Function__#{g[0]}'
        class: FIXME
    (UI.*):
        name: 'Function__#{g[0]}'
        class: FIXME

values:
    NS(TabColumnTerminators)AttributeName:
        dictionary: NSTextTabOptions
        name: '#{g[0]}'
        type: NSString
        parameters:
            TabColumnTerminators:
                name: tabColumnTerminatingCharacters
                type: NSCharacterSet
    NSTextStorage(.*Notification):
        class: NSTextStorage
        name: '#{g[0]}'
        type: NSString
    NS(.*)DocumentAttribute:
        dictionary: NSAttributedStringDocumentAttributes
        enum: NSAttributedStringDocumentAttribute
        name: '#{g[0]}'
        type: NSString
        methods:
            DocumentType:
                type: NSDocumentType
            CharacterEncoding:
                type: NSStringEncoding
            DefaultAttributes:
                type: NSAttributedStringAttributes
            PaperSize:
                type: CGSize
            PaperMargin:
                type: UIEdgeInsets
            ViewSize:
                type: CGSize
            ViewZoom:
                type: double
            ReadOnly:
                type: boolean
            BackgroundColor:
                type: UIColor
            HyphenationFactor:
                type: double
            DefaultTabInterval:
                type: double
    NS(TextLayoutSections)Attribute:
        dictionary: NSAttributedStringDocumentAttributes
        enum: NSAttributedStringDocumentAttribute
        constructor_visibility: public
        name: '#{g[0]}'
        type: NSString
    UIAccessibilitySpeechAttribute(.*):
        dictionary: NSAttributedStringAttributes
        enum: NSAttributedStringAttribute
        constructor_visibility: public
        name: 'Speech#{g[0]}'
        type: NSString
        methods:
            Font:
                type: UIFont
            ParagraphStyle:
                type: NSParagraphStyle
            ForegroundColor:
                type: UIColor
            BackgroundColor:
                type: UIColor
            Kern:
                name: kerning
                type: double
            StrikethroughStyle:
                type: NSUnderlineStyle
            UnderlineStyle:
                type: NSUnderlineStyle
            StrokeColor:
                type: UIColor
            StrokeWidth:
                type: double
            Shadow:
                type: NSShadow
            TextEffect:
                type: NSTextEffect
            Attachment:
                type: NSTextAttachment
            Link:
                type: NSURL
            BaselineOffset:
                type: double
            UnderlineColor:
                type: UIColor
            StrikethroughColor:
                type: UIColor
            Obliqueness:
                type: double
            Expansion:
                type: double
            VerticalGlyphForm:
                name: verticalText
                type: boolean
            SpeechPunctuation:
                type: boolean
            SpeechLanguage:
                type: String
            SpeechPitch:
                type: double
    NS(.*)AttributeName:
        dictionary: NSAttributedStringAttributes
        enum: NSAttributedStringAttribute
        name: '#{g[0]}'
        type: NSString
    UITextAttribute(Font):
        dictionary: NSAttributedStringAttributes
        enum: NSAttributedStringAttribute
        name: 'Text#{g[0]}'
        type: NSString
    UITextAttribute(.*):
        dictionary: NSAttributedStringAttributes
        enum: NSAttributedStringAttribute
        name: '#{g[0]}'
        type: NSString
    NSTextEffect(.*):
        enum: NSTextEffect
        name: '#{g[0]}'
        type: NSString
    NS(.*)TextDocumentType:
        enum: NSDocumentType
        name: '#{g[0]}'
        type: NSString
    NSTextLayoutSection(.*):
        dictionary: NSTextLayoutSection
        name: '#{g[0]}'
        type: NSString
        methods:
            Orientation:
                type: NSTextLayoutOrientation
            Range:
                type: NSRange
                hint: Struct<?>

    # NSRunLoopMode
    UI(Tracking)RunLoopMode:
        enum: UIRunLoopMode
        name: '#{g[0]}'
        type: NSString

    # NSError
    UIPrintErrorDomain:
        class: UIPrintError
        name: getClassDomain

    # UIFloatRange
    UIFloatRange(Zero|Infinite):
        class: UIFloatRange
        name: '#{g[0]}'

    # UIAccessibility
    UIAccessibility(ScreenChanged|LayoutChanged|Announcement|PageScrolled|PauseAssistiveTechnology|ResumeAssistiveTechnology)Notification:
        enum: UIAccessibilityNotification
        name: '#{g[0]}Notification'
        type: int
    UIAccessibility(.*Notification):
        class: UIAccessibilityGlobals
        name: '#{g[0]}'
        readonly: true
        type: NSString
    UIAccessibility(VoiceOverStatusChanged):
        class: UIAccessibilityGlobals
        name: '#{g[0]}Notification'
        readonly: true
        type: NSString
    UIAccessibility(FocusedElement|UnfocusedElement|AssistiveTechnology)Key:
        dictionary: UIAccessibilityElementFocusedNotification
        name: '#{g[0]}'
        type: NSString
        mutable: false
        methods:
            FocusedElement:
                type: NSObject
            UnfocusedElement:
                type: NSObject
            AssistiveTechnology:
                type: String
    UIAccessibilityNotification(.*Identifier):
        class: UIAccessibilityGlobals
        name: '#{g[0]}'
        readonly: true
    UIAccessibility(AnnouncementKey.*):
        class: UIAccessibilityGlobals
        name: '#{g[0]}'
        type: NSString
    UIAccessibilityTrait(.*):
        class: UIAccessibilityTraits
        name: '#{g[0]}Value'
        visibility: protected
        type: long
        readonly: true

    # UIActivity
    UIActivityType(.*):
        class: UIActivityType
        name: '#{g[0]}'

    # UIApplication
    UIApplicationLaunchOptionsUserActivity(Type)Key:
        dictionary: UIApplicationLaunchOptionsUserActivityInfo
        name: '#{g[0]}'
        type: NSString
        mutable: false
        methods:
            Type:
                type: String
    UIApplicationLaunchOptions(.*)Key:
        dictionary: UIApplicationLaunchOptions
        name: '#{g[0]}'
        type: NSString
        methods:
            URL:
                type: NSURL
            SourceApplication:
                type: String
            LocalNotification:
                type: UILocalNotification
            Annotation:
                type: NSObject
            Location:
                name: locationStart
                type: boolean
            NewsstandDownloads:
                name: newsstandDownloadIdentifiers
                type: List<String>
            BluetoothCentrals:
                name: bluetoothCentralIdentifiers
                type: List<String>
            BluetoothPeripherals:
                name: bluetoothPeripheralIdentifiers
                type: List<String>
            UserActivityDictionary:
                name: UserActivityInfo
                type: UIApplicationLaunchOptionsUserActivityInfo
            ShortcutItem:
                type: UIApplicationShortcutItem
      #      CloudKitShareMetadata:
      #          type: CKShareMetadata               >>>>> TODO need to update CloudKit

    UIApplication(.*Notification):
        class: UIApplication
        name: '#{g[0]}'
        type: NSString
    UIApplication(ProtectedDataDidBecomeAvailable|ProtectedDataWillBecomeUnavailable):
        class: UIApplication
        name: '#{g[0]}Notification'
        type: NSString
    UI(ContentSizeCategoryDidChangeNotification):
        class: UIApplication
        name: '#{g[0]}'
        type: NSString
    UIApplication(.*UserInfoKey):
        class: UIApplication
        name: '#{g[0]}'
        type: NSString
        visibility: protected
    UI(ContentSizeCategoryNewValueKey):
        class: UIApplication
        name: '#{g[0]}'
        type: NSString
        visibility: protected
    UIContentSizeCategory(.*):
        enum: UIContentSizeCategory
        name: '#{g[0]}'
        type: NSString
    UIApplication(BackgroundFetchInterval.*):
        class: UIApplication
        name: 'get#{g[0]}'
    UI(BackgroundTask)(Invalid):
        class: UIApplication
        name: 'get#{g[1]}#{g[0]}'
    UI(MinimumKeepAliveTimeout):
        class: UIApplication
        name: 'get#{g[0]}'
    UIApplication(OpenSettingsURLString|OpenNotificationSettingsURLString):
        class: UIApplication
        name: 'get#{g[0]}'
    UIApplication(.*)ExtensionPointIdentifier:
        enum: UIApplicationExtensionPointIdentifier
        name: '#{g[0]}'
        type: NSString
    UIApplicationOpenURLOptions(.*)Key:
        dictionary: UIApplicationOpenURLOptions
        name: '#{g[0]}'
        type: NSString
        methods:
            SourceApplication:
                type: String
            Annotation:
                type: NSObject
            OpenInPlace:
                name: opensInPlace
                type: boolean
            UniversalLinksOnly:
                type: boolean
    UIApplicationOpenURLOption(UniversalLinksOnly):
        dictionary: UIApplicationOpenURLOptions
        name: '#{g[0]}'
        type: NSString
    UIApplicationOpenExternalURLOptionsEventAttributionKey:
        dictionary: UIApplicationOpenURLOptions
        name: ExternalURLEventAttribution
        type: NSString

    # UICollectionView
    UICollectionElementKind(.*):
        enum: UICollectionElementKind
        name: '#{g[0]}'
        type: NSString

    # UICollectionViewFlowLayout
    UICollectionViewFlowLayout(AutomaticSize):
        class: UICollectionViewFlowLayout
        name: 'get#{g[0]}'

    # UIDevice
    UIDevice(.*Notification):
        class: UIDevice
        name: '#{g[0]}'
        type: NSString

    # UIDocument
    UIDocument(.*Notification):
        class: UIDocument
        name: '#{g[0]}'
        type: NSString
    NS(UserActivityDocumentURLKey):
        class: UIDocument
        name: '#{g[0]}'

    # UIEdgeInsets
    UIEdgeInsets(Zero):
        class: UIEdgeInsets
        name: '#{g[0]}'

    # UIFont
    UIFontFeature(.*Identifier)Key:
        dictionary: UIFontFeatureSetting
        name: '#{g[0]}'
        type: NSString
        methods:
            TypeIdentifier:
                type: long
            SelectorIdentifier:
                type: long
    UIFontDescriptor(.*)Attribute:
        dictionary: UIFontDescriptorAttributes
        enum: UIFontDescriptorAttribute
        name: '#{g[0]}'
        type: NSString
        methods:
            Family:
                type: String
            Name:
                type: String
            Face:
                type: String
            Size:
                type: double
            VisibleName:
                type: String
            Matrix:
                type: CGAffineTransform
            CharacterSet:
                type: NSCharacterSet
            CascadeList:
                type: NSArray<UIFontDescriptor>
            Traits:
                type: UIFontDescriptorTraits
            FixedAdvance:
                type: double
            TextStyle:
                type: UIFontTextStyle
            FeatureSettings:
                type: List<UIFontFeatureSetting>
        
    UIFontTextStyle(.*):
        enum: UIFontTextStyle
        name: '#{g[0]}'
        type: NSString
    UIFont(.*Trait):
        dictionary: UIFontDescriptorTraits
        name: '#{g[0]}'
        type: NSString
        methods:
            SymbolicTrait:
                name: SymbolicTraits
                type: UIFontDescriptorSymbolicTraits
            WeightTrait:
                type: double
            WidthTrait:
                type: double
            SlantTrait:
                type: double
    UIFontWeight(.*):
        enum: UIFontWeight
        name: '#{g[0]}'

    # UIImagePickerController
    UIImagePickerController(.*):
        dictionary: UIImagePickerControllerEditingInfo
        name: '#{g[0]}'
        type: NSString
        methods:
            MediaType:
                type: String
            OriginalImage:
                type: UIImage
            EditedImage:
                type: UIImage
            CropRect:
                type: CGRect
            MediaURL:
                type: NSURL
            ReferenceURL:
                type: NSURL
            MediaMetadata:
                type: 'Map<String, NSObject>'

    # UIKeyCommand
    UIKeyInput(.*):
        class: UIKeyCommand
        name: '#{g[0]}'

    # UILocalNotification
    UILocalNotification(DefaultSoundName):
        class: UILocalNotification
        name: 'get#{g[0]}'

    # UIMenuController
    UIMenuController(.*Notification):
        class: UIMenuController
        name: '#{g[0]}'
        type: NSString

    # UINavigationController
    UINavigationController(HideShowBarDuration):
        class: UINavigationController
        name: 'get#{g[0]}'

    # UINib
    UINib(ExternalObjects):
        dictionary: UINibLoadingOptions
        name: '#{g[0]}'
        type: NSString
        methods:
            ExternalObjects:
                type: 'Map<String, NSObject>'

    # UIOffset
    UIOffset(Zero):
        class: UIOffset
        name: '#{g[0]}'

    # UIPageViewController
    UIPageViewControllerOption(.*)Key:
        dictionary: UIPageViewControllerOptions
        name: '#{g[0]}'
        type: NSString
        methods:
            SpineLocation:
                type: UIPageViewControllerSpineLocation
            InterPageSpacing:
                type: double

    # UIPasteboard
    UIPasteboard(.*Notification):
        class: UIPasteboard
        name: '#{g[0]}'
        type: NSString
    UIPasteboardOption(.*):
        dictionary: UIPasteboardOptions
        name: '#{g[0]}'
        type: NSString
        methods:
            ExpirationDate:
                type: NSDate
            LocalOnly:
                type: boolean
    UIPasteboardChanged(.*)Key:
        dictionary: UIPasteboardChangedNotification
        name: '#{g[0]}'
        type: NSString
        mutable: false
        methods:
            TypesAdded:
                name: addedTypes
                type: List<String>
            TypesRemoved:
                name: removedTypes
                type: List<String>
    UIPasteboardTypeAutomatic:
        class: UIPasteboard
        name: getAutomaticType
    UIPasteboardNameGeneral:
        exclude: true # use UIPasteboard.getGeneralPasteboard() instead
    UI(PasteboardNameFind):
        class: UIPasteboard
        name: '#{g[0]}'
        visibility: private # use Pasteboard.getFindPasteboard() instead
    UIPasteboardTypeList(.*):
        class: UIPasteboard
        name: 'get#{g[0]}TypeList'
        readonly: true
        type: List<String>
        marshaler: NSArray.AsStringListMarshaler

    # UIScreen
    UIScreen(.*Notification):
        class: UIScreen
        name: '#{g[0]}'
        type: NSString

    # UISplitViewController
    UISplitViewController(AutomaticDimension|AutomaticSupplementaryFillDimension):
        class: UISplitViewController
        name: 'get#{g[0]}'

    # UIScrollView
    UIScrollViewDecelerationRate(.*):
        class: UIScrollView
        name: 'get#{g[0]}DecelerationRate'

    # UIStateRestoring
    UIStateRestoration(ViewControllerStoryboardKey):
        class: UIStateRestorationKey
        name: '#{g[0]}'
        visibility: protected
    UIApplicationStateRestoration(.*Key):
        class: UIStateRestorationKey
        name: 'Application#{g[0]}'
        visibility: protected

    # UITableView
    UITableView(.*Notification):
        class: UITableView
        name: '#{g[0]}'
        type: NSString
    UITableView(AutomaticDimension):
        class: UITableView
        name: 'get#{g[0]}'
    UITableView(IndexSearch):
        class: UITableView
        name: 'get#{g[0]}'

    # UITextField
    UITextFieldText(.*Notification):
        class: UITextField
        name: '#{g[0]}'
        type: NSString
    UITextField(DidEndEditingReasonKey):
        class: UITextField
        name: '#{g[0]}'
        type: NSString
        visibility: protected

    # UITextInput
    UITextInputText(.*)Key:
        dictionary: UITextInputTextStyle
        name: '#{g[0]}'
        type: NSString
        methods:
            BackgroundColor:
                type: UIColor
            Color:
                name: textColor
                type: UIColor
            Font:
                type: UIFont
    UITextContentType(.*):
        enum: UITextContentType
        name: '#{g[0]}'
        type: NSString

    # UITextInputMode
    UITextInput(.*)Notification:
        class: UITextInputMode
        name: '#{g[0]}'
        type: NSString

    # UITextView
    UITextViewText(.*Notification):
        class: UITextView
        name: '#{g[0]}'
        type: NSString

    # UIUserNotificationSettings
    UIUserNotificationTextInputActionButtonTitleKey:
        exclude: true # purpose unknown
    UIUserNotificationActionResponseTypedTextKey:
        exclude: true

    # UIView
    UIView(NoIntrinsicMetric):
        class: UIView
        name: '#{g[0]}'
    UILayoutFitting(.*)Size:
        enum: UILayoutFittingSize
        name: '#{g[0]}'
        type: '@ByVal CGSize'

    # UIViewController
    UIViewController(ShowDetailTargetDidChangeNotification):
        class: UIViewController
        name: '#{g[0]}'
        type: NSString

    # UIViewControllerContextTransitioning
    UITransitionContext(.*ViewController)Key:
        enum: UITransitionContextViewControllerType
        name: '#{g[0]}'
        type: NSString
    UITransitionContext(.*View)Key:
        enum: UITransitionContextViewType
        name: '#{g[0]}'
        type: NSString

    # UIWindow
    UIWindow(.*Notification):
        class: UIWindow
        name: '#{g[0]}'
        type: NSString
    UI(Keyboard.*Notification):
        class: UIWindow
        name: '#{g[0]}'
        type: NSString
    UIKeyboard(.*)UserInfoKey:
        dictionary: UIKeyboardAnimation
        name: '#{g[0]}'
        type: NSString
        methods:
            FrameBegin:
                name: startFrame
                type: CGRect
            FrameEnd:
                name: endFrame
                type: CGRect
            AnimationDuration:
                type: double
            AnimationCurve:
                type: UIViewAnimationCurve
            IsLocal:
                name: local
                type: boolean
    UIWindow(Level.*):
        class: UIWindowLevel
        name: '#{g[0]}'
        visibility: protected

    UINibProxiedObjectsKey:
        exclude: true
    UIApplicationInvalidInterfaceOrientationException:
        exclude: true
    UIViewControllerHierarchyInconsistencyException:
        exclude: true

    UIDocumentBrowserErrorDomain:
        class: UIDocumentBrowserErrorCode
        name: getClassDomain

    NSDirectionalEdgeInsetsZero:
        class: NSDirectionalEdgeInsets
        name: Zero
    UIFocus(.*):
        class: UIFocusEnvironmentConstants
        name: '#{g[0]}'
    UIAccessibility(.*):
        class: UIAccessibilityConstants
        name: '#{g[0]}'

    UIGuidedAccessErrorDomain:
        class: UIGuidedAccessErrorCode
        name: getClassDomain

    UIScene(.*)Notification:
        class: UISceneNotifications
        name: '#{g[0]}'
        type: NSString

    UICommandTag(Share):
        class: UICommand
        static_class: Tags
        name: '#{g[0]}'

    UILargeContentViewer(InteractionEnabledStatusDidChange)Notification:
        class: UILargeContentViewer
        static_class: Notifications
        name: '#{g[0]}'

    # UISceneErrorCode(NSError)
    UISceneErrorDomain:
        class: UISceneErrorCode
        name: getClassDomain

    UIPointerLockStateDidChangeNotification:
        class: UIPointerLockState
        name: DidChangeNotification
    UIPointerLockStateSceneUserInfoKey:
        class: UIPointerLockState
        name: SceneUserInfoKey
    UICellAccessoryStandardDimension:
        class: UICellAccessory
        name: getStandardDimension
    UIConfigurationColorTransformer(.*):
        class: UIConfigurationColorTransformer
        name: '#{g[0]}'
    UIListContentImageStandardDimension:
        class: UIListContentImageProperties
        name: getStandardDimension
    UIPasteboardDetectionPattern(.*):
        class: UIPasteboard
        static_class: DetectionPatterns
        type: NSString
        name: '#{g[0]}'

    UIListSeparatorAutomaticInsets:
        name: getAutomaticInsets
        class: UIListSeparatorConfiguration

    UIPointerAccessoryPosition(.+):
        name: '#{g[0]}'
        static_class: Positions
        class: UIPointerAccessory

    UISheetPresentationControllerAutomaticDimension:
        class: UISheetPresentationController
        name: AutomaticDimension
    UICollectionViewLayoutAutomaticDimension:
        class: UICollectionViewLayout
        name: AutomaticDimension
    NSTextContentStorageUnsupportedAttributeAddedNotification:
        class: NSTextContentStorage
        readonly: true
        static_class: Notifications
        name: UnsupportedAttributeAdded

    # Make sure we don't miss any values if new ones are introduced in a later UIKit
    (NS.*):
        class: FIXME
        name: 'Value__#{g[0]}'
    (UI.*):
        class: FIXME
        name: 'Value__#{g[0]}'

typed_enums:
    NSAttributedStringDocumentReadingOptionKey:
        dictionary: NSAttributedStringDocumentReadingOptionKeys
        type: NSString

    UIActivityItemsConfigurationMetadataKey:
        enum: UIActivityItemsConfigurationMetadataKey
        type: NSString
        UIActivityItemsConfigurationMetadataKey(.*):
            name: '#{g[0]}'
    UIActivityItemsConfigurationPreviewIntent:
        enum: UIActivityItemsConfigurationPreviewIntent
        type: NSString
        UIActivityItemsConfigurationPreviewIntent(.*):
            name: '#{g[0]}'
    UIActivityItemsConfigurationInteraction:
        enum: UIActivityItemsConfigurationInteraction
        type: NSString
        UIActivityItemsConfigurationInteraction(.*):
            name: '#{g[0]}'
    UIMenuIdentifier:
        enum: UIMenuIdentifier
        type: NSString
        UIMenu(.*):
            name: '#{g[0]}'
    UIFontDescriptorSystemDesign:
        enum: UIFontDescriptorSystemDesign
        type: NSString
        UIFontDescriptorSystemDesign(.*):
            name: '#{g[0]}'
    UISceneSessionRole:
        enum: UISceneSessionRole
        type: NSString
        UIWindowSceneSessionRole(.*):
            name: '#{g[0]}'

    UIActionIdentifier:
        enum: UIActionIdentifier
        type: NSString
        UIAction(.*):
            name: '#{g[0]}'

    UISheetPresentationControllerDetentIdentifier:
        enum: UISheetPresentationControllerDetentIdentifier
        type: NSString
        UISheetPresentationControllerDetentIdentifier(.*):
            name: '#{g[0]}'

constants:
    NS(AttachmentCharacter):
        class: NSTextAttachment
        name: '#{g[0]}'
        type: char

    UILayoutPriority(.*):
        class: UILayoutPriority
        name: '#{g[0]}'

    UIFocusGroupPriority(.*):
        class: UIFocusGroupPriority
        name: '#{g[0]}'

    UIKIT_DEFINE_AS_PROPERTIES:
        exclude: true
    UIKIT_REMOVE_ZERO_FROM_SWIFT:
        exclude: true
    UIKIT_STRING_ENUMS:
        exclude: true
    UIKIT_HAS_UIFOUNDATION_SYMBOLS:
        exclude: true

    # Make sure we don't miss any constants if new ones are introduced in a later UIKit
    (UI.*):
        class: FIXME
        name: 'Constant__#{g[0]}'
