package: org.robovm.apple.gamecontroller
include: [foundation, dispatch, uikit, corehaptic]
library: GameController
framework: GameController
clang_args: ['-x', 'objective-c']
headers:
    - /System/Library/Frameworks/GameController.framework/Headers/GameController.h
typedefs:
    'void (^)(GCController *)': '@Block VoidBlock1<GCController>'
    
enums:
    GCControllerPlayerIndex: {}
    GCExtendedGamepadSnapshotDataVersion: {}
    GCMicroGamepadSnapshotDataVersion: {}
    GCDeviceBatteryState: {}
    GCSystemGestureState: {}
    GCTouchState: {}
    GCDualSenseAdaptiveTriggerMode: {}
    GCDualSenseAdaptiveTriggerStatus: {}
classes:
    # Structs
    GCAcceleration: {}
    GCEulerAngles: {}
    GCRotationRate: {}
    GCQuaternion: {}
    GCMicroGamepadSnapShotDataV100:
        annotations: ['@Packed(1)']
    GCExtendedGamepadSnapshotData:
        annotations: ['@Packed(1)']
    GCMicroGamepadSnapshotData:
        annotations: ['@Packed(1)']
    GCDualSenseAdaptiveTriggerPositionalAmplitudes: {} #since 15.4
    GCDualSenseAdaptiveTriggerPositionalResistiveStrengths: {} #since 15.4

    GCController: # DONE
        methods:
            '+controllers':
                property: true
                return_type: NSArray<GCController>
            '+startWirelessControllerDiscoveryWithCompletionHandler:':
                name: startWirelessControllerDiscovery
    GCControllerAxisInput: # DONE
        properties:
            'valueChangedHandler':
                type: '@Block VoidBlock2<GCControllerAxisInput, Float>'
    GCControllerButtonInput: # DONE
        properties:
            'valueChangedHandler':
                type: '@Block VoidBlock3<GCControllerButtonInput, Float, Boolean>'
            'pressedChangedHandler':
                type: '@Block VoidBlock3<GCControllerButtonInput, Float, Boolean>'
    GCControllerDirectionPad: # DONE
        methods:
            '-setValueForXAxis:yAxis:':
                name: setValueForXYAxis
        properties:
            'valueChangedHandler':
                type: '@Block VoidBlock3<GCControllerDirectionPad, Float, Float>'
    GCControllerElement: {} # DONE
    GCExtendedGamepad: # DONE
        properties:
            'valueChangedHandler':
                type: '@Block VoidBlock2<GCExtendedGamepad, GCControllerElement>'
    GCExtendedGamepadSnapshot: # DONE
        methods:
            '-init.*':
                name: init
    GCExtendedGamepadSnapShotDataV100: {} # DONE
    GCGamepad: # DONE
        properties:
            'valueChangedHandler':
                type: '@Block VoidBlock2<GCGamepad, GCControllerElement>'
    GCGamepadSnapshot: # DONE
        methods:
            '-init.*':
                name: init
    GCGamepadSnapShotDataV100:
        annotations: ['@Packed(1)']
    GCMotion: # DONE
        properties:
            'valueChangedHandler':
                type: '@Block VoidBlock2<GCGamepad, GCControllerElement>'
    GCMicroGamepad: {}
    GCMicroGamepadSnapshot:
        methods:
            '-initWithController:snapshotData:':
                name: init
            '-initWithSnapshotData:':
                name: init
    GCEventViewController: {}
    GCColor: #since 14.0
        methods:
            '-initWithRed:green:blue:':
                name: init
    GCControllerTouchpad: #since 14.0
        methods:
            '-setValueForXAxis:yAxis:touchDown:buttonValue:':
                name: setValue
    GCDeviceBattery: {} #since 14.0
    GCDeviceCursor: {} #since 14.0
    GCDeviceHaptics: #since 14.0
        methods:
            '-createEngineWithLocality:':
                name: createEngine
    GCDeviceLight: {} #since 14.0
    GCDualShockGamepad: {} #since 14.0
    GCKeyboard: {} #since 14.0
    GCKeyboardInput: {} #since 14.0
    GCMouse: {} #since 14.0
    GCMouseInput: {} #since 14.0
    GCPhysicalInputProfile: {} #since 14.0
    GCXboxGamepad: {} #since 14.0
    GCDirectionalGamepad: {} #since 14.3
    GCDualSenseAdaptiveTrigger: #since 14.5
        methods:
            '-setModeFeedbackWithStartPosition:resistiveStrength:':
                name: setModeFeedback
            '-setModeWeaponWithStartPosition:endPosition:resistiveStrength:':
                name: setModeWeapon
            '-setModeVibrationWithStartPosition:amplitude:frequency:':
                name: setModeVibration
            '-setModeSlopeFeedbackWithStartPosition:endPosition:startStrength:endStrength:':
                name: setModeSlopeFeedback
            '-setModeFeedbackWithResistiveStrengths:':
                name: setModeFeedback
            '-setModeVibrationWithAmplitudes:frequency:':
                name: setModeVibration
    GCDualSenseGamepad: {} #since 14.5
    GCVirtualController: #since 15.0
        methods:
            '-initWithConfiguration:':
                name: init
            '-connectWithReplyHandler:':
                name: connect
            '-updateConfigurationForElement:configuration:':
                name: updateConfiguration
            '+virtualControllerWithConfiguration:':
                name: virtualControllerWithConfiguration$
    GCVirtualControllerConfiguration: {} #since 15.0
    GCVirtualControllerElementConfiguration: {} #since 15.0
protocols:
    GCDevice: {} #since 14.0

functions:
    (GCExtendedGamepadSnapShotDataV100FromNSData):
        class: GCExtendedGamepadSnapShotDataV100
        name: setData

    (NSDataFromGCExtendedGamepadSnapShotDataV100):
        class: GCExtendedGamepadSnapShotDataV100
        name: getData

    (GCGamepadSnapShotDataV100FromNSData):
        class: GCGamepadSnapShotDataV100
        name: setData
        
    (NSDataFromGCGamepadSnapShotDataV100):
        class: GCGamepadSnapShotDataV100
        name: getData

    (GCMicroGamepadSnapShotDataV100FromNSData):
        class: GCMicroGamepadSnapShotDataV100
        name: getData

    GCExtendedGamepadSnapshotDataFromNSData:
        class: GCExtendedGamepadSnapshot
        name: getDataFromNSData

    GCMicroGamepadSnapshotDataFromNSData:
        class: GCMicroGamepadSnapshot
        name: getDataFromNSData

    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?GC.*):
        class: GameController
        name: 'Function__#{g[0]}'

values:
    GCController(.*Notification):
        class: GCController
        name: '#{g[0]}'
        type: NSString


    GCCurrentExtendedGamepadSnapshotDataVersion:
        class: GCExtendedGamepadSnapshot
        name: getDataVersion

    GCCurrentMicroGamepadSnapshotDataVersion:
        class: GCMicroGamepadSnapshot
        name: getDataVersion

    GCInputXbox(.*):
        class: GCPhysicalInputProfile
        static_class: Xbox
        name: '#{g[0]}'
    GCInputDualShock(.*):
        class: GCPhysicalInputProfile
        static_class: DualShock
        name: '#{g[0]}'
    GCInput(.*):
        class: GCPhysicalInputProfile
        static_class: Common
        name: '#{g[0]}'
    GCKeyCode(.*):
        class: GCKeyCode
        name: '#{g[0]}'
    GCKey(.*):
        class: GCKey
        name: '#{g[0]}'

    GCKeyboard(.*)Notification:
        class: GCKeyboard
        static_class: Notifications
        type: NSString
        name: '#{g[0]}'
    GCMouse(.*)Notification:
        class: GCMouse
        static_class: Notifications
        type: NSString
        name: '#{g[0]}'

    GCHapticDuration(Infinite):
        class: GCDeviceHaptics
        name: '#{g[0]}'
    GCProductCategory(.*):
        class: GCProductCategory
        name: '#{g[0]}'

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?GC.*):
        class: GameController
        name: 'Value__#{g[0]}'

typed_enums:
    GCHapticsLocality:
        enum: GCHapticsLocality
        prefix: GCHapticsLocality
        type: NSString


constants:
    GCControllerPlayerIndexUnset:
        class: GCController
        name: UnsetPlayerIndex

    GCDualSenseAdaptiveTriggerDiscretePositionCount:
        class: GCDualSenseAdaptiveTrigger
        name: DiscretePositionCount

    # Make sure we don't miss any constants if new ones are introduced in a later version
    (k?GC.*):
        class: GameController
        name: 'Constant__#{g[0]}'
