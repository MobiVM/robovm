package: org.robovm.apple.corevideo
include: [foundation.yaml, corefoundation.yaml, coregraphics.yaml, opengles.yaml, metal.yaml, iosurface.yaml]
library: CoreVideo
framework: CoreVideo
clang_args: ['-x', 'objective-c', '-DCOREVIDEO_USE_DERIVED_ENUMS_FOR_CONSTANTS=1']
headers:
    - /System/Library/Frameworks/CoreVideo.framework/Headers/CoreVideo.h
    - /System/Library/Frameworks/CoreVideo.framework/Headers/CVBase.h
typedefs:
    __CVBuffer: CVBuffer
    __CVOpenGLESTextureCache: CVOpenGLESTextureCache
    __CVPixelBufferPool: CVPixelBufferPool
    __CVMetalTextureCache: CVMetalTextureCache
    CVBufferRef: CVBuffer
    CVImageBufferRef: CVImageBuffer
    CVOpenGLESTextureRef: CVOpenGLESTexture
    CVOpenGLESTextureCacheRef: CVOpenGLESTextureCache
    CVMetalTextureRef: CVMetalTexture
    CVMetalTextureCacheRef: CVMetalTextureCache
    CVPixelBufferRef: CVPixelBuffer
    CVPixelBufferPoolRef: CVPixelBufferPool

enums:
    CVSMPTETimeType: { }
    CVSMPTETimeFlags: { bits: true }
    CVTimeFlags: { prefix: kCVTime, bits: true }
    CVTimeStampFlags: { bits: true }
    CVAttachmentMode: { }
    CVPixelFormatType: { first: kCVPixelFormatType_1Monochrome }
    CVPixelFormatType2: { prefix: kCVPixelFormatType_, first: kCVPixelFormatType_Lossless_32BGRA, merge_with: CVPixelFormatType}
    CVPixelFormatType3: { prefix: kCVPixelFormatType_, first: kCVPixelFormatType_Lossy_32BGRA, merge_with: CVPixelFormatType }
    CVPixelBufferLockFlags: { prefix: kCVPixelBufferLock_, bits: true }
    CVPixelBufferPoolFlushFlags: { bits: false, prefix: kCVPixelBufferPoolFlush}
    CVReturn: { first: kCVReturnSuccess }
    CVVersatileBayerPattern: {prefix: kCVVersatileBayer_BayerPattern_, first: kCVVersatileBayer_BayerPattern_RGGB}
classes:
    # Opaque Types
    CVBuffer:
        extends: CFType
        visibility: 'public abstract'
    CVImageBuffer:
        extends: CVBuffer
    CVMetalTexture:
        extends: CVImageBuffer
        annotations: ['@WeaklyLinked']
        add_ptr: true
    CVMetalTextureCache:
        extends: CFType
        annotations: ['@WeaklyLinked']
        add_ptr: true
    CVOpenGLESTexture:
        extends: CVImageBuffer
        add_ptr: true
    CVOpenGLESTextureCache:
        extends: CFType
        add_ptr: true
    CVPixelBuffer:
        extends: CVImageBuffer
        add_ptr: true
    CVPixelBufferPool:
        extends: CFType
        add_ptr: true

    # Structs
    CVSMPTETime:
        type: 
            type: CVSMPTETimeType
        flags: 
            type: CVSMPTETimeFlags
    CVTime:
        flags:
            type: CVTimeFlags
    CVTimeStamp:
        flags:
            type: CVTimeStampFlags
    CVPlanarComponentInfo: {}
    CVPlanarPixelBufferInfo: {}
    CVPlanarPixelBufferInfo_YCbCrPlanar: {}
    CVPlanarPixelBufferInfo_YCbCrBiPlanar: {}
    CVFillExtendedPixelsCallBackData:
        visibility: ''
        refCon:
            type: '@Pointer long'

protocols: {}

functions:
    (CV.*)GetTypeID:
        class: '#{g[0]}'
        name: getClassTypeID
    
    # CVBuffer
    CVBuffer(GetAttachment):
        class: CVBuffer
        name: '#{g[0]}'
        visibility: protected
    CVBuffer(GetAttachments):
        class: CVBuffer
        name: '#{g[0]}'
        return_type: NSDictionary
        visibility: protected
    CVBuffer(SetAttachments):
        class: CVBuffer
        name: '#{g[0]}'
        visibility: protected
        parameters:
            theAttachments:
                type: NSDictionary
    CVBuffer(Retain|Release):
        exclude: true
    CVBuffer(.*):
        class: CVBuffer
        name: '#{g[0]}'
        visibility: protected

    # CVHostTime
    CV(GetCurrentHostTime):
        class: CVHostTime
        name: '#{g[0]}'
    CV(GetHostClockFrequency):
        class: CVHostTime
        name: '#{g[0]}'
    CV(GetHostClockMinimumTimeDelta):
        class: CVHostTime
        name: '#{g[0]}'

    # CVImageBuffer
    CVImageBuffer(.*):
        class: CVImageBuffer
        name: '#{g[0]}'

    # CVMetalTextureCache
    CVMetalTextureCache(Create):
        class: CVMetalTextureCache
        name: '#{g[0]}'
        visibility: private
        parameters:
            cacheAttributes:
                type: CVMetalTextureCacheAttributes
            textureAttributes:
                type: NSDictionary
    CVMetalTextureCache(CreateTexture)FromImage:
        class: CVMetalTextureCache
        name: '#{g[0]}'
        visibility: private
        parameters:
            textureAttributes:
                type: NSDictionary
    CVMetalTextureCache(.*):
        class: CVMetalTextureCache
        name: '#{g[0]}'

    # CVMetalTexture
    CVMetalTexture(GetCleanTexCoords):
        class: CVMetalTexture
        name: '#{g[0]}'
        visibility: protected
    CVMetalTexture(.*):
        class: CVMetalTexture
        name: '#{g[0]}'

    #CVOpenGLESTextureCache
    CVOpenGLESTextureCache(Create):
        class: CVOpenGLESTextureCache
        name: '#{g[0]}'
        visibility: private
        annotations: ['@WeaklyLinked']
        parameters:
            textureAttributes:
                type: NSDictionary
            cacheAttributes:
                type: CVOpenGLESTextureCacheAttributes
    CVOpenGLESTextureCache(CreateTexture)FromImage:
        class: CVOpenGLESTextureCache
        name: '#{g[0]}'
        visibility: private
        parameters:
            textureAttributes:
                type: NSDictionary
    CVOpenGLESTextureCache(.*):
        class: CVOpenGLESTextureCache
        name: '#{g[0]}'

    # CVOpenGLESTexture
    CVOpenGLESTexture(GetCleanTexCoords):
        class: CVOpenGLESTexture
        name: '#{g[0]}'
        visibility: protected
    CVOpenGLESTexture(.*):
        class: CVOpenGLESTexture
        name: '#{g[0]}'

    # CVPixelBufferPool
    CVPixelBufferPool(CreatePixelBuffer).*:
        class: CVPixelBufferPool
        name: '#{g[0]}'
        visibility: private
        parameters:
            auxAttributes:
                type: CVPixelBufferPoolAuxiliaryAttributes
    CVPixelBufferPool(Create).*:
        class: CVPixelBufferPool
        name: '#{g[0]}'
        visibility: private
        parameters:
            poolAttributes:
                type: CVPixelBufferPoolAttributes
            pixelBufferAttributes:
                type: CVPixelBufferAttributes
    CVPixelBufferPool(GetAttributes):
        class: CVPixelBufferPool
        name: '#{g[0]}'
        return_type: CVPixelBufferPoolAttributes
    CVPixelBufferPool(GetPixelBufferAttributes):
        class: CVPixelBufferPool
        name: '#{g[0]}'
        return_type: CVPixelBufferAttributes
    CVPixelBufferPool(Retain|Release):
        exclude: true
    CVPixelBufferPool(.*):
        class: CVPixelBufferPool
        name: '#{g[0]}'

    # CVPixelBuffer
    CVPixelBuffer(CreateResolvedAttributesDictionary):
        class: CVPixelBuffer
        name: '#{g[0]}'
        visibility: private
        parameters:
            attributes:
                type: List<CVPixelBufferAttributes>
                marshaler: CVPixelBufferAttributes.AsListMarshaler
            resolvedDictionaryOut:
                type: CFDictionary.CFDictionaryPtr
    CVPixelBuffer(Create)WithPlanarBytes:
        class: CVPixelBuffer
        name: '#{g[0]}'
        visibility: protected
        parameters:
            planeWidth:
                type: MachineSizedUIntPtr
            planeHeight:
                type: MachineSizedUIntPtr
            planeBytesPerRow:
                type: MachineSizedUIntPtr
            pixelBufferAttributes:
                type: CVPixelBufferAttributes
            pixelFormatType:
                type: CVPixelFormatType
    CVPixelBuffer(Create).*:
        class: CVPixelBuffer
        name: '#{g[0]}'
        visibility: protected
        parameters:
            pixelBufferAttributes:
                type: CVPixelBufferAttributes
            pixelFormatType:
                type: CVPixelFormatType
            releaseRefCon:
                type: '@Pointer long'
    CVPixelBuffer(GetExtendedPixels):
        class: CVPixelBuffer
        name: '#{g[0]}'
        visibility: protected
    CVPixelBuffer(GetPixelFormatType):
        class: CVPixelBuffer
        name: '#{g[0]}'
        return_type: CVPixelFormatType
    CVPixelBuffer(LockBaseAddress|UnlockBaseAddress):
        class: CVPixelBuffer
        name: '#{g[0]}'
        parameters:
            lockFlags:
                type: CVPixelBufferLockFlags
            unlockFlags:
                type: CVPixelBufferLockFlags
    CVPixelBuffer(Retain|Release):
        exclude: true
    CVPixelBuffer(.*):
        class: CVPixelBuffer
        name: '#{g[0]}'

    # CVPixelFormatDescription
    CVPixelFormatDescriptionArrayCreateWith(AllPixelFormatTypes):
        class: CVPixelFormatDescription
        name: 'get#{g[0]}'
        return_type: List<CVPixelFormatType>
        return_marshaler: CVPixelFormatType.AsListMarshaler
    CVPixelFormatDescription(Create).*:
        class: CVPixelFormatDescription
        name: '#{g[0]}'
        return_type: CVPixelFormatDescription
        parameters:
            pixelFormat:
                type: CVPixelFormatType
    CVPixelFormatDescription(RegisterDescription)WithPixelFormatType:
        class: CVPixelFormatDescription
        name: '#{g[0]}'
        static: true
        parameters:
            description:
                type: CVPixelFormatDescription
            pixelFormat:
                type: CVPixelFormatType
    CVPixelFormatDescription(.*):
        class: CVPixelFormatDescription
        name: '#{g[0]}'

    (.*)GetIntegerCodePointForString:
        class: CVImageBuffer
        name: 'toIntCodePoint#{g[0]}'
    (.*)GetStringForIntegerCodePoint:
        class: CVImageBuffer
        name: 'intCodePointToString#{g[0]}'
    CVIsCompressedPixelFormatAvailable:
        class: CVPixelFormatType
        name: isCompressedFormatAvailable
        parameters:
            0: { type: CVPixelFormatType }

    # Make sure we don't miss any functions if new ones are introduced in a later version
    (k?CV.*):
        class: CoreVideo
        name: 'Function__#{g[0]}'

values:
    # CVTime
    kCV(Zero)Time:
        class: CVTime
        name: '#{g[0]}'
    kCV(Indefinite)Time:
        class: CVTime
        name: '#{g[0]}'

    # CVBuffer
    kCVBufferTime(.*)Key:
        dictionary: CVBufferMovieTime
        name: '#{g[0]}'
        type: CFString
        methods:
            TimeValue:
                type: double
            TimeScale:
                type: double
    kCVBuffer(.*)Key:
        dictionary: CVBufferAttributes
        enum: CVBufferAttribute
        name: '#{g[0]}'
        type: CFString
        methods:
            PropagatedAttachments:
                type: CVBufferAttributes
            NonPropagatedAttachments:
                type: CVBufferAttributes
            MovieTime:
                type: CVBufferMovieTime

    # CVImageBuffer
    kCVImageBufferCleanAperture(Width|Height|HorizontalOffset|VerticalOffset)Key:
        dictionary: CVImageBufferCleanAperture
        name: '#{g[0]}'
        type: CFString
        methods:
            Width:
                type: long
            Height:
                type: long
            HorizontalOffset:
                type: long
            VerticalOffset:
                type: long
    kCVImageBufferPixelAspectRatio(HorizontalSpacing|VerticalSpacing)Key:
        dictionary: CVImageBufferPixelAspectRatio
        name: '#{g[0]}'
        type: CFString
        methods:
            HorizontalSpacing:
                type: long
            VerticalSpacing:
                type: long
    kCVImageBufferDisplay(Width|Height)Key:
        dictionary: CVImageBufferDisplayDimensions
        name: '#{g[0]}'
        type: CFString
        methods:
            Width:
                type: long
            Height:
                type: long
    kCVImageBuffer(.*)Key:
        dictionary: CVImageBufferAttributes
        enum: CVImageBufferAttribute
        dictionary_extends: CVBufferAttributes
        enum_extends: CVBufferAttribute
        name: '#{g[0]}'
        type: CFString
        methods:
            CGColorSpace:
                type: CGColorSpace
            CleanAperture:
                type: CVImageBufferCleanAperture
            PreferredCleanAperture:
                type: CVImageBufferCleanAperture
            FieldCount:
                type: int
            FieldDetail:
                type: CVImageBufferFieldDetail
            PixelAspectRatio:
                type: CVImageBufferPixelAspectRatio
            DisplayDimensions:
                type: CVImageBufferDisplayDimensions
            GammaLevel:
                type: double
            ICCProfile:
                type: NSData
            YCbCrMatrix:
                type: CVImageBufferYCbCrMatrix
            ColorPrimaries:
                type: CVImageBufferColorPrimaries
            TransferFunction:
                type: CVImageBufferTransferFunction
            ChromaLocationTopField:
                type: CVImageBufferChromaLocation
            ChromaLocationBottomField:
                type: CVImageBufferChromaLocation
            ChromaSubsampling:
                type: CVImageBufferChromaSubsampling
            AlphaChannelMode:
                type: CVImageBufferAlphaChannelMode
            AlphaChannelIsOpaque:
                name: AlphaChannelOpaque
                type: boolean
    kCVImageBuffer(AlphaChannelIsOpaque):
        dictionary: CVImageBufferAttributes
        enum: CVImageBufferAttribute
        name: '#{g[0]}'
        type: CFString
    kCVImageBufferFieldDetail(.*):
        enum: CVImageBufferFieldDetail
        name: '#{g[0]}'
        type: CFString
    kCVImageBufferYCbCrMatrix_(.*):
        enum: CVImageBufferYCbCrMatrix
        name: '#{g[0]}'
        type: CFString
    kCVImageBufferColorPrimaries_(.*):
        enum: CVImageBufferColorPrimaries
        name: '#{g[0]}'
        type: CFString
    kCVImageBufferTransferFunction_(.*):
        enum: CVImageBufferTransferFunction
        name: '#{g[0]}'
        type: CFString
    kCVImageBufferChromaLocation_(.*):
        enum: CVImageBufferChromaLocation
        name: '#{g[0]}'
        type: CFString
    kCVImageBufferChromaSubsampling_(.*):
        enum: CVImageBufferChromaSubsampling
        name: '#{g[0]}'
        type: CFString
    kCVImageBufferAlphaChannelMode_(.*):
        enum: CVImageBufferAlphaChannelMode
        name: '#{g[0]}'
        type: CFString

    # CVMetalTextureCache
    kCVMetalTextureCache(.*)Key:
        dictionary: CVMetalTextureCacheAttributes
        name: '#{g[0]}'
        type: CFString
        methods:
            MaximumTextureAge:
                type: long

    # CVOpenGLESTextureCache
    kCVOpenGLESTextureCache(.*)Key:
        dictionary: CVOpenGLESTextureCacheAttributes
        name: '#{g[0]}'
        type: CFString
        methods:
            MaximumTextureAge:
                type: long

    # CVPixelBufferPool
    kCVPixelBufferPool(AllocationThreshold)Key:
        dictionary: CVPixelBufferPoolAuxiliaryAttributes
        name: '#{g[0]}'
        type: CFString
        methods:
            AllocationThreshold:
                type: int
    kCVPixelBufferPool(.*)Key:
        dictionary: CVPixelBufferPoolAttributes
        name: '#{g[0]}'
        type: CFString
        methods:
            MinimumBufferCount:
                type: int
            MaximumBufferAge:
                type: double
    kCVPixelBufferPool(.*Notification):
        class: CVPixelBufferPool
        name: '#{g[0]}'
        type: NSString
    
    # CVPixelBuffer
    kCVPixelBuffer(.*)Key:
        dictionary: CVPixelBufferAttributes
        enum: CVPixelBufferAttribute
        dictionary_extends: CVBufferAttributes
        enum_extends: CVBufferAttribute
        name: '#{g[0]}'
        type: CFString
        methods:
            MemoryAllocator:
                type: CFAllocator
            Width:
                type: long
            Height:
                type: long
            ExtendedPixelsLeft:
                type: long
            ExtendedPixelsTop:
                type: long
            ExtendedPixelsRight:
                type: long
            ExtendedPixelsBottom:
                type: long
            BytesPerRowAlignment:
                type: long
            CGBitmapContextCompatibility:
                name: compatibleWithCGBitmapContext
                type: boolean
            CGImageCompatibility:
                name: compatibleWithCGImage
                type: boolean
            OpenGLCompatibility:
                name: compatibleWithOpenGL
                type: boolean
            PlaneAlignment:
                type: long
            IOSurfaceProperties:
                type: NSDictionary
            OpenGLESCompatibility:
                name: compatibleWithOpenGLES
                type: boolean
            MetalCompatibility:
                name: compatibleWithMetal
                type: boolean
            VersatileBayerKey:
                type: CVVersatileBayerPattern
            RawSenselSitingOffsets:
                type: NSData
            RawBlackLevel:
                type: int
            RawWhiteLevel:
                type: int
            RawWhiteBalanceCCT:
                type: int
            RawWhiteBalanceRedFactor:
                type: float
            RawWhiteBalanceBlueFactor:
                type: float
            RawColorMatrix:
                type: NSData
            RawGainFactor:
                type: float
            RawRecommendedCrop:
                type: NSData
    kCVPixelBuffer(VersatileBayerKey)_BayerPattern:
        dictionary: CVPixelBufferAttributes
        enum: CVPixelBufferAttribute
        name: '#{g[0]}'
        type: CFString
    kCVPixelBufferProResRAWKey_(.*):
        dictionary: CVPixelBufferAttributes
        enum: CVPixelBufferAttribute
        name: 'Raw#{g[0]}'
        type: CFString

    # CVPixelFormatDescription
    kCVPixelFormat(.*):
        dictionary: CVPixelFormatDescription
        name: '#{g[0]}'
        type: CFString
        methods:
            Name:
                type: String
            Constant:
                type: long
            CodecType:
                type: String
            FourCC:
                type: String
            ContainsAlpha:
                type: boolean
            ContainsYCbCr:
                type: boolean
            ContainsRGB:
                type: boolean
            Planes:
                type: int
            BlockWidth:
                type: int
                default: 1
            BlockHeight:
                type: int
                default: 1
            BitsPerBlock:
                type: int
            BlockHorizontalAlignment:
                type: int
                default: 1
            BlockVerticalAlignment:
                type: int
                default: 1
            BlackBlock:
                type: NSData
            HorizontalSubsampling:
                type: int
                default: 1
            VerticalSubsampling:
                type: int
                default: 1
            OpenGLFormat:
                type: int
            OpenGLType:
                type: int
            OpenGLInternalFormat:
                type: int
            CGBitmapInfo:
                type: CGBitmapInfo
            QDCompatibility:
                name: compatibleWithQD
                type: boolean
            CGBitmapContextCompatibility:
                name: compatibleWithCGBitmapContext
                type: boolean
            CGImageCompatibility:
                name: compatibleWithCGImage
                type: boolean
            OpenGLCompatibility:
                name: compatibleWithOpenGL
                type: boolean
            OpenGLESCompatibility:
                name: compatibleWithOpenGLES
                type: boolean
    kCVMetalTextureUsage:
        class: CVMetalTexture
        name: textureUsage
    kCVMetalTextureStorageMode:
        class: CVMetalTexture
        name: storageMode

    # Make sure we don't miss any values if new ones are introduced in a later version
    (k?CV.*):
        class: CoreVideo
        name: 'Value__#{g[0]}'

constants:
    kCVTimeStamp(.*):
        class: CVTimeStamp
        name: '#{g[0]}'

    # Make sure we don't miss any constants if new ones are introduced in a later version   
    (k?CV.*):
        class: CoreVideo
        name: 'Constant__#{g[0]}'
