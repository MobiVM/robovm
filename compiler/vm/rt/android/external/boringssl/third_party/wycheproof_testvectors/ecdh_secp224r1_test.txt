# Imported from Wycheproof's ecdh_secp224r1_test.json.
# This file is generated by convert_wycheproof.go. Do not edit by hand.
#
# Algorithm: ECDH
# Generator version: 0.4.12

[curve = secp224r1]
[encoding = asn]

# tcId = 1
# normal case
private = 565577a49415ca761a0322ad54e4ad0ae7625174baf372c2816f5328
public = 304e301006072a8648ce3d020106052b81040021033a00047d8ac211e1228eb094e285a957d9912e93deee433ed777440ae9fc719b01d050dfbe653e72f39491be87fb1a2742daa6e0a2aada98bb1aca
result = valid
shared = b8ecdb552d39228ee332bafe4886dbff272f7109edf933bc7542bd4f

# tcId = 2
# compressed public key
private = 565577a49415ca761a0322ad54e4ad0ae7625174baf372c2816f5328
public = 3032301006072a8648ce3d020106052b81040021031e00027d8ac211e1228eb094e285a957d9912e93deee433ed777440ae9fc71
result = acceptable
shared = b8ecdb552d39228ee332bafe4886dbff272f7109edf933bc7542bd4f
# The point in the public key is compressed. Not every library supports points
# in compressed format.

# tcId = 3
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a0004e73a6ca72f3a2fae6e0a01a0ed03bfa3058b04576942eaf063095e62ca16fd31fa0f38eeb592cbeea1147751fdd2a5b6cc0ead404467a5b6
result = valid
shared = 00000000000000000000000000000000000000000000000000000003

# tcId = 4
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a00045763fa2ae16367ad23d471cc9a52466f0d81d864e5640cefe384114594d9fecfbed4f254505ac8b41d2532055a07f0241c4818b552cbb636
result = valid
shared = 00000000000000000000000100000000000000000000000000000001

# tcId = 5
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a0004142c1fd80fa2121a59aa898144084ec033f7a56a34eee0b499e29ae51c6d8c1bbb1ef2a76d565899fe44ffc1207d530d7f598fb77f4bb76b
result = valid
shared = 00000000000000ffffffffffffff0000000000000100000000000000

# tcId = 6
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a0004ed6f793e10c80d12d871cf8988399c4898a9bf9ffd8f27399f63de25f0051cdf4eec7f368f922cfcd948893ceca0c92e540cc4367a99a66a
result = valid
shared = 00000000ffffffffffffffff00000000000000010000000000000000

# tcId = 7
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a000408fcfc1a63c82860be12e4137433dfc40be9acdd245f9a8c4e56be61a385fc09f808383383f4b1d0d5365b6e5dcfacdc19bc7bcfed221274
result = valid
shared = 0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff

# tcId = 8
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a0004d883ed77f1861e8712800d31df67888fe39f150c79a27aa88caeda6b180f3f623e2ff3ab5370cf8179165b085af3dd4502850c0104caed9a
result = valid
shared = 0003fffffff00000003fffffff00000003fffffff000000040000000

# tcId = 9
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a00042b8b279b85ee3f3d2c0abeb36fdfc5aad6157d652d26489381a32cd73224bd757ef794acc92b0b3b9e7990618bb343a9a09bdb9d3616eff6
result = valid
shared = 01fffffffc00000007fffffff00000001fffffffc000000080000001

# tcId = 10
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a00048bd5f03391eeeae1744e8fc53d314efffafa4d3fa4f1b95c3388a9cd7c86358b273119c537133eb55e79c6ac510b10980b379b919ccf2e2f
result = valid
shared = 0a15c112ff784b1445e889f955be7e3ffdf451a2c0e76ab5cb32cf41

# tcId = 11
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a0004ce9631b6a16227778625c8e5421ae083cdd913abefde01dbe69f6c2b95386aff2b483b2c47151cfaabfd000614c683ce2e1778221ae42c1b
result = valid
shared = 62989eaaa26a16f07330c3c51e0a4631fd016bfcede26552816aee39

# tcId = 12
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a00041f441c98eda956a6a7fdbfd8d21910860ab59d16c3e52f8e7fad6ca5df61a55fc508fc0499c55492f1e87bb2faa0cb4170b79f3a85ec2f3d
result = valid
shared = 661ac958c0febbc718ccf39cefc6b66c4231fbb9a76f35228a3bf5c3

# tcId = 13
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a0004be74583cb9d3a05ae54923624e478a329a697d842dfae33141c844d7d9ba4fc96e0fe716ac0542e87368662fc2f0cb9b0ae57936ddec7190
result = valid
shared = 6d7e41821abe1094d430237923d2a50de31768ab51b12dce8a09e34c

# tcId = 14
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a0004a281ad992b363597ac93ff0de8ab1f7e51a6672dcbb58f9d739ba430ce0192874038daefc3130eec65811c7255da70fea65c1003f6892faa
result = valid
shared = 7fffffffffffffffffffffffffffffffffffffffffffffffffffffff

# tcId = 15
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a0004be3e22133f51203f631b81dde8c020cdea5daa1f99cfc05c88fad2dc0f243798d6e72d1de9e3cdca4144e0a6c0f2a584d07589006972c197
result = valid
shared = fffc0007fff0001fffc0007fff0001fffc0007fff0001fffc0008001

# tcId = 16
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a0004af14547c20afbd91bfe64ea03d45a76a71241f23520ef897ff91eff1b54ca6ca8c25fd73852ec6654617434eff7f0225684d4dea7a4f8a97
result = valid
shared = ffff0000003ffffff0000003ffffff0000003ffffff0000003ffffff

# tcId = 17
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a0004b1e484925018729926acda56ff3e2f6c1e7e8f162b178d8e8afb45564fceaa6da5d998fe26b6b26a055169063a5ab6908852ca8b54e2de6c
result = valid
shared = fffff0000007fffffe000000ffffffc000001ffffff8000003ffffff

# tcId = 18
# edge case for shared secret
private = 0a2b6442a37f9201b56758034d2009be64b0ab7c02d7e398cac9665d6
public = 304e301006072a8648ce3d020106052b81040021033a0004937eb09fb145c8829cb7df20a4cbeed396791373de277871d6c5f9cc3b5b4fd56464a71fc4a2a6af3bd251952bffa829489e68a8d06f96b6
result = valid
shared = ffffffff00000000ffffffff00000000ffffffff00000000ffffffff

# tcId = 19
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a0004000000000000000000000000000000000000000000000000000000037cac269c67bd55ea14efff4eadefe5e74978514af14c88fab46ec046
result = valid
shared = 3fa0b9ff70b884f9f57bb84f7a9532d93f6ba803f89dd8ff008177d7

# tcId = 20
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a0004000000000000000000000001000000000000000000000000000000012ea2f4917bdfdb008306cc10a18e2557633ba861001829dcbfb96fba
result = valid
shared = be1ded8cb7ff8a585181f96d681e31b332fe27dcae922dca2310300d

# tcId = 21
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a000400000000000000ffffffffffffff000000000000010000000000000073ca5f8f104997a2399e0c7f25e72a75ec29fc4542533d3fea89a33a
result = valid
shared = a2e86a260e13515918a0cafdd87855f231b5624c560f976159e06a75

# tcId = 22
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a000400000000ffffffffffffffff000000000000000100000000000000006fe6805f59b19b0dd389452a1d4a420bfeb6c369cf6fed5b12e6e654
result = valid
shared = 31ef7c8d10404a0046994f313a70574b027e87f9028eca242c1b5bf5

# tcId = 23
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a00040000ffff0000ffff0000ffff0000ffff0000ffff0000ffff0000ffff77c5cfa4e2c384938d48bd8dd98f54c86b279f1df8c0a1f6692439c9
result = valid
shared = d1976a8ef5f54f24f5a269ad504fdca849fc9c28587ba294ef267396

# tcId = 24
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a00040003fffffff00000003fffffff00000003fffffff00000004000000001f0828136016bb97445461bc59f2175d8d23557d6b9381f26136e3d
result = valid
shared = ce7890d108ddb2e5474e6417fcf7a9f2b3bd018816062f4835260dc8

# tcId = 25
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a000401fffffffc00000007fffffff00000001fffffffc0000000800000012d8acca6f199d4a94b933ba1aa713a7debde8ac57b928f596ae66a66
result = valid
shared = 30b6ff6e8051dae51e4fe34b2d9a0b1879153e007eb0b5bdf1791a9c

# tcId = 26
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a00040a15c112ff784b1445e889f955be7e3ffdf451a2c0e76ab5cb32cf413d4df973c563c6decdd435e4f864557e4c273096d9941ca4260a266e
result = valid
shared = 77ec668a00f72d85aa527624abb16c039fe490d17dd6c455a1ed7fd8

# tcId = 27
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a000462989eaaa26a16f07330c3c51e0a4631fd016bfcede26552816aee39389ee9436d616cab90032931aa7fbbfcfc13309f61e2423cc8dab93c
result = valid
shared = a3f432f6aba9a92f49a5ea64ffe7059a9d9b487a0b5223ddc988208b

# tcId = 28
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a0004661ac958c0febbc718ccf39cefc6b66c4231fbb9a76f35228a3bf5c3103b8040e3cb41966fc64a68cacb0c14053f87d27e8ed7bf2d7fe51b
result = valid
shared = 1530fd9caf03737af34a4ba716b558cbecbc35d18402535a0a142313

# tcId = 29
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a00046d7e41821abe1094d430237923d2a50de31768ab51b12dce8a09e34c276cf273d75d367820dd556182def0957af0a314f48fed227c298dc0
result = valid
shared = cfc39ccacb94ad0e0552b2e47112f60fbbe7ae0dc32230b9273dd210

# tcId = 30
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a00047fffffffffffffffffffffffffffffffffffffffffffffffffffffff7d8dbca36c56bcaae92e3475f799294f30768038e816a7d5f7f07d77
result = valid
shared = 73bd63bd384a0faafb75cfed3e95d3892cbacf0db10f282c3b644771

# tcId = 31
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a0004fffc0007fff0001fffc0007fff0001fffc0007fff0001fffc000800174f1ff5ea7fbc72b92f61e06556c26bab84c0b082dd6400ca1c1eb6d
result = valid
shared = 85b079c62e1f5b0fd6841dfa16026e15b641f65e13a14042567166bb

# tcId = 32
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a0004ffff0000003ffffff0000003ffffff0000003ffffff0000003ffffff0126fdd5fccd0b5aa7fd5bb5b1308584b30556248cec80208a2fe962
result = valid
shared = 8a834ff40e3fc9f9d412a481e18537ea799536c5520c6c7baaf12166

# tcId = 33
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a0004fffff0000007fffffe000000ffffffc000001ffffff8000003ffffff20cfa23077acc9fbcb71339c65880cd0b966b8a9497e65abed17f0b5
result = valid
shared = a0887269766e6efcbc81d2b38f2d4638663f12377468a23421044188

# tcId = 34
# edge cases for ephemeral key
private = 2bc15cf3981f4e15bbad387b506df647989e5478160be862f8c26969
public = 304e301006072a8648ce3d020106052b81040021033a0004ffffffff00000000ffffffff00000000ffffffff00000000ffffffff1c05ac2d4f10b69877c3243d51f887277b7bf735c326ab2f0d70da8c
result = valid
shared = c65d1911bc076a74588d8793ce7a0dcabf5793460cd2ebb02754a1be

# tcId = 35
# edge case private key
private = 3
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = e71f2157bfe37697ea5193d4732dcc6e5412fa9d38387eacd391c1c6

# tcId = 36
# edge case private key
private = 0ffffffffffffffffffffffffffffffffffffffffffffffff
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = fa2664717c7fa0161ec2c669b2c0986cdc20456a6e5406302bb53c77

# tcId = 37
# edge case private key
private = 1000000000000000000000000000000000000000000000000000000
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = af6e5ad34497bae0745f53ad78ce8b285d79f400d5c6e6a071f8e6bd

# tcId = 38
# edge case private key
private = 7fffffffffffffffffffffffffffffffffffffffffffffffffffffff
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = 12fd302ff8c13c55a9c111f8bb6b0a13ecf88299c0ae3032ce2bcaff

# tcId = 39
# edge case private key
private = 080000000000000000000000000000000000000000000000000000000
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = 73f1a395b842f1a6752ae417e2c3dc90cafc4476d1d861b7e68ad030

# tcId = 40
# edge case private key
private = 0ffffffffffffffffffffffffffff16a2e0b8f03d13dd29455c5c2a3d
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = b329c20ddb7c78ee4e622bb23a984c0d273ba34b6269f3d9e8f89f8e

# tcId = 41
# edge case private key
private = 0ffffffffffffffffffffffffffff16a2e0b8f03e13cd29455c5c2a3d
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = 6f48345209b290ffc5abbe754a201479e5d667a209468080d06197b4

# tcId = 42
# edge case private key
private = 0ffffffffffffffffffffffffffff16a2e0b8f03e13d529455c5c2a3d
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = 9f6e30c1c9dad42a153aacd4b49a8e5c721d085cd07b5d5aec244fc1

# tcId = 43
# edge case private key
private = 0ffffffffffffffffffffffffffff16a2e0b8f03e13dd29445c5c2a3d
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = 8cadfb19a80949e61bd5b829ad0e76d18a5bb2eeb9ed7fe2b901cecd

# tcId = 44
# edge case private key
private = 0ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c29b7
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = 475fd96e0eb8cb8f100a5d7fe043a7a6851d1d611da2643a3c6ae708
# The private key has a special value. Implementations using addition
# subtraction chains for the point multiplication may get the point at infinity
# as an intermediate result. See CVE_2017_10176

# tcId = 45
# edge case private key
private = 0ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a37
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = 41ef931d669d1f57d8bb95a01a92321da74be8c6cbc3bbe0b2e73ebd
# The private key has a special value. Implementations using addition
# subtraction chains for the point multiplication may get the point at infinity
# as an intermediate result. See CVE_2017_10176

# tcId = 46
# edge case private key
private = 0ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3a
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = e71f2157bfe37697ea5193d4732dcc6e5412fa9d38387eacd391c1c6

# tcId = 47
# edge case private key
private = 0ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3b
public = 304e301006072a8648ce3d020106052b81040021033a0004478e73465bb1183583f4064e67e8b4343af4a05d29dfc04eb60ac2302e5b9a3a1b32e4208d4c284ff26822e09c3a9a4683443e4a35175504
result = valid
shared = 11ff15126411299cbd49e2b7542e69e91ef132e2551a16ecfebb23a3
# The private key has a special value. Implementations using addition
# subtraction chains for the point multiplication may get the point at infinity
# as an intermediate result. See CVE_2017_10176

# tcId = 48
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a00040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
result = invalid
shared = 

# tcId = 49
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a00040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
result = invalid
shared = 

# tcId = 50
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a000400000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffff000000000000000000000000
result = invalid
shared = 

# tcId = 51
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a000400000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffff000000000000000000000001
result = invalid
shared = 

# tcId = 52
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a00040000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000
result = invalid
shared = 

# tcId = 53
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a00040000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000001
result = invalid
shared = 

# tcId = 54
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a000400000000000000000000000000000000000000000000000000000001ffffffffffffffffffffffffffffffff000000000000000000000000
result = invalid
shared = 

# tcId = 55
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a000400000000000000000000000000000000000000000000000000000001ffffffffffffffffffffffffffffffff000000000000000000000001
result = invalid
shared = 

# tcId = 56
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a0004ffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000
result = invalid
shared = 

# tcId = 57
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a0004ffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000001
result = invalid
shared = 

# tcId = 58
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a0004ffffffffffffffffffffffffffffffff000000000000000000000000ffffffffffffffffffffffffffffffff000000000000000000000000
result = invalid
shared = 

# tcId = 59
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a0004ffffffffffffffffffffffffffffffff000000000000000000000000ffffffffffffffffffffffffffffffff000000000000000000000001
result = invalid
shared = 

# tcId = 60
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a0004ffffffffffffffffffffffffffffffff00000000000000000000000100000000000000000000000000000000000000000000000000000000
result = invalid
shared = 

# tcId = 61
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a0004ffffffffffffffffffffffffffffffff00000000000000000000000100000000000000000000000000000000000000000000000000000001
result = invalid
shared = 

# tcId = 62
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a0004ffffffffffffffffffffffffffffffff000000000000000000000001ffffffffffffffffffffffffffffffff000000000000000000000000
result = invalid
shared = 

# tcId = 63
# point is not on curve
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 304e301006072a8648ce3d020106052b81040021033a0004ffffffffffffffffffffffffffffffff000000000000000000000001ffffffffffffffffffffffffffffffff000000000000000000000001
result = invalid
shared = 

# tcId = 64
private = 0c6cafb74e2a5b5ed4b991cbbfbc28c18f6df208b6d05e7a2e6668014
public = 3015301006072a8648ce3d020106052b81040021030100
result = invalid
shared = 

# tcId = 65
# public point not on curve
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 304e301006072a8648ce3d020106052b81040021033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5d
result = invalid
shared = 
# The public key has been modified and is invalid. An implementation should
# always check whether the public key is valid and on the same curve as the
# private key. The test vector includes the shared secret computed with the
# original public key if the public point is on the curve of the private key.
# Generating a shared secret other than the one with the original key likely
# indicates that the bug is exploitable.

# tcId = 66
# public point = (0,0)
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 304e301006072a8648ce3d020106052b81040021033a00040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
result = invalid
shared = 
# The public key has been modified and is invalid. An implementation should
# always check whether the public key is valid and on the same curve as the
# private key. The test vector includes the shared secret computed with the
# original public key if the public point is on the curve of the private key.
# Generating a shared secret other than the one with the original key likely
# indicates that the bug is exploitable.

# tcId = 67
# order = -26959946667150639794667015087019625940457807714424391721682722368061
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 308201133081d406072a8648ce3d02013081c8020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff000000000000000000000001303c041cfffffffffffffffffffffffffffffffefffffffffffffffffffffffe041cb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4043904b70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21bd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34021dff0000000000000000000000000000e95d1f470fc1ec22d6baa3a3d5c3020101033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b
result = invalid
shared = 9b992dad1c2b5dadd3b5aeb84b7a91fb6fe5f46e02ab2c7fa32696a7
# The order of the public key has been modified. If this order is used in a
# cryptographic primitive instead of the correct order then private keys may
# leak. E.g. ECDHC in BC 1.52 suffered from this.
# The public key has been modified and is invalid. An implementation should
# always check whether the public key is valid and on the same curve as the
# private key. The test vector includes the shared secret computed with the
# original public key if the public point is on the curve of the private key.
# Generating a shared secret other than the one with the original key likely
# indicates that the bug is exploitable.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 68
# order = 0
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 3081f73081b806072a8648ce3d02013081ac020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff000000000000000000000001303c041cfffffffffffffffffffffffffffffffefffffffffffffffffffffffe041cb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4043904b70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21bd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34020100020101033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b
result = invalid
shared = 9b992dad1c2b5dadd3b5aeb84b7a91fb6fe5f46e02ab2c7fa32696a7
# The order of the public key has been modified. If this order is used in a
# cryptographic primitive instead of the correct order then private keys may
# leak. E.g. ECDHC in BC 1.52 suffered from this.
# The public key has been modified and is invalid. An implementation should
# always check whether the public key is valid and on the same curve as the
# private key. The test vector includes the shared secret computed with the
# original public key if the public point is on the curve of the private key.
# Generating a shared secret other than the one with the original key likely
# indicates that the bug is exploitable.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 69
# order = 1
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 3081f73081b806072a8648ce3d02013081ac020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff000000000000000000000001303c041cfffffffffffffffffffffffffffffffefffffffffffffffffffffffe041cb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4043904b70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21bd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34020101020101033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b
result = acceptable
shared = 9b992dad1c2b5dadd3b5aeb84b7a91fb6fe5f46e02ab2c7fa32696a7
# The order of the public key has been modified. If this order is used in a
# cryptographic primitive instead of the correct order then private keys may
# leak. E.g. ECDHC in BC 1.52 suffered from this.
# A parameter that is typically not used for ECDH has been modified. Sometimes
# libraries ignore small differences between public and private key. For
# example, a library might ignore an incorrect cofactor in the public key. We
# consider ignoring such changes as acceptable as long as these differences do
# not change the outcome of the ECDH computation, i.e. as long as the
# computation is done on the curve from the private key.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 70
# order = 6277101735386680763835789423207665314073163949517624387909
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 3082010f3081d006072a8648ce3d02013081c4020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff000000000000000000000001303c041cfffffffffffffffffffffffffffffffefffffffffffffffffffffffe041cb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4043904b70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21bd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34021900ffffffffffffffffffffffffffff16a2e0b8f03e13dd2945020101033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b
result = acceptable
shared = 9b992dad1c2b5dadd3b5aeb84b7a91fb6fe5f46e02ab2c7fa32696a7
# The order of the public key has been modified. If this order is used in a
# cryptographic primitive instead of the correct order then private keys may
# leak. E.g. ECDHC in BC 1.52 suffered from this.
# A parameter that is typically not used for ECDH has been modified. Sometimes
# libraries ignore small differences between public and private key. For
# example, a library might ignore an incorrect cofactor in the public key. We
# consider ignoring such changes as acceptable as long as these differences do
# not change the outcome of the ECDH computation, i.e. as long as the
# computation is done on the curve from the private key.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 71
# generator = (0,0)
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 308201133081d406072a8648ce3d02013081c8020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff000000000000000000000001303c041cfffffffffffffffffffffffffffffffefffffffffffffffffffffffe041cb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb40439040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000021d00ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d020101033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b
result = acceptable
shared = 9b992dad1c2b5dadd3b5aeb84b7a91fb6fe5f46e02ab2c7fa32696a7
# A parameter that is typically not used for ECDH has been modified. Sometimes
# libraries ignore small differences between public and private key. For
# example, a library might ignore an incorrect cofactor in the public key. We
# consider ignoring such changes as acceptable as long as these differences do
# not change the outcome of the ECDH computation, i.e. as long as the
# computation is done on the curve from the private key.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 72
# generator not on curve
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 308201133081d406072a8648ce3d02013081c8020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff000000000000000000000001303c041cfffffffffffffffffffffffffffffffefffffffffffffffffffffffe041cb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4043904b70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21bd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e36021d00ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d020101033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b
result = acceptable
shared = 9b992dad1c2b5dadd3b5aeb84b7a91fb6fe5f46e02ab2c7fa32696a7
# A parameter that is typically not used for ECDH has been modified. Sometimes
# libraries ignore small differences between public and private key. For
# example, a library might ignore an incorrect cofactor in the public key. We
# consider ignoring such changes as acceptable as long as these differences do
# not change the outcome of the ECDH computation, i.e. as long as the
# computation is done on the curve from the private key.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 73
# cofactor = -1
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 308201133081d406072a8648ce3d02013081c8020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff000000000000000000000001303c041cfffffffffffffffffffffffffffffffefffffffffffffffffffffffe041cb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4043904b70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21bd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34021d00ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d0201ff033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b
result = invalid
shared = 9b992dad1c2b5dadd3b5aeb84b7a91fb6fe5f46e02ab2c7fa32696a7
# The public key has been modified and is invalid. An implementation should
# always check whether the public key is valid and on the same curve as the
# private key. The test vector includes the shared secret computed with the
# original public key if the public point is on the curve of the private key.
# Generating a shared secret other than the one with the original key likely
# indicates that the bug is exploitable.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 74
# cofactor = 0
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 308201133081d406072a8648ce3d02013081c8020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff000000000000000000000001303c041cfffffffffffffffffffffffffffffffefffffffffffffffffffffffe041cb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4043904b70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21bd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34021d00ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d020100033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b
result = invalid
shared = 9b992dad1c2b5dadd3b5aeb84b7a91fb6fe5f46e02ab2c7fa32696a7
# The public key has been modified and is invalid. An implementation should
# always check whether the public key is valid and on the same curve as the
# private key. The test vector includes the shared secret computed with the
# original public key if the public point is on the curve of the private key.
# Generating a shared secret other than the one with the original key likely
# indicates that the bug is exploitable.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 75
# cofactor = 2
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 308201133081d406072a8648ce3d02013081c8020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff000000000000000000000001303c041cfffffffffffffffffffffffffffffffefffffffffffffffffffffffe041cb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4043904b70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21bd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34021d00ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d020102033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b
result = acceptable
shared = 9b992dad1c2b5dadd3b5aeb84b7a91fb6fe5f46e02ab2c7fa32696a7
# A parameter that is typically not used for ECDH has been modified. Sometimes
# libraries ignore small differences between public and private key. For
# example, a library might ignore an incorrect cofactor in the public key. We
# consider ignoring such changes as acceptable as long as these differences do
# not change the outcome of the ECDH computation, i.e. as long as the
# computation is done on the curve from the private key.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 76
# cofactor =
# 26959946667150639794667015087019625940457807714424391721682722368061
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 3082012f3081f006072a8648ce3d02013081e4020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff000000000000000000000001303c041cfffffffffffffffffffffffffffffffefffffffffffffffffffffffe041cb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4043904b70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21bd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34021d00ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d021d00ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b
result = invalid
shared = 9b992dad1c2b5dadd3b5aeb84b7a91fb6fe5f46e02ab2c7fa32696a7
# The public key has been modified and is invalid. An implementation should
# always check whether the public key is valid and on the same curve as the
# private key. The test vector includes the shared secret computed with the
# original public key if the public point is on the curve of the private key.
# Generating a shared secret other than the one with the original key likely
# indicates that the bug is exploitable.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 77
# cofactor = None
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 308201103081d106072a8648ce3d02013081c5020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff000000000000000000000001303c041cfffffffffffffffffffffffffffffffefffffffffffffffffffffffe041cb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4043904b70e0cbd6bb4bf7f321390b94a03c1d356c21122343280d6115c1d21bd376388b5f723fb4c22dfe6cd4375a05a07476444d5819985007e34021d00ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b
result = acceptable
shared = 9b992dad1c2b5dadd3b5aeb84b7a91fb6fe5f46e02ab2c7fa32696a7
# A parameter that is typically not used for ECDH has been modified. Sometimes
# libraries ignore small differences between public and private key. For
# example, a library might ignore an incorrect cofactor in the public key. We
# consider ignoring such changes as acceptable as long as these differences do
# not change the outcome of the ECDH computation, i.e. as long as the
# computation is done on the curve from the private key.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 78
# modified prime
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 308201133081d406072a8648ce3d02013081c8020101302806072a8648ce3d0101021d00c123da0a46a971da9468161e61a5c71a02e6c9bdb3392f4016fb457b303c041c3edc25f5b9568e256b97e9e19e5a38e4fd1936424cc6d0bfe904ba83041cb4050a850c04b3abf54132565044b0b7d7bfd8ba270b39432355ffb4043904000000000000000000285145f31ae4d40000000000000000000003387edad63d1a600740ce66b6f04d67ed06ea1a75c16294336ed05b3fa3021d00ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d020101033a0004000000000000000000285145f31ae4d40000000000000000000003387edad63d1a600740ce66b6f04d67ed06ea1a75c16294336ed05b3fa3
result = invalid
shared = 3de0a5036fcde544c72cbe33cedb8709549bc3b6a4d750ee0de4c80d
# The modulus of the public key has been modified. The public point of the
# public key has been chosen so that it is both a point on both the curve of the
# modified public key and the private key.
# The public key has been modified and is invalid. An implementation should
# always check whether the public key is valid and on the same curve as the
# private key. The test vector includes the shared secret computed with the
# original public key if the public point is on the curve of the private key.
# Generating a shared secret other than the one with the original key likely
# indicates that the bug is exploitable.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 79
# using secp256r1
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 3059301306072a8648ce3d020106082a8648ce3d03010703420004cbf6606595a3ee50f9fceaa2798c2740c82540516b4e5a7d361ff24e9dd15364e5408b2e679f9d5310d1f6893b36ce16b4a507509175fcb52aea53b781556b39
result = invalid
shared = 
# The public key has been modified and is invalid. An implementation should
# always check whether the public key is valid and on the same curve as the
# private key. The test vector includes the shared secret computed with the
# original public key if the public point is on the curve of the private key.
# Generating a shared secret other than the one with the original key likely
# indicates that the bug is exploitable.

# tcId = 80
# using secp256k1
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 3056301006072a8648ce3d020106052b8104000a03420004a1263e75b87ae0937060ff1472f330ee55cdf8f4329d6284a9ebfbcc856c11684225e72cbebff41e54fb6f00e11afe53a17937bedbf2df787f8ef9584f775838
result = invalid
shared = 
# The public key has been modified and is invalid. An implementation should
# always check whether the public key is valid and on the same curve as the
# private key. The test vector includes the shared secret computed with the
# original public key if the public point is on the curve of the private key.
# Generating a shared secret other than the one with the original key likely
# indicates that the bug is exploitable.

# tcId = 81
# a = 0
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 3081f83081b906072a8648ce3d02013081ad020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff0000000000000000000000013021040100041cd0d5e347a38ce5b6e1f47edddd8a223bca45d2015de76ec835a4df57043904a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b021d00ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d020101033a0004a10fb7bf22d299fc5bc43bd2d0e8da28af28ace8430bee28f9e5b57554275c0615d8d9a3011d7bc4c1c4cf4a834c8dc46f25b98854401a5b
result = acceptable
shared = 9b992dad1c2b5dadd3b5aeb84b7a91fb6fe5f46e02ab2c7fa32696a7
# A parameter that is typically not used for ECDH has been modified. Sometimes
# libraries ignore small differences between public and private key. For
# example, a library might ignore an incorrect cofactor in the public key. We
# consider ignoring such changes as acceptable as long as these differences do
# not change the outcome of the ECDH computation, i.e. as long as the
# computation is done on the curve from the private key.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 82
# public key of order 3
private = 0d07629eb653a169ae3231ea1030faaf3e7f8ffe388030ee315d0a1d2
public = 308201133081d406072a8648ce3d02013081c8020101302806072a8648ce3d0101021d00ffffffffffffffffffffffffffffffff000000000000000000000001303c041ce8f32429d997935dc5e2e6621cc0c130464d38c8cdf26454bb36080d041cdcc54f9c4dfd9b10d8c2cc735751d55b0ab7a7765cf9d49483bf6d8804390481020a9259fe8552f4aa794669b24033bc9283bc57715cc013e8ddc612cd1b9eb05e696610a5e8cae07a522a74eff150eb553adf98c01478021d00ffffffffffffffffffffffffffff16a2e0b8f03e13dd29455c5c2a3d020101033a000481020a9259fe8552f4aa794669b24033bc9283bc57715cc013e8ddc6ed32e4614fa19699ef5a17351f85add48b100eaf14aac520673feb89
result = invalid
shared = 19845b25666b143d3f0f070781c1c595c66b9e854106a56b7db774cb
# The vector contains a weak public key. The curve is not a named curve, the
# public key point has order 3 and has been chosen to be on the same curve as
# the private key. This test vector is used to check ECC implementations for
# missing steps in the verification of the public key.
# The public key has been modified and is invalid. An implementation should
# always check whether the public key is valid and on the same curve as the
# private key. The test vector includes the shared secret computed with the
# original public key if the public point is on the curve of the private key.
# Generating a shared secret other than the one with the original key likely
# indicates that the bug is exploitable.
# The public key does not use a named curve. RFC 3279 allows to encode such
# curves by explicitly encoding, the parameters of the curve equation, modulus,
# generator, order and cofactor. However, many crypto libraries only support
# named curves. Modifying some of the EC parameters and encoding the
# corresponding public key as an unnamed curve is a potential attack vector.

# tcId = 83
# Public key uses wrong curve: secp256r1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 3059301306072a8648ce3d020106082a8648ce3d03010703420004ea36cf70fab75684eabe6569ce623db0deaa8c95f61c8be50b8b9f3eb7d4b9ec48d9e4814f4cb1c286589eaaa990d3f3238b2d6d6be964abfad964824b653376
result = invalid
shared = 

# tcId = 84
# Public key uses wrong curve: secp384r1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 3076301006072a8648ce3d020106052b81040022036200044b2470ad3d13269c10a17d222ebdffbd61fb04488db1b1d7caef8d4988b7bb8ba6d81857a05b255232b9e37a30e328bb9d9c42d86096f2bcee3d258cfe208d2fd03cbd5ccc6a3bb8ce4b0efa5b059b4afbd0377aa6e274721a57efe8ee85d86a
result = invalid
shared = 

# tcId = 85
# Public key uses wrong curve: secp521r1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 30819b301006072a8648ce3d020106052b810400230381860004012841a2260f0f1f424865fef275374779bf0355720223f8ec6a9ba767b1603b492f58a6bba1705d882257bc6be1935de4411c5f1fdad44ec65ba8b97ce0e73e1ac90006937832a602147e37c1a42ca2a63629ffc9a35b31bfacb38c6242b42916125f7446b45c718f797259bc3011cb71e868560b331cf7d01139a0643443f9fd7306c1
result = invalid
shared = 

# tcId = 86
# Public key uses wrong curve: secp256k1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 3056301006072a8648ce3d020106052b8104000a03420004c2199fecf75648c0e952dff143821fa4012b28f90435ce6ee54653687f969a76092a3844e17d478a594f43b28cc10a5c553b4f64906121031c3a79299c70dbd6
result = invalid
shared = 

# tcId = 87
# Public key uses wrong curve: brainpoolP224r1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 3052301406072a8648ce3d020106092b2403030208010105033a00046caa3d6d86f792df7b29e41eb4203150f60f4fca10f57d0b2454abfb201f9f7e6dcbb92bdcfb9240dc86bcaeaf157c77bca22b2ec86ee8d6
result = invalid
shared = 

# tcId = 88
# Public key uses wrong curve: brainpoolP256r1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 305a301406072a8648ce3d020106092b2403030208010107034200042750180012c3ba7489517d428e4826784e50b50ac42ef7991c61a396c03a52da5e74908ae8a89627a7c15e554b105b0ebaeebcfed10e3ea60223d0a8bc3b36ab
result = invalid
shared = 

# tcId = 89
# Public key uses wrong curve: brainpoolP320r1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 306a301406072a8648ce3d020106092b2403030208010109035200045b523d3a8f20f6a569c6951e0b8de48d89e7549a184e8506820421c3e404473692cd248d7480843b911d87a87e401112fce0d3d2c36978cf6dd7f1d93bfaebe0827d4bf4006006d3202e842126fe1b68
result = invalid
shared = 

# tcId = 90
# Public key uses wrong curve: brainpoolP384r1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 307a301406072a8648ce3d020106092b240303020801010b03620004449607c76c6dc7334c269a0ebab5beec83b6c263377ce06ef5c276f45a9916eff85f50438f5f32ced0210a6c414fe5e242c7c1070823f5395b35965bda6758acf84725f11ea836dda7d391fee91342026645241853224a437a6fb74e4cdc871f
result = invalid
shared = 

# tcId = 91
# Public key uses wrong curve: brainpoolP512r1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 30819b301406072a8648ce3d020106092b240303020801010d038182000463e7a491240848e4f53ea5fb857d428c493053193e4b0b4f995ac8bf4c56276a507870131a384aa7e236c64cd7a049a1b37e40ad00c3b8a920dcbad6531616356ce1b6e6d96a7d1b693e25e5abd83ab560a3d764bcd49ec98a1b49421163bd5fc5a625f44c91eb4c2984d5a2e51e816ebdee8fbe08364bb14b7ac876990e64d9
result = invalid
shared = 

# tcId = 92
# Public key uses wrong curve: brainpoolP224t1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 3052301406072a8648ce3d020106092b2403030208010106033a00047c592ecb8908355d1ebf8d59b3619275dbe3666209b72ced6a3c88740456ce61d6a84e0542d7cd10dd8804afb8c784d5dffd9480d8cfdc95
result = invalid
shared = 

# tcId = 93
# Public key uses wrong curve: brainpoolP256t1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 305a301406072a8648ce3d020106092b240303020801010803420004746226a3e005c37ede51828d3375ef91ebd0ff719a380af69d7dfd131b42a3e8917d4a4d573872935a74d1040f1c47d25d6b26f4156cccdcdc11833b9cde433a
result = invalid
shared = 

# tcId = 94
# Public key uses wrong curve: brainpoolP320t1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 306a301406072a8648ce3d020106092b240303020801010a035200043298b36825c7bd90ab5157b913d40bbfd732a0de0557e02a2c65a0c223e9a65d62c32462040dd6fe578103023c831caff122c1ed4b8ff7373fa2f08d11c9f4c7f85f81802262ffed9bb82cb6d92eed2d
result = invalid
shared = 

# tcId = 95
# Public key uses wrong curve: brainpoolP384t1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 307a301406072a8648ce3d020106092b240303020801010c036200043af2849b981f7e5e6ab936e6abb4f206c1fd5561998df8008bfe98d84173c9f2301cdbd5bffc569c0b5a57ce2a8f4d640f1816475fc6043baa8e5a3453bf327b54cb29c7e54a5f31348969aa94615094dbcd1a8e5c2d630465e45fc556c02194
result = invalid
shared = 

# tcId = 96
# Public key uses wrong curve: brainpoolP512t1
private = 2ddd06cb77ca2eae5266a34a107b49e56ffb4c2d3952112da2df90fc
public = 30819b301406072a8648ce3d020106092b240303020801010e038182000453d2506047e72af6d98558e1633ecb7e6a05c37861cd3289455cf41bfbf1703f2e9a83052b8eca7d84cba2f001abd8b978f68b69ed6bd874755c44d347fe302c5760b2078c56b24ebd0dcd99f26b8f8a23044b3767a3d2a306587687a7b00668974674edbf18c3db2f3473a97ee77065fdcdd1a9aa053716a4c504f3d18b9170
result = invalid
shared = 

# tcId = 97
# invalid public key
private = 0fc28a0ca0f8e36b0d4f71421845135a22aef543b9fddf8c775b2d18f
public = 3032301006072a8648ce3d020106052b81040021031e00020ca753db5ddeca474241f8d2dafc0844343fd0e37eded2f0192d51b2
result = invalid
shared = 
# The point in the public key is compressed. Not every library supports points
# in compressed format.

# tcId = 98
# long form encoding of length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30814e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 99
# long form encoding of length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304f30811006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 100
# long form encoding of length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304f30110681072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 101
# long form encoding of length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304f301106072a8648ce3d02010681052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 102
# long form encoding of length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304f301006072a8648ce3d020106052b8104002103813a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 103
# length contains leading 0
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3082004e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 104
# length contains leading 0
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30503082001006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 105
# length contains leading 0
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30503012068200072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 106
# length contains leading 0
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301206072a8648ce3d0201068200052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 107
# length contains leading 0
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301006072a8648ce3d020106052b810400210382003a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 108
# wrong length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304f301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 109
# wrong length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304d301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 110
# wrong length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301106072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 111
# wrong length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e300f06072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 112
# wrong length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006082a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 113
# wrong length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006062a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 114
# wrong length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106062b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 115
# wrong length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106042b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 116
# wrong length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b81040021033b000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 117
# wrong length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b810400210339000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 118
# uint32 overflow in length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3085010000004e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 119
# uint32 overflow in length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30533085010000001006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 120
# uint32 overflow in length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30533015068501000000072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 121
# uint32 overflow in length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3053301506072a8648ce3d0201068501000000052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 122
# uint32 overflow in length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3053301006072a8648ce3d020106052b810400210385010000003a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 123
# uint64 overflow in length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 308901000000000000004e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 124
# uint64 overflow in length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3057308901000000000000001006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 125
# uint64 overflow in length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3057301906890100000000000000072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 126
# uint64 overflow in length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3057301906072a8648ce3d020106890100000000000000052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 127
# uint64 overflow in length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3057301006072a8648ce3d020106052b81040021038901000000000000003a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 128
# length = 2**31 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30847fffffff301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 129
# length = 2**31 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 305230847fffffff06072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 130
# length = 2**31 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3052301406847fffffff2a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 131
# length = 2**31 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3052301406072a8648ce3d020106847fffffff2b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 132
# length = 2**31 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3052301006072a8648ce3d020106052b8104002103847fffffff000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 133
# length = 2**32 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3084ffffffff301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 134
# length = 2**32 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30523084ffffffff06072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 135
# length = 2**32 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 305230140684ffffffff2a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 136
# length = 2**32 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3052301406072a8648ce3d02010684ffffffff2b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 137
# length = 2**32 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3052301006072a8648ce3d020106052b810400210384ffffffff000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 138
# length = 2**40 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3085ffffffffff301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 139
# length = 2**40 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30533085ffffffffff06072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 140
# length = 2**40 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 305330150685ffffffffff2a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 141
# length = 2**40 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3053301506072a8648ce3d02010685ffffffffff2b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 142
# length = 2**40 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3053301006072a8648ce3d020106052b810400210385ffffffffff000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 143
# length = 2**64 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3088ffffffffffffffff301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 144
# length = 2**64 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30563088ffffffffffffffff06072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 145
# length = 2**64 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 305630180688ffffffffffffffff2a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 146
# length = 2**64 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3056301806072a8648ce3d02010688ffffffffffffffff2b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 147
# length = 2**64 - 1
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3056301006072a8648ce3d020106052b810400210388ffffffffffffffff000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 148
# incorrect length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30ff301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 149
# incorrect length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e30ff06072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 150
# incorrect length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006ff2a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 151
# incorrect length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106ff2b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 152
# incorrect length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b8104002103ff000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 153
# indefinite length without termination
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3080301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 154
# indefinite length without termination
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e308006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 155
# indefinite length without termination
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006802a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 156
# indefinite length without termination
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106802b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 157
# indefinite length without termination
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b810400210380000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 158
# removing sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 159
# removing sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 303c033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 160
# lonely sequence tag
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 161
# lonely sequence tag
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 303d30033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 162
# appending 0's to sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da620000
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 163
# appending 0's to sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301206072a8648ce3d020106052b810400210000033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 164
# prepending 0's to sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30500000301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 165
# prepending 0's to sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30503012000006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 166
# appending unused 0's to sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da620000
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 167
# appending unused 0's to sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301006072a8648ce3d020106052b810400210000033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 168
# appending null value to sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da620500
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 169
# appending null value to sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301206072a8648ce3d020106052b810400210500033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 170
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3053498177304e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 171
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30522500304e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 172
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050304e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da620004deadbeef
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 173
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30533015498177301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 174
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 305230142500301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 175
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30563012301006072a8648ce3d020106052b810400210004deadbeef033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 176
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30533015260c49817706072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 177
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30523014260b250006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 178
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30563018260906072a8648ce3d02010004deadbeef06052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 179
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3053301506072a8648ce3d0201260a49817706052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 180
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3052301406072a8648ce3d02012609250006052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 181
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3056301806072a8648ce3d0201260706052b810400210004deadbeef033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 182
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3053301006072a8648ce3d020106052b81040021233f498177033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 183
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3052301006072a8648ce3d020106052b81040021233e2500033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 184
# including garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3056301006072a8648ce3d020106052b81040021233c033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da620004deadbeef
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 185
# including undefined tags
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3056aa00bb00cd00304e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 186
# including undefined tags
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3054aa02aabb304e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 187
# including undefined tags
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30563018aa00bb00cd00301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 188
# including undefined tags
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30543016aa02aabb301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 189
# including undefined tags
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30563018260faa00bb00cd0006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 190
# including undefined tags
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30543016260daa02aabb06072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 191
# including undefined tags
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3056301806072a8648ce3d0201260daa00bb00cd0006052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 192
# including undefined tags
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3054301606072a8648ce3d0201260baa02aabb06052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 193
# including undefined tags
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3056301006072a8648ce3d020106052b810400212342aa00bb00cd00033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 194
# including undefined tags
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3054301006072a8648ce3d020106052b810400212340aa02aabb033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 195
# truncated length of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3081
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 196
# truncated length of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 303e3081033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 197
# Replacing sequence with NULL
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 0500
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 198
# Replacing sequence with NULL
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 303e0500033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 199
# changing tag value of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 2e4e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 200
# changing tag value of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 2f4e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 201
# changing tag value of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 314e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 202
# changing tag value of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 324e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 203
# changing tag value of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = ff4e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 204
# changing tag value of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e2e1006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 205
# changing tag value of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e2f1006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 206
# changing tag value of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e311006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 207
# changing tag value of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e321006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 208
# changing tag value of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304eff1006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 209
# dropping value of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3000
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 210
# dropping value of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 303e3000033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 211
# truncate sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304d301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 212
# truncate sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304d1006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 213
# truncate sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304d300f06072a8648ce3d020106052b810400033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 214
# truncate sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304d300f072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 215
# indefinite length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3080301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da620000
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 216
# indefinite length
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050308006072a8648ce3d020106052b810400210000033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 217
# indefinite length with truncated delimiter
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3080301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da6200
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 218
# indefinite length with truncated delimiter
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304f308006072a8648ce3d020106052b8104002100033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 219
# indefinite length with additional element
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3080301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da6205000000
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 220
# indefinite length with additional element
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3052308006072a8648ce3d020106052b8104002105000000033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 221
# indefinite length with truncated element
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3080301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62060811220000
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 222
# indefinite length with truncated element
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3054308006072a8648ce3d020106052b81040021060811220000033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 223
# indefinite length with garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3080301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da620000fe02beef
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 224
# indefinite length with garbage
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3054308006072a8648ce3d020106052b810400210000fe02beef033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 225
# indefinite length with nonempty EOC
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3080301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da620002beef
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 226
# indefinite length with nonempty EOC
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3052308006072a8648ce3d020106052b810400210002beef033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 227
# prepend empty sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30503000301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 228
# prepend empty sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30503012300006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 229
# append empty sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da623000
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 230
# append empty sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301206072a8648ce3d020106052b810400213000033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 231
# sequence of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050304e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 232
# sequence of sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30503012301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 233
# truncated sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3012301006072a8648ce3d020106052b81040021
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 234
# truncated sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3047300906072a8648ce3d0201033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 235
# repeat element in sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30818a301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 236
# repeat element in sequence
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3055301706072a8648ce3d020106052b8104002106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 237
# removing oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3045300706052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 238
# lonely oid tag
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304630080606052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 239
# lonely oid tag
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3048300a06072a8648ce3d020106033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 240
# appending 0's to oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301206092a8648ce3d0201000006052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 241
# appending 0's to oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301206072a8648ce3d020106072b810400210000033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 242
# prepending 0's to oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30503012060900002a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 243
# prepending 0's to oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301206072a8648ce3d0201060700002b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 244
# appending unused 0's to oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301206072a8648ce3d0201000006052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 245
# appending null value to oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301206092a8648ce3d0201050006052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 246
# appending null value to oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301206072a8648ce3d020106072b810400210500033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 247
# truncated length of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30473009068106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 248
# truncated length of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3049300b06072a8648ce3d02010681033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 249
# Replacing oid with NULL
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30473009050006052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 250
# Replacing oid with NULL
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3049300b06072a8648ce3d02010500033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 251
# changing tag value of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301004072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 252
# changing tag value of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301005072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 253
# changing tag value of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301007072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 254
# changing tag value of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301008072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 255
# changing tag value of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e3010ff072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 256
# changing tag value of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020104052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 257
# changing tag value of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020105052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 258
# changing tag value of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020107052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 259
# changing tag value of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020108052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 260
# changing tag value of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d0201ff052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 261
# dropping value of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30473009060006052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 262
# dropping value of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3049300b06072a8648ce3d02010600033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 263
# modify first byte of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e30100607288648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 264
# modify first byte of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052981040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 265
# modify last byte of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d028106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 266
# modify last byte of oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b810400a1033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 267
# truncate oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304d300f06062a8648ce3d0206052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 268
# truncate oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304d300f06068648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 269
# truncate oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304d300f06072a8648ce3d020106042b810400033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 270
# truncate oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304d300f06072a8648ce3d0201060481040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 271
# wrong oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30513013060a3262306530333032316106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 272
# wrong oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3059301b061236303836343830313635303330343032303106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 273
# wrong oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3053301506072a8648ce3d0201060a32623065303330323161033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 274
# wrong oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 305b301d06072a8648ce3d02010612363038363438303136353033303430323031033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 275
# longer oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3057301906103261383634386365336430323031303106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 276
# longer oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3055301706072a8648ce3d0201060c326238313034303032313031033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 277
# oid with modified node
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 30553017060e326138363438636533643032313106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 278
# oid with modified node
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 305d301f06163261383634386365336430323838383038303830303106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 279
# oid with modified node
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3053301506072a8648ce3d0201060a32623831303430303331033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 280
# oid with modified node
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 305b301d06072a8648ce3d02010612326238313034303038383830383038303231033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 281
# large integer in oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 306730290620326138363438636533643032383238303830383038303830383038303830303106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 282
# large integer in oid
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3065302706072a8648ce3d0201061c32623831303430303832383038303830383038303830383038303231033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 283
# oid with invalid node
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3058301a0611326138363438636533643032303165303306052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 284
# oid with invalid node
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304f301106082a808648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 285
# oid with invalid node
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3056301806072a8648ce3d0201060d32623831303430303231653033033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 286
# oid with invalid node
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304f301106072a8648ce3d020106062b8081040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 287
# lonely bit string tag
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3013301006072a8648ce3d020106052b8104002103
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 288
# appending 0's to bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301006072a8648ce3d020106052b81040021033c000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da620000
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 289
# prepending 0's to bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301006072a8648ce3d020106052b81040021033c0000000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 290
# appending null value to bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3050301006072a8648ce3d020106052b81040021033c000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da620500
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 291
# truncated length of bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3014301006072a8648ce3d020106052b810400210381
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 292
# Replacing bit string with NULL
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3014301006072a8648ce3d020106052b810400210500
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 293
# changing tag value of bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b81040021013a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 294
# changing tag value of bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b81040021023a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 295
# changing tag value of bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b81040021043a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 296
# changing tag value of bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b81040021053a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 297
# changing tag value of bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b81040021ff3a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 298
# dropping value of bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3014301006072a8648ce3d020106052b810400210300
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 299
# modify first byte of bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b81040021033a020486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 300
# modify last byte of bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b81040021033a000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3dae2
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 301
# truncate bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304d301006072a8648ce3d020106052b810400210339000486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 302
# truncate bit string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304d301006072a8648ce3d020106052b8104002103390486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 303
# declaring bits as unused in a bit-string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b81040021033a010486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 304
# unused bits in a bit-string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3052301006072a8648ce3d020106052b81040021033e200486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da6201020304
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 305
# unused bits in empty bit-string
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 3015301006072a8648ce3d020106052b81040021030103
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

# tcId = 306
# 128 unused bits
private = 0a1b9444f59642d428e2f299055004165a34c3b8796c5057ae8a1a572
public = 304e301006072a8648ce3d020106052b81040021033a800486e2f72bccd974a3f1a4fc2cdcf22043eaf8be047de6be726b62001fda6f50f6df0b51bee99195d8a1a1c97e59e72fa4fcf8c1d21cb3da62
result = acceptable
shared = 85a70fc4dfc8509fb9ba1cfcf1879443e2ce176d794228029b10da63
# The public key in this test uses an invalid ASN encoding. Some cases where the
# ASN parser is not strictly checking the ASN format are benign as long as the
# ECDH computation still returns the correct shared value.

