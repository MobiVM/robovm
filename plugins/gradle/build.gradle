plugins {
    id "com.github.johnrengelman.shadow" version "8.1.0"
    id 'java'
    id 'groovy'
    id 'maven-publish'
    id 'signing'
    id 'eclipse'
}


group = 'com.mobidevelop.robovm'
archivesBaseName = 'robovm-gradle-plugin'
version = '2.3.22-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs.addAll(['--release', '8'])
}

ext {
    roboVMVersion = '2.3.22-SNAPSHOT'
    nexusUsername = System.getenv('MAVEN_USERNAME')
    nexusPassword = System.getenv('MAVEN_PASSWORD')
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    compileOnly gradleApi()
    compileOnly localGroovy()
    implementation "org.apache.commons:commons-compress:1.22"
    implementation "com.mobidevelop.robovm:robovm-compiler:${roboVMVersion}"
    implementation 'org.sonatype.aether:aether:1.13.1'
    implementation 'org.sonatype.aether:aether-connector-wagon:1.13.1'
    implementation 'org.apache.maven:maven-aether-provider:3.0.4'
    implementation 'org.apache.maven.wagon:wagon-provider-api:2.4'
    implementation 'org.apache.maven.wagon:wagon-http:2.4'
    testImplementation group: 'junit', name: 'junit', version: '4.11'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.mobidevelop.robovm'
            artifactId = 'robovm-gradle-plugin'
            from components.java

            pom {
                name = 'RoboVM Gradle Plugin'
                packaging = 'jar'
                description = 'The RoboVM Gradle Plugin provides a way to build RoboVM apps using Gradle.'
                url = 'https://github.com/mobidevelop/robovm/'
                inceptionYear = '2013'

                scm {
                    url = 'https://github.com/mobidevelop/robovm.git'
                    connection = 'scm:git:git://github.com/mobidevelop/robovm.git'
                    developerConnection = 'scm:git:git@github.com:mobidevelop/robovm.git'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'jtakakura'
                        name = 'Junji Takakura'
                    }
                    developer {
                        id = 'ntherning'
                        name = 'Niklas Therning'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")            }
        }
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

shadowJar {
    archiveClassifier.set('')
    dependencies {
        exclude(dependency("com.mobidevelop.robovm:robovm-compiler:${roboVMVersion}"));
    }
    relocate 'org.apache.http', 'com.mobidevelop.robovm.org.apache.http'
    relocate 'org.apache.commons.io', 'com.mobidevelop.robovm.org.apache.commons.io'
    relocate 'org.objectweb.asm', 'com.mobidevelop.robovm.asm'
}

// suppress "warning: no comment"
tasks.withType(Javadoc) {
    options.addBooleanOption("Xdoclint:-missing", true)
}

signing {
    required { !version.endsWith('SNAPSHOT') && gradle.taskGraph.hasTask("publish") }
    sign publishing.publications.mavenJava
}

assemble.dependsOn('shadowJar')
publishToMavenLocal.dependsOn('shadowJar')
publish.dependsOn('shadowJar')
